openapi: 3.0.1
info:
  title: Wiedpug.API
  version: v1
paths:
  /auction-catalogue:
    post:
      tags:
        - Auction Catalogue
      summary: Used by brokers to transmit auction catalogue data to the Network for auctions regulated by the Australian Wool Exchange Limited.
      operationId: CreateAuctionCatalogue
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuctionCatalogue'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResult'
              example: {"isSuccessful":true,"message":"Success message if applicable, otherwise can be set to Null","data":"{Response Data depending on the document type's data structure e.g. Auction Catalogue Data}"}
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/CustomProblemDetails'
              example: {"type":"https://datatracker.ietf.org/doc/html/rfc9110#name-500-internal-server-error","title":"An error occurred while processing your required","status":500,"detail":"Error details..","errors":null}
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/CustomProblemDetails'
              example: {"type":"https://datatracker.ietf.org/doc/html/rfc9110#name-500-internal-server-error","title":"An error occurred while processing your required","status":500,"detail":"Error details..","errors":null}
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/CustomProblemDetails'
              example: {"type":"https://datatracker.ietf.org/doc/html/rfc9110#name-500-internal-server-error","title":"An error occurred while processing your required","status":500,"detail":"Error details..","errors":null}
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/CustomProblemDetails'
              example: {"type":"https://datatracker.ietf.org/doc/html/rfc9110#name-500-internal-server-error","title":"An error occurred while processing your required","status":500,"detail":"Error details..","errors":null}
  /organization-details:
    post:
      tags:
        - Organization Detail
      summary: Creates new Org.
      description: Org Description
      operationId: CreateOrganizationDetail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationDetail'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResult'
              example: {"isSuccessful":true,"message":"Success message if applicable, otherwise can be set to Null","data":"{Response Data depending on the document type's data structure e.g. Auction Catalogue Data}"}
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/CustomProblemDetails'
              example: {"type":"https://datatracker.ietf.org/doc/html/rfc9110#name-500-internal-server-error","title":"An error occurred while processing your required","status":500,"detail":"Error details..","errors":null}
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/CustomProblemDetails'
              example: {"type":"https://datatracker.ietf.org/doc/html/rfc9110#name-500-internal-server-error","title":"An error occurred while processing your required","status":500,"detail":"Error details..","errors":null}
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/CustomProblemDetails'
              example: {"type":"https://datatracker.ietf.org/doc/html/rfc9110#name-500-internal-server-error","title":"An error occurred while processing your required","status":500,"detail":"Error details..","errors":null}
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/CustomProblemDetails'
              example: {"type":"https://datatracker.ietf.org/doc/html/rfc9110#name-500-internal-server-error","title":"An error occurred while processing your required","status":500,"detail":"Error details..","errors":null}
  /request-for-details-or-status:
    post:
      tags:
        - Request for Data/Status
      summary: Retrieves the requested details or status
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestForDataOrStatus'
            example: {"requests":[{"transmissionHeader":{"dateFormatLastRevised":"2022-07-25","dateTransmissionFileCreated":"2024-03-21","countryOfOrigin":"AU","documentOriginator":"AWTX","currentTransmitter":"AWTX","currentReceiver":"AWTM","finalReceiver":"AWTM","accessPassword":"1111111111","accessPasswordReplacement":null,"transmissionType":2,"versionNumber":36,"softwareIdentifier":null,"abn":"00000000000"},"requestForDataCollection":[{"transmissionTypeRequested":2,"saleIdentity":{"sellingCentreType":"F","saleNumber":18},"organisationRequested":"AWNF","saleDateRequested":"2023-10-31","startDateTimeStatusRequest":null,"endDateTimeStatusRequest":null,"userNetworkDateTime":false,"requestType":4,"woolTypeGroup":"MFLC","recordTypesToBeExcluded":["79B","32A","84"],"season":23}]}]}
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResult'
              example: {"isSuccessful":true,"message":"Success message if applicable, otherwise can be set to Null","data":"{Response Data depending on the document type's data structure e.g. Auction Catalogue Data}"}
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/CustomProblemDetails'
              example: {"type":"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5.1","title":"One or more validation errors occurred","status":400,"detail":"","errors":{"Requests[0].TransmissionHeader.DateFormatLastRevised":["The field DateFormatLastRevised is required","The field DateFormatLastRevised must match regulart expression pattern..."],"Requests[0].TransmissionHeader.CountryOfOrigin":["The field CountryOfOrigin is required"]}}
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/CustomProblemDetails'
              example: {"type":"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5.2","title":"Unauthorized","status":401,"detail":"Missing authentication credentials","errors":null}
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/CustomProblemDetails'
              example: {"type":"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5.4","title":"You don't have permission to access this resource","status":403,"detail":"You don't have a 'read' access to access this resource","errors":null}
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/CustomProblemDetails'
              example: {"type":"https://datatracker.ietf.org/doc/html/rfc9110#name-500-internal-server-error","title":"An error occurred while processing your required","status":500,"detail":"Error details..","errors":null}
components:
  schemas:
    ApiResult:
      required:
        - isSuccessful
      type: object
      properties:
        isSuccessful:
          type: boolean
          description: Indicator if the request has been successfully processed.
        message:
          type: string
          description: Contains information about the response if applicable.
          nullable: true
        data:
          description: Contains response data. e.g. Auction Catalogue
          nullable: true
      additionalProperties: false
      description: A standard API response object used for all successful API responses
    AuctionCatalogue:
      required:
        - transmissionHeader
        - woolSaleHeaderLots
      type: object
      properties:
        transmissionHeader:
          $ref: '#/components/schemas/TransmissionHeader'
        woolSaleHeaderLots:
          $ref: '#/components/schemas/WoolSaleHeaderLots'
      additionalProperties: false
    CalculationBasis:
      enum:
        - B
        - K
        - P
      type: string
      description: "This is used to identify the method used to calculate the post sale charge.\r\nThe post sale charge may be a per bale, per kilogram or percentage of the price of the wool.\r\nCalculation Basis is always per bale in Australia."
    CatalogueSection:
      enum:
        - BLK
        - DEAD
        - FLC
        - FMG
        - ODD
        - SKIN
        - SKT
        - TRAD
        - XBD
      type: string
      description: These are the codes allocated by the local wool authorities to sectionalise the sale catalogues.
    Centre:
      enum:
        - AU_A
        - AU_AD
        - AU_AR
        - AU_AU
        - AU_B
        - AU_BA
        - AU_BK
        - AU_BL
        - AU_BM
        - AU_BO
        - AU_BR
        - AU_BT
        - AU_C
        - AU_CA
        - AU_CB
        - AU_CC
        - AU_CL
        - AU_CN
        - AU_CO
        - AU_CR
        - AU_CU
        - AU_CW
        - AU_D
        - AU_DE
        - AU_DO
        - AU_DR
        - AU_E
        - AU_ER
        - AU_ES
        - AU_F
        - AU_G
        - AU_GF
        - AU_GI
        - AU_GN
        - AU_GR
        - AU_GU
        - AU_H
        - AU_HA
        - AU_HB
        - AU_HM
        - AU_HO
        - AU_HY
        - AU_I
        - AU_J
        - AU_JA
        - AU_K
        - AU_KE
        - AU_KH
        - AU_KI
        - AU_KN
        - AU_KT
        - AU_KW
        - AU_KY
        - AU_L
        - AU_LC
        - AU_M
        - AU_MA
        - AU_MB
        - AU_MC
        - AU_ME
        - AU_MG
        - AU_MI
        - AU_MO
        - AU_MR
        - AU_MU
        - AU_N
        - AU_NA
        - AU_ND
        - AU_NO
        - AU_NR
        - AU_OB
        - AU_OR
        - AU_P
        - AU_PA
        - AU_PL
        - AU_Q
        - AU_QU
        - AU_R
        - AU_S
        - AU_SG
        - AU_SH
        - AU_SK
        - AU_SW
        - AU_SY
        - AU_T
        - AU_TE
        - AU_U
        - AU_UR
        - AU_V
        - AU_W
        - AU_WA
        - AU_WG
        - AU_WL
        - AU_WN
        - AU_WR
        - AU_WW
        - AU_X
        - AU_Y
        - AU_YA
        - AU_YM
        - AU_YO
        - AU_Z
        - OS_ZA
        - OS_ZB
        - OS_ZC
        - OS_ZD
        - OS_ZE
        - OS_ZF
        - OS_ZG
        - OS_ZH
        - OS_ZI
        - OS_ZJ
        - OS_ZK
        - OS_ZL
        - OS_ZM
        - OS_ZN
        - OS_ZO
        - OS_ZP
        - OS_ZQ
        - OS_ZR
        - OS_ZS
        - OS_ZT
        - OS_ZU
        - OS_ZV
        - OS_ZW
        - OS_ZX
        - OS_ZY
        - OS_ZZ
        - NZ_A
        - NZ_AW
        - NZ_B
        - NZ_BL
        - NZ_BT
        - NZ_C
        - NZ_CV
        - NZ_D
        - NZ_F
        - NZ_FA
        - NZ_G
        - NZ_GD
        - NZ_GO
        - NZ_HA
        - NZ_HS
        - NZ_I
        - NZ_J
        - NZ_K
        - NZ_KA
        - NZ_KP
        - NZ_L
        - NZ_LO
        - NZ_LU
        - NZ_M
        - NZ_MA
        - NZ_MK
        - NZ_MT
        - NZ_MU
        - NZ_N
        - NZ_NE
        - NZ_O
        - NZ_OH
        - NZ_OI
        - NZ_OM
        - NZ_OT
        - NZ_P
        - NZ_PT
        - NZ_PU
        - NZ_R
        - NZ_RG
        - NZ_RI
        - NZ_S
        - NZ_SA
        - NZ_SH
        - NZ_SY
        - NZ_T
        - NZ_TA
        - NZ_TE
        - NZ_TH
        - NZ_TP
        - NZ_U
        - NZ_V
        - NZ_W
        - NZ_WH
        - NZ_WI
        - NZ_WR
        - NZ_WT
        - NZ_WU
        - NZ_X
        - NZ_Y
        - NZ_YP
        - NZ_Z
      type: string
      description: "This is combined Centres for Australia, Overseas and New Zealand.\r\nA centre is a town where any activity connected with the wool industry takes place.\r\nThe codes used in transmissions are those defined in the Australian Wool Selling Regulation."
    CountryCode:
      enum:
        - AU
        - NZ
        - FR
        - ZA
      type: string
      description: 'Country Code using ISO 3166-1 standard<br />Australia: AU<br />New Zealand: NZ<br />France: FR<br />South Africa: ZA'
    CustomProblemDetails:
      required:
        - status
        - title
      type: object
      properties:
        type:
          type: string
          description: "A URI reference [RFC3986] that identifies the problem type.\r\nThis specification encourages that, when dereferenced, it provide human-readable documentation for the problem type (e.g., using HTML [W3C.REC-html5-20141028]). \r\nWhen this member is not present, its value is assumed to be \"about:blank\".      \r\ne.g. For 400 Bad Request, the \"type\" value can be \"https://tools.ietf.org/html/rfc9110#section-15.5.1\""
          nullable: true
        title:
          minLength: 1
          type: string
          description: "A short, human-readable summary of the problem type. \r\nIt SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization(e.g., using proactive content negotiation; see[RFC7231], Section 3.4).\r\ne.g. \"One or more validation errors occurred.\""
        status:
          type: integer
          description: 'The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.'
          format: int32
        detail:
          type: string
          description: 'A human-readable explanation specific to this occurrence of the problem. e.g. 400, 403, etc.'
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
            nullable: true
          description: 'Dictionary of errors in <PropertyName, ErrorDetails[]> format. e.g. errors: { "name": ["Product name is required"], "category": ["Category name cannot be longer than 20 characters."]  }'
          nullable: true
      additionalProperties: false
      description: A machine-readable format for specifying errors in HTTP API responses based on https://tools.ietf.org/html/rfc7807.
    DeliveryBasis:
      enum:
        - 0
        - 1
      type: integer
      description: Delivery Nominated Destination<br />Loaded on Transport
      format: int32
    OrganizationDetail:
      required:
        - transmissionHeader
      type: object
      properties:
        transmissionHeader:
          $ref: '#/components/schemas/TransmissionHeader'
        season:
          type: string
          description: 'Summer, winter'
          nullable: true
      additionalProperties: false
    RequestForData:
      required:
        - requestType
        - transmissionTypeRequested
      type: object
      properties:
        transmissionTypeRequested:
          $ref: '#/components/schemas/TransmissionType'
        saleIdentity:
          $ref: '#/components/schemas/SaleIdentity'
        organisationRequested:
          type: string
          nullable: true
        saleDateRequested:
          pattern: '/(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$/'
          type: string
          description: Date value in ISO 8601 standard. e.g. 2024-03-21
          format: date
          nullable: true
        startDateTimeStatusRequest:
          pattern: '/(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])[+-]?(((([0][0-9])|([1][0-3])):(([03][0])|([14][5])))|14:00)$/'
          type: string
          description: Date and Time with offset value in ISO 8601 standard. e.g. 2024-03-21T19:25:04+00:00
          format: date-time
          nullable: true
        endDateTimeStatusRequest:
          pattern: '/(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])[+-]?(((([0][0-9])|([1][0-3])):(([03][0])|([14][5])))|14:00)$/'
          type: string
          description: Date and Time with offset value in ISO 8601 standard. e.g. 2024-03-21T19:25:04+00:00
          format: date-time
          nullable: true
        userNetworkDateTime:
          type: boolean
          nullable: true
        requestType:
          $ref: '#/components/schemas/RequestType'
        woolTypeGroup:
          $ref: '#/components/schemas/WoolTypeGroup'
        recordTypesToBeExcluded:
          type: array
          items:
            type: string
          description: 'Record types and record sub-types to be excluded. e.g. 20 - Lot Header, 22A - Group Header'
          nullable: true
        season:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    RequestForDataGroup:
      required:
        - requestForDataCollection
        - transmissionHeader
      type: object
      properties:
        transmissionHeader:
          $ref: '#/components/schemas/TransmissionHeader'
        requestForDataCollection:
          maxItems: 53
          type: array
          items:
            $ref: '#/components/schemas/RequestForData'
      additionalProperties: false
    RequestForDataOrStatus:
      required:
        - requests
      type: object
      properties:
        requests:
          type: array
          items:
            $ref: '#/components/schemas/RequestForDataGroup'
      additionalProperties: false
    RequestType:
      enum:
        - 1
        - 2
        - 3
        - 4
      type: integer
      description: '1: Private Data Request<br />2: Status Request<br />3: Data Request<br />4: Broadcast Data Request'
      format: int32
    SaleIdentity:
      type: object
      properties:
        sellingCentreType:
          type: string
          nullable: true
        saleNumber:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    SoftwareIdentifier:
      type: object
      properties:
        softwareCompany:
          type: string
          nullable: true
        version:
          type: integer
          description: Version no. e.g. 2400
          format: int32
          nullable: true
        programName:
          type: string
          nullable: true
      additionalProperties: false
    TransmissionHeader:
      required:
        - abn
        - countryOfOrigin
        - currentReceiver
        - currentTransmitter
        - dateFormatLastRevised
        - dateTransmissionFileCreated
        - documentOriginator
        - finalReceiver
        - transmissionType
      type: object
      properties:
        dateFormatLastRevised:
          minLength: 1
          pattern: '/(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$/'
          type: string
          description: Date value in ISO 8601 standard. e.g. 2024-03-21 (year-month-day)
          format: date
        dateTransmissionFileCreated:
          minLength: 1
          pattern: '/(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$/'
          type: string
          description: Date value in ISO 8601 standard. e.g. 2024-03-21 (year-month-day)
          format: date
        countryOfOrigin:
          $ref: '#/components/schemas/CountryCode'
        documentOriginator:
          minLength: 1
          type: string
        currentTransmitter:
          minLength: 1
          type: string
        currentReceiver:
          minLength: 1
          type: string
        finalReceiver:
          minLength: 1
          type: string
        accessPassword:
          type: string
          nullable: true
        accessPasswordReplacement:
          type: string
          nullable: true
        transmissionType:
          $ref: '#/components/schemas/TransmissionType'
        versionNumber:
          type: integer
          format: int32
          nullable: true
        softwareIdentifier:
          $ref: '#/components/schemas/SoftwareIdentifier'
        abn:
          minLength: 1
          type: string
      additionalProperties: false
    TransmissionType:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 11
        - 13
        - 16
        - 17
        - 50
        - 52
        - 55
        - 56
        - 60
        - 64
        - 98
        - 99
      type: integer
      description: 'The code used to indicate what type of documents is being transmitted, eg. Brokers’ catalogues or lot invoices.<br />0: Lot Invoices<br />1: Delivery Orders<br />2: Auction Catalogues<br />3: Private Catalogues<br />4: Group Invoices<br />5: Auction Catalogue Updates<br />6: Request Post-Sale Printing of Pre-Sale Certificates<br />7: Statements<br />8: Test Certificate Requests<br />11: Organisation Details<br />13: Lot Price and Buyer<br />16: Delivery Order Summary<br />17: Payment Advice<br />50: Test Certificate<br />52: Test Status<br />55: Test Request Verification<br />56: Dark and Medullated Fibre Risk Verification<br />60: Test Certificate Update<br />64: Payment Confirmation File<br />98: Text File<br />99: Password Replacement'
      format: int32
    WeightUnit:
      enum:
        - 0
        - 1
      type: integer
      description: '0: Kilograms<br />1: Pounds'
      format: int32
    WoolSaleHeaderLots:
      required:
        - calculationBasis
        - catalogueSection
        - centreCatalogue
        - centreStorage
        - currency
        - deliveryBasis
        - invoicingOrganisation
        - packType
        - postSaleCharge
        - releasingOrganisation
        - saleDate
        - saleIdentity
        - season
        - sellingOrganisation
        - weightUnit
        - woolState
        - woolTypeGroup
      type: object
      properties:
        season:
          type: integer
          format: int32
        saleIdentity:
          $ref: '#/components/schemas/SaleIdentity'
        centreStorage:
          minLength: 1
          type: string
          description: "The centre (code) representing the location at which the wool is stored (relevant to the intended use of the document). \r\nFor example, the Centre- Storage against a lot in the AC or ACU is the location of the wool where the buyer would expect to take delivery."
        saleDate:
          minLength: 1
          pattern: '/(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$/'
          type: string
          format: date
        woolState:
          minLength: 1
          type: string
          description: The state of the wool itemised in the invoice
        packType:
          minLength: 1
          type: string
          description: A code used to indicate how the wool has been baled. The most common type is Farm bales.
        currency:
          maxLength: 3
          minLength: 1
          type: string
          description: The Code for the currency in which the sale was made. To obtain the current code list please use the Commonwealth Bank Currency Codes on their website
        weightUnit:
          $ref: '#/components/schemas/WeightUnit'
        postSaleCharge:
          minimum: 1
          type: number
          description: "This is the published rate for the charge levied by the broker to the buyer for each bale purchased and is included in the last cost of the wool.\r\nIt will not include freight if freight is listed separately in the Freight Charge field, if freight is not listed in the Freight Charge field it will include freight. \r\nIn Australia it will always include freight as the Freight Charge field is not used"
          format: double
        calculationBasis:
          $ref: '#/components/schemas/CalculationBasis'
        freightCharge:
          type: number
          description: "If specified, this is not part of the last cost of the wool. \r\nIf a freight charge is not included in the post Sale Charge, then the freight charge is the charge levied by the broker should the buyer request that the broker transport the wool to the nearest designated area (usually a shipping port). \r\nFreight Charge is not used in Australia."
          format: double
          nullable: true
        freightRebate:
          type: number
          format: double
          nullable: true
        chargePerLot:
          type: number
          description: Any charge made for a lot which is not covered by the Post Sale Charge or the Freight charge per Bale fields.
          format: double
          nullable: true
        invoiceNumber:
          type: string
          nullable: true
        catalogueSection:
          $ref: '#/components/schemas/CatalogueSection'
        invoicingOrganisation:
          minLength: 1
          type: string
          description: The code for the broker who will raise the invoice for the wool
        releasingOrganisation:
          minLength: 1
          type: string
          description: The broker that is responsible for releasing the wool out of the store
        sellingOrganisation:
          minLength: 1
          type: string
        woolTypeGroup:
          $ref: '#/components/schemas/WoolTypeGroup'
        centreCatalogue:
          $ref: '#/components/schemas/Centre'
        deliveryBasis:
          $ref: '#/components/schemas/DeliveryBasis'
        centreDelivery:
          $ref: '#/components/schemas/Centre'
        alternateDelivery:
          $ref: '#/components/schemas/Centre'
      additionalProperties: false
    WoolTypeGroup:
      enum:
        - MFLC
        - MSKT
        - XBFS
        - ODDS
      type: string
      description: 'A code to indicate which section of the sale that lot belongs.<br />MFLC: Merino fleece types<br />MSKT: Merino fleece types<br />XBFS: Merino fleece types<br />ODDS: Merino fleece types'