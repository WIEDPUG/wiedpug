openapi: 3.0.1
info:
  title: Wiedpug.API
  version: v1
paths:
  /auction-catalogue:
    post:
      tags:
        - Auction Catalogue
      summary: Used by brokers to transmit broadcast and private auction catalogue data to the Network for auctions regulated by the Australian Wool Exchange Limited.
      operationId: CreateAuctionCatalogue
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuctionCatalogue'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResult'
              example: {"isSuccessful":true,"message":"Success message if applicable, otherwise can be set to Null","data":"{Response Data depending on the document type's data structure e.g. Auction Catalogue Data}"}
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/CustomProblemDetails'
              example: {"type":"https://datatracker.ietf.org/doc/html/rfc9110#name-500-internal-server-error","title":"An error occurred while processing your required","status":500,"detail":"Error details..","errors":null}
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/CustomProblemDetails'
              example: {"type":"https://datatracker.ietf.org/doc/html/rfc9110#name-500-internal-server-error","title":"An error occurred while processing your required","status":500,"detail":"Error details..","errors":null}
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/CustomProblemDetails'
              example: {"type":"https://datatracker.ietf.org/doc/html/rfc9110#name-500-internal-server-error","title":"An error occurred while processing your required","status":500,"detail":"Error details..","errors":null}
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/CustomProblemDetails'
              example: {"type":"https://datatracker.ietf.org/doc/html/rfc9110#name-500-internal-server-error","title":"An error occurred while processing your required","status":500,"detail":"Error details..","errors":null}
    get:
      tags:
        - Auction Catalogue
      summary: Used by brokers to request original or updated auction catalogue data to the Network for auctions regulated by the Australian Wool Exchange Limited.
      operationId: GetAuctionCatalogue
      parameters:
        - name: originalOrUpdated
          in: query
          required: true
          style: form
          schema:
            type: boolean
        - name: season
          in: query
          required: true
          style: form
          schema:
            type: string
        - name: sale
          in: query
          required: true
          style: form
          schema:
            type: string
        - name: invoicingOrg
          in: query
          required: true
          style: form
          schema:
            type: string
        - name: lotNumber
          in: query
          required: true
          style: form
          schema:
            type: string
      requestBody:
        content: { }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResult'
              example: {"isSuccessful":true,"message":"Success message if applicable, otherwise can be set to Null","data":"{Response Data depending on the document type's data structure e.g. Auction Catalogue Data}"}
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/CustomProblemDetails'
              example: {"type":"https://datatracker.ietf.org/doc/html/rfc9110#name-500-internal-server-error","title":"An error occurred while processing your required","status":500,"detail":"Error details..","errors":null}
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/CustomProblemDetails'
              example: {"type":"https://datatracker.ietf.org/doc/html/rfc9110#name-500-internal-server-error","title":"An error occurred while processing your required","status":500,"detail":"Error details..","errors":null}
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/CustomProblemDetails'
              example: {"type":"https://datatracker.ietf.org/doc/html/rfc9110#name-500-internal-server-error","title":"An error occurred while processing your required","status":500,"detail":"Error details..","errors":null}
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/CustomProblemDetails'
              example: {"type":"https://datatracker.ietf.org/doc/html/rfc9110#name-500-internal-server-error","title":"An error occurred while processing your required","status":500,"detail":"Error details..","errors":null}
  /request-for-details-or-status:
    post:
      tags:
        - Request for Data/Status
      summary: Retrieves the requested details or status
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestForDataOrStatus'
            example: {"requests":[{"transmissionHeader":{"dateFormatLastRevised":"2022-07-25","dateTransmissionFileCreated":"2024-03-21","countryOfOrigin":"AU","documentOriginator":"AWTX","currentTransmitter":"AWTX","currentReceiver":"AWTM","finalReceiver":"AWTM","accessPassword":"1111111111","accessPasswordReplacement":null,"transmissionType":2,"versionNumber":36,"softwareIdentifier":null,"abn":"00000000000"},"requestForDataCollection":[{"transmissionTypeRequested":2,"saleIdentity":{"sellingCentreType":"F","saleNumber":18},"organisationRequested":"AWNF","saleDateRequested":"2023-10-31","startDateTimeStatusRequest":null,"endDateTimeStatusRequest":null,"userNetworkDateTime":false,"requestType":4,"woolTypeGroup":"MFLC","recordTypesToBeExcluded":["79B","32A","84"],"season":23}]}]}
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResult'
              example: {"isSuccessful":true,"message":"Success message if applicable, otherwise can be set to Null","data":"{Response Data depending on the document type's data structure e.g. Auction Catalogue Data}"}
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/CustomProblemDetails'
              example: {"type":"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5.1","title":"One or more validation errors occurred","status":400,"detail":"","errors":{"Requests[0].TransmissionHeader.DateFormatLastRevised":["The field DateFormatLastRevised is required","The field DateFormatLastRevised must match regulart expression pattern..."],"Requests[0].TransmissionHeader.CountryOfOrigin":["The field CountryOfOrigin is required"]}}
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/CustomProblemDetails'
              example: {"type":"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5.2","title":"Unauthorized","status":401,"detail":"Missing authentication credentials","errors":null}
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/CustomProblemDetails'
              example: {"type":"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5.4","title":"You don't have permission to access this resource","status":403,"detail":"You don't have a 'read' access to access this resource","errors":null}
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/CustomProblemDetails'
              example: {"type":"https://datatracker.ietf.org/doc/html/rfc9110#name-500-internal-server-error","title":"An error occurred while processing your required","status":500,"detail":"Error details..","errors":null}
components:
  schemas:
    ApiResult:
      required:
        - isSuccessful
      type: object
      properties:
        isSuccessful:
          type: boolean
          description: Indicator if the request has been successfully processed.
        message:
          type: string
          description: Contains information about the response if applicable.
          nullable: true
        data:
          description: Contains response data. e.g. Auction Catalogue
          nullable: true
      additionalProperties: false
      description: A standard API response object used for all successful API responses
    AuctionCatalogue:
      required:
        - transmissionHeader
        - woolSaleHeaders
      type: object
      properties:
        transmissionHeader:
          $ref: '#/components/schemas/TransmissionHeader'
        woolSaleHeaders:
          type: array
          items:
            $ref: '#/components/schemas/AuctionCatalogueWoolSaleHeader'
      additionalProperties: false
    AuctionCatalogueWoolSaleHeader:
      required:
        - lots
        - woolSaleHeaderExtension
        - woolSaleHeaderLots
      type: object
      properties:
        woolSaleHeaderLots:
          $ref: '#/components/schemas/WoolSaleHeaderLots'
        woolSaleHeaderExtension:
          $ref: '#/components/schemas/WoolSaleHeaderExtension'
        woolSaleHeaderNonAuction:
          $ref: '#/components/schemas/WoolSaleHeaderNonAuction'
        lots:
          type: array
          items:
            $ref: '#/components/schemas/AuctionCatalogueWoolSaleHeaderLot'
      additionalProperties: false
    AuctionCatalogueWoolSaleHeaderLot:
      required:
        - lotHeaderVendorDeclarations
      type: object
      properties:
        lotHeader:
          $ref: '#/components/schemas/LotHeader'
        lotHeaderExtension:
          $ref: '#/components/schemas/LotHeaderExtension'
        lotHeaderPricings:
          maxItems: 2
          type: array
          items:
            $ref: '#/components/schemas/LotHeaderPricingData'
          nullable: true
        lotHeaderAwexData:
          $ref: '#/components/schemas/LotHeaderAwexData'
        lotHeaderVendorDeclarations:
          type: array
          items:
            $ref: '#/components/schemas/LotHeaderVendorDeclaration'
        histograms:
          type: array
          items:
            $ref: '#/components/schemas/AuctionCatalogueWoolSaleHeaderLotHistogram'
          nullable: true
      additionalProperties: false
    AuctionCatalogueWoolSaleHeaderLotHistogram:
      required:
        - fibreDiameterHistogramDetails
        - fibreDiameterHistogramHeader
      type: object
      properties:
        fibreDiameterHistogramHeader:
          $ref: '#/components/schemas/FibreDiameterHistogramHeader'
        fibreDiameterHistogramDetails:
          maximum: 9
          minimum: 0
          type: array
          items:
            $ref: '#/components/schemas/FibreDiameterHistogramDetail'
      additionalProperties: false
    CalculationBasis:
      enum:
        - B
        - K
        - P
      type: string
      description: 'This is used to identify the method used to calculate the post sale charge. The post sale charge may be a per bale, per kilogram or percentage of the price of the wool. Calculation Basis is always per bale in Australia.<br />B: Post sale charge is levied per bale<br />K: The post sale charge is a charge per kil<br />P: The post sale charge is a % of first cost'
    CatalogueSection:
      enum:
        - BLK
        - DEAD
        - FLC
        - FMG
        - ODD
        - SKIN
        - SKT
        - TRAD
        - XBD
      type: string
      description: 'These are the codes allocated by the local wool authorities to sectionalise the sale catalogues.<br />BLK: ODDS - Black<br />DEAD: ODDS - Dead<br />FLC: MFLC - Merino Fleece<br />FMG: ODDS - Fellmongered<br />ODD: ODDS - Oddments<br />SKIN: ODDS - Skin Wool<br />SKT: MSKT - Skirting<br />TRAD: MFLC / MSKT / XBFS / ODDS - Traditionally Shown<br />XBD: C XBFS - Crossbred (Flc & Skt)'
    CatalogueSymbol:
      enum:
        - A
        - C
        - D
        - G
        - H
        - M
        - O
        - R
        - S
        - T
        - U
        - W
        - X
        - Y
      type: string
      description: 'These are the symbols defined in the AWEX Wool Selling Rules. To obtain the current code list of values that may be used in this field please go to this URL: http://www.awex.com.au/standards/catalogue<br />A: Dumped Bales<br />C: Charity/Good Cause<br />D: De-banded<br />G: Lot offered under Trial Selling Status<br />H: Classed Samples (bearing Classing House stencil)<br />M: Machine processed (Decotted, crushed or blended)<br />O: Fellmongered<br />R: Reconditioned from wet<br />S: Wool is unclassed<br />T: Tested (where Test House is not AWTA)<br />U: Unskirted or Not Skirted to Code of Practice requirements<br />W: Broker (Re)classed (Classing House stencil - P cert. only)<br />X: Contains Broker Inspected (Classing House stencil - I cert. only)<br />Y: Pigmented and/or Medullated Fibre Risk (Run with or Black section)'
    Centre:
      enum:
        - AU_A
        - AU_AD
        - AU_AR
        - AU_AU
        - AU_B
        - AU_BA
        - AU_BK
        - AU_BL
        - AU_BM
        - AU_BO
        - AU_BR
        - AU_BT
        - AU_C
        - AU_CA
        - AU_CB
        - AU_CC
        - AU_CL
        - AU_CN
        - AU_CO
        - AU_CR
        - AU_CU
        - AU_CW
        - AU_D
        - AU_DE
        - AU_DO
        - AU_DR
        - AU_E
        - AU_ER
        - AU_ES
        - AU_F
        - AU_G
        - AU_GF
        - AU_GI
        - AU_GN
        - AU_GR
        - AU_GU
        - AU_H
        - AU_HA
        - AU_HB
        - AU_HM
        - AU_HO
        - AU_HY
        - AU_I
        - AU_J
        - AU_JA
        - AU_K
        - AU_KE
        - AU_KH
        - AU_KI
        - AU_KN
        - AU_KT
        - AU_KW
        - AU_KY
        - AU_L
        - AU_LC
        - AU_M
        - AU_MA
        - AU_MB
        - AU_MC
        - AU_ME
        - AU_MG
        - AU_MI
        - AU_MO
        - AU_MR
        - AU_MU
        - AU_N
        - AU_NA
        - AU_ND
        - AU_NO
        - AU_NR
        - AU_OB
        - AU_OR
        - AU_P
        - AU_PA
        - AU_PL
        - AU_Q
        - AU_QU
        - AU_R
        - AU_S
        - AU_SG
        - AU_SH
        - AU_SK
        - AU_SW
        - AU_SY
        - AU_T
        - AU_TE
        - AU_U
        - AU_UR
        - AU_V
        - AU_W
        - AU_WA
        - AU_WG
        - AU_WL
        - AU_WN
        - AU_WR
        - AU_WW
        - AU_X
        - AU_Y
        - AU_YA
        - AU_YM
        - AU_YO
        - AU_Z
        - OS_ZA
        - OS_ZB
        - OS_ZC
        - OS_ZD
        - OS_ZE
        - OS_ZF
        - OS_ZG
        - OS_ZH
        - OS_ZI
        - OS_ZJ
        - OS_ZK
        - OS_ZL
        - OS_ZM
        - OS_ZN
        - OS_ZO
        - OS_ZP
        - OS_ZQ
        - OS_ZR
        - OS_ZS
        - OS_ZT
        - OS_ZU
        - OS_ZV
        - OS_ZW
        - OS_ZX
        - OS_ZY
        - OS_ZZ
        - NZ_A
        - NZ_AW
        - NZ_B
        - NZ_BL
        - NZ_BT
        - NZ_C
        - NZ_CV
        - NZ_D
        - NZ_F
        - NZ_FA
        - NZ_G
        - NZ_GD
        - NZ_GO
        - NZ_HA
        - NZ_HS
        - NZ_I
        - NZ_J
        - NZ_K
        - NZ_KA
        - NZ_KP
        - NZ_L
        - NZ_LO
        - NZ_LU
        - NZ_M
        - NZ_MA
        - NZ_MK
        - NZ_MT
        - NZ_MU
        - NZ_N
        - NZ_NE
        - NZ_O
        - NZ_OH
        - NZ_OI
        - NZ_OM
        - NZ_OT
        - NZ_P
        - NZ_PT
        - NZ_PU
        - NZ_R
        - NZ_RG
        - NZ_RI
        - NZ_S
        - NZ_SA
        - NZ_SH
        - NZ_SY
        - NZ_T
        - NZ_TA
        - NZ_TE
        - NZ_TH
        - NZ_TP
        - NZ_U
        - NZ_V
        - NZ_W
        - NZ_WH
        - NZ_WI
        - NZ_WR
        - NZ_WT
        - NZ_WU
        - NZ_X
        - NZ_Y
        - NZ_YP
        - NZ_Z
      type: string
      description: ''
    CountryCode:
      enum:
        - AU
        - NZ
        - FR
        - ZA
      type: string
      description: 'Country Code using ISO 3166-1 standard<br />Australia: AU<br />New Zealand: NZ<br />France: FR<br />South Africa: ZA'
    CustomProblemDetails:
      required:
        - status
        - title
      type: object
      properties:
        type:
          type: string
          description: "A URI reference [RFC3986] that identifies the problem type.\r\nThis specification encourages that, when dereferenced, it provide human-readable documentation for the problem type (e.g., using HTML [W3C.REC-html5-20141028]). \r\nWhen this member is not present, its value is assumed to be \"about:blank\".      \r\ne.g. For 400 Bad Request, the \"type\" value can be \"https://tools.ietf.org/html/rfc9110#section-15.5.1\""
          nullable: true
        title:
          minLength: 1
          type: string
          description: "A short, human-readable summary of the problem type. \r\nIt SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization(e.g., using proactive content negotiation; see[RFC7231], Section 3.4).\r\ne.g. \"One or more validation errors occurred.\""
        status:
          type: integer
          description: 'The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.'
          format: int32
        detail:
          type: string
          description: 'A human-readable explanation specific to this occurrence of the problem. e.g. 400, 403, etc.'
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
            nullable: true
          description: 'Dictionary of errors in <PropertyName, ErrorDetails[]> format. e.g. errors: { "name": ["Product name is required"], "category": ["Category name cannot be longer than 20 characters."]  }'
          nullable: true
      additionalProperties: false
      description: A machine-readable format for specifying errors in HTTP API responses based on https://tools.ietf.org/html/rfc7807.
    DeliveryBasis:
      enum:
        - D
        - L
      type: string
      description: 'D: Delivery Nominated Destination<br />L: Loaded on Transport'
    FibreDiameterHistogramDetail:
      required:
        - fibreMeasurement1
      type: object
      properties:
        fibreMeasurement1:
          $ref: '#/components/schemas/FibreDiameterHistogramDetailMeasurement'
        fibreMeasurement2:
          $ref: '#/components/schemas/FibreDiameterHistogramDetailMeasurement'
        fibreMeasurement3:
          $ref: '#/components/schemas/FibreDiameterHistogramDetailMeasurement'
        fibreMeasurement4:
          $ref: '#/components/schemas/FibreDiameterHistogramDetailMeasurement'
        fibreMeasurement5:
          $ref: '#/components/schemas/FibreDiameterHistogramDetailMeasurement'
        fibreMeasurement6:
          $ref: '#/components/schemas/FibreDiameterHistogramDetailMeasurement'
        fibreMeasurement7:
          $ref: '#/components/schemas/FibreDiameterHistogramDetailMeasurement'
        fibreMeasurement8:
          $ref: '#/components/schemas/FibreDiameterHistogramDetailMeasurement'
        fibreMeasurement9:
          $ref: '#/components/schemas/FibreDiameterHistogramDetailMeasurement'
      additionalProperties: false
    FibreDiameterHistogramDetailMeasurement:
      required:
        - fibreDiameter
        - fibresMeasuredPercentage
      type: object
      properties:
        fibreDiameter:
          type: integer
          description: Micron Value
          format: int32
        fibresMeasuredPercentage:
          pattern: '/^\d+(\.\d{4})?$/'
          type: number
          format: double
      additionalProperties: false
    FibreDiameterHistogramHeader:
      required:
        - coefficientOfVariation
        - comfortFactorPercentage
        - dateIssued
        - factorLaserscanDenominator
        - factorLaserscanNumerator
        - instrument
        - mean
        - numberOfSpecimens
        - reportingFlag
        - standardDeviation
        - subSamplingMethod
      type: object
      properties:
        coefficientOfVariation:
          pattern: '/^\d+(\.\d{1})?$/'
          type: number
          format: double
        comfortFactorPercentage:
          pattern: '/^\d+(\.\d{1})?$/'
          type: number
          description: Percentage of Fibres 30 Microns and under.
          format: double
        fibresMeasured:
          type: integer
          format: int32
          nullable: true
        reportingFlag:
          $ref: '#/components/schemas/ReportingFlag'
        instrument:
          $ref: '#/components/schemas/Instrument'
        subSamplingMethod:
          $ref: '#/components/schemas/SubSamplingMethod'
        numberOfSpecimens:
          type: integer
          format: int32
        mean:
          pattern: '/^\d+(\.\d{1})?$/'
          type: number
          format: double
        standardDeviation:
          pattern: '/^\d+(\.\d{1})?$/'
          type: number
          format: double
        curvatureMeanDegPerMm:
          type: integer
          format: int32
          nullable: true
        meanMinimum:
          pattern: '/^\d+(\.\d{1})?$/'
          type: number
          format: double
          nullable: true
        meanMaximum:
          pattern: '/^\d+(\.\d{1})?$/'
          type: number
          format: double
          nullable: true
        coreTestSamplingDate:
          pattern: '/(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$/'
          type: string
          description: "For records 31 and 55 this is the date core test was sampled or date combination/OML was requested.\r\nFor the 21A record this is the date the core test was sampled, the last date of weighing for untested wool or the date the Combination/OML was requested.        \r\nDate value in ISO 8601 standard. e.g. 2024-03-21."
          format: date
          nullable: true
        dateIssued:
          minLength: 1
          pattern: '/(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$/'
          type: string
          description: Date value in ISO 8601 standard. e.g. 2024-03-21.
          format: date
        factorLaserscanNumerator:
          pattern: '/^\d+(\.\d{6})?$/'
          type: number
          format: double
        factorLaserscanDenominator:
          pattern: '/^\d+(\.\d{6})?$/'
          type: number
          format: double
      additionalProperties: false
    Instrument:
      enum:
        - 1
        - 2
      type: integer
      description: '1: Laserscan<br />2: OFDA'
      format: int32
    LotHeader:
      required:
        - bales
        - catalogueSymbols
        - gross
        - lotIdentity
        - lotType
        - packCondition
        - packMaterial
        - tare
        - updateType
      type: object
      properties:
        lotIdentity:
          minLength: 1
          type: string
        bales:
          type: integer
          format: int32
        gross:
          type: integer
          format: int32
        tare:
          type: integer
          format: int32
        regrabSampleWeight:
          type: integer
          format: int32
          nullable: true
        cataloguePageNumber:
          type: integer
          format: int32
          nullable: true
        noLotFlag:
          type: boolean
          description: "A flag used to indicate whether or not the lot is included for sale in the auction.\r\nIt is used in New Zealand only.\r\n`true` = Normal Lot, `false` = No Lot"
          nullable: true
        sourceCode:
          $ref: '#/components/schemas/SourceCode'
        updateType:
          $ref: '#/components/schemas/UpdateType'
        catalogueSymbols:
          $ref: '#/components/schemas/CatalogueSymbol'
        packMaterial:
          $ref: '#/components/schemas/PackMaterial'
        lotType:
          $ref: '#/components/schemas/LotType'
        lightestIndividualBaleWeight:
          type: integer
          description: This is the Reweigh Gross Kg of the lightest bale in the lot.
          format: int32
          nullable: true
        reportingFlag:
          $ref: '#/components/schemas/ReportingFlag'
        firstOfferSeason:
          type: integer
          format: int32
          nullable: true
        firstOfferSaleIdentity:
          type: string
          nullable: true
        firstOfferLotIdentity:
          type: string
          description: "This is a compound name for lot number and lot suffix, where the lot number is 5 number characters and the lot suffix is 1 alphanumeric character.\r\nThe suffix is used when a lot is broken up but the original lot number is retained; for example, if 2 bales of a 10-bale lot got wet and the 8 bales the 2 bales are offered separately, one could have a suffix A and the other a suffix B. \r\nWhere a suffix is not used, the lot number occupies the whole of the Lot Identity field."
          nullable: true
        costPerWeightUnit:
          type: integer
          format: int32
          nullable: true
        cleanWeight:
          type: integer
          format: int32
          nullable: true
        yieldType:
          $ref: '#/components/schemas/YieldType'
        weightUnit:
          $ref: '#/components/schemas/WeightUnit'
        offerType:
          $ref: '#/components/schemas/OfferType'
        clientCrossReference:
          type: string
          nullable: true
        packCondition:
          $ref: '#/components/schemas/PackCondition'
      additionalProperties: false
    LotHeaderAwexData:
      type: object
      properties:
        awexId:
          type: string
          description: AWEX-ID must conform to the current AWEX-ID code standard.
          nullable: true
        appraiserId:
          type: string
          description: Contains the AWEX accredited appraiser ID for this lot.
          nullable: true
        classersRegisteredNumber:
          type: string
          description: The AWEX stencil number of the classer or classing house responsible for the final classification of the wool before sale.
          nullable: true
        awexIdComment:
          type: string
          description: This field provides for additional comments relating to the information contained in the `awexId` field.
          nullable: true
        awexIdAuditCode:
          type: string
          description: Audit code used for verifying if `awexId` was issued by AWEX
          nullable: true
      additionalProperties: false
    LotHeaderExtension:
      required:
        - woolDescription
      type: object
      properties:
        coreTestSamplingDate:
          pattern: '/(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$/'
          type: string
          description: "Date value in ISO 8601 standard. e.g. 2024-03-21.\r\nFor records 31 and 55 this is the date core test was sampled or date combination/OML was requested. \r\nFor the 21A record this is the date the core test was sampled, the last date of weighing for untested wool or the date the Combination/OML was requested."
          format: date
          nullable: true
        woolDescriptionComment:
          type: string
          description: This field provides for additional comments relating to the information contained in the Wool Description field.
          nullable: true
        woolDescription:
          minLength: 1
          type: string
          description: "This field contains a description that is either an AWEX-ID description or another appraisal description.\r\nAlternative valid appraisal descriptions include AWC type, Exporter type. \r\nThe AWEX-ID description must conform to the current AWEX-ID code standard.\r\nIf sending an AWC type, the first character of this field must be set to `W`, followed by the AWC Type, for all other non AWEX-ID typing descriptions the first character should be set to `P` followed by the type.If sending AWEX-ID the type starts from position one of the field (i.e.there are no leading characters). \r\nThis field is to be always transmitted in upper case."
        gstTaxInvoiceFlag:
          type: boolean
          description: '`true` = GST amount is applicable to invoice. `false` = GST amount is not applicable to invoice.'
          nullable: true
        brokerReservePrice:
          type: integer
          format: int32
          nullable: true
        growerReservePrice:
          type: integer
          format: int32
          nullable: true
        openingPrice:
          type: integer
          format: int32
          nullable: true
        valuationPrice:
          type: integer
          format: int32
          nullable: true
        woolDescriptionAuditCode:
          type: string
          description: Audit code used for verifying if AWEX-ID was issued by AWEX.
          nullable: true
        numberOfOverweightBales:
          type: integer
          description: This is the total number of bales with a Reweigh Gross Kg over 204kg.
          format: int32
          nullable: true
      additionalProperties: false
    LotHeaderPricingData:
      type: object
      properties:
        priceBasis:
          $ref: '#/components/schemas/PriceBasis'
        yieldBasis:
          type: string
          nullable: true
        offer1:
          $ref: '#/components/schemas/LotHeaderPricingDataOffer'
        offer2:
          $ref: '#/components/schemas/LotHeaderPricingDataOffer'
        offer3:
          $ref: '#/components/schemas/LotHeaderPricingDataOffer'
        offer4:
          $ref: '#/components/schemas/LotHeaderPricingDataOffer'
        offer5:
          $ref: '#/components/schemas/LotHeaderPricingDataOffer'
        offer6:
          $ref: '#/components/schemas/LotHeaderPricingDataOffer'
      additionalProperties: false
    LotHeaderPricingDataOffer:
      required:
        - offerDate
        - offerPrice
      type: object
      properties:
        offerPrice:
          type: integer
          format: int32
        offerDate:
          minLength: 1
          pattern: '/(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$/'
          type: string
          description: Date value in ISO 8601 standard. e.g. 2024-03-21
          format: date
      additionalProperties: false
    LotHeaderVendorDeclaration:
      type: object
      properties:
        qualityScheme1:
          $ref: '#/components/schemas/QualitySchemeDetail'
        qualityScheme2:
          $ref: '#/components/schemas/QualitySchemeDetail'
        qualityScheme3:
          $ref: '#/components/schemas/QualitySchemeDetail'
        mulesingStatus:
          type: string
          description: This field is mandatory in Australia and optional outside Australia.
          nullable: true
      additionalProperties: false
    LotType:
      enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
      type: integer
      description: 'A code used to describe wool lot preparation. It is not wool type. `*` wool meets clip preparation guidelines.`#` wool does not necessarily meet clip preparation guidelines<br />1: (Suffix - P) Classed Grower Lot *<br />2: (Suffix - M) Objectively Matched Lot<br />3: (Suffix - J) Combined Certificate<br />4: (Suffix - I) Subjectively Matched Interlot<br />5: (Suffix - B) Other Bulk Class Lot #<br />6: Not Used<br />7: (Suffix - N) Objectively Matched Interlot<br />8: (Suffix - Q) Classed Bulk Class Lot – Quality Managed *<br />9: (Suffix - D) Other Grower Lot #'
      format: int32
    OfferType:
      enum:
        - P
        - N
        - R
      type: string
      description: 'P: Previous/Passed-In Price<br />N: Negotiable Price<br />R: Reserve Price'
    PackCondition:
      enum:
        - N
        - M
        - R
        - X
      type: string
      description: 'Where a line/lot contains a Pack with a lower condition, the lower condition shall apply. The hierarchy from highest to lowest is N, M, R, X. This field is optional in New Zealand transmissions.<br />N: New Pack (not previously used)<br />M: Marked (not previously cored and grabbed<br />R: Repaired (previously core and/or grabbed and repaired)<br />X: Not repaired (previously cored and/or grabbed) (excl reoffer'
    PackMaterial:
      enum:
        - N
        - E
        - J
        - K
      type: string
      description: 'Where a line/lot contains a Pack with a lower Material, the lower Material shall apply.The hierarchy from highest to lowest is N, E, J, K. Printed catalogue condition: The code for Nylon packs shall not be printed (but shall be transmitted).<br />N: Nylon Packs (complete lots only)<br />E: Experimental Packs<br />J: Jute packs (complete lots or lots that contain portions of Nylon and/or HDPE 5 and/or HDPE 1 and Jute packs)<br />K: HDPE1 packs (complete lots or lots that contain portions of Nylon and/or HDPE 5 and HDPE 1 packs)'
    PriceBasis:
      enum:
        - G
        - C
        - I
        - F
      type: string
      description: 'G: Greasy<br />C: CLCOF (ACOF or NZCOF)<br />I: CIF<br />F: FOB'
    QualityScheme:
      enum:
        - ASWG
        - AUTH
        - BETC
        - BIOC
        - DAL3
        - EUEC
        - MTEC
        - ACO
        - DBAA
        - USA
        - NASA
        - SXC
        - RWS
        - SBFC
        - SW
        - SWAU
        - TQMS
        - FAP
        - PWIA
        - FERN
      type: string
      description: 'The registered four character or less quality scheme code. To obtain the current code list please go to this URL: http://www.awex.com.au/standards/catalogue/<br />ASWG: Australian Superfine Woolgrower Association (Member)<br />AUTH: Authentico<br />BETC: Better Choices (Pain Mitigation)<br />BIOC: BioClip (Biologically Harvested)<br />DAL3: Dalcare-3<br />EUEC: EU Eco label (meets EU Eco standards)<br />MTEC: Merino Tech WA<br />ACO: Organic - Australian Certified Organic<br />DBAA: Organic - Demeter Biodynamic Agriculture Aust.<br />USA: Organic - Meets USA Certification requirements<br />NASA: Organic - National Association for Sustainable Agriculture Aust.<br />SXC: Organic - Southern Cross Certified<br />RWS: Responsible Wool Standard<br />SBFC: Schute Bell Fibre Care<br />SW: SustainaWOOL<br />SWAU: SustainaWOOL Gold<br />TQMS: Traprock QMS/TIMS<br />FAP: Farm Assurance Program<br />PWIA: PGG Wrightson Integrity Assured<br />FERN: Woolcare Fernmark'
    QualitySchemeDetail:
      type: object
      properties:
        qualityScheme:
          $ref: '#/components/schemas/QualityScheme'
        qualitySchemeRegistrationId:
          type: string
          description: Registered Identification issued by the relevant Accreditation or Membership organisation.
          nullable: true
        qualitySchemeOtherDetail:
          type: string
          description: Used to transmit (other) information relevant to the Scheme that is required by the buyer(e.g.Month/Year shorn).
          nullable: true
      additionalProperties: false
    ReportingFlag:
      enum:
        - R
        - C
        - U
      type: string
      description: 'R: Report, results for this test are supplied for information only<br />C: Certificate results for this test are certified<br />U: This lot is untested and there are no certificate results'
    RequestForData:
      required:
        - requestType
        - transmissionTypeRequested
      type: object
      properties:
        transmissionTypeRequested:
          $ref: '#/components/schemas/TransmissionType'
        saleIdentity:
          $ref: '#/components/schemas/SaleIdentity'
        organisationRequested:
          type: string
          nullable: true
        saleDateRequested:
          pattern: '/(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$/'
          type: string
          description: Date value in ISO 8601 standard. e.g. 2024-03-21
          format: date
          nullable: true
        startDateTimeStatusRequest:
          pattern: '/(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])[+-]?(((([0][0-9])|([1][0-3])):(([03][0])|([14][5])))|14:00)$/'
          type: string
          description: Date and Time with offset value in ISO 8601 standard. e.g. 2024-03-21T19:25:04+00:00
          format: date-time
          nullable: true
        endDateTimeStatusRequest:
          pattern: '/(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])[+-]?(((([0][0-9])|([1][0-3])):(([03][0])|([14][5])))|14:00)$/'
          type: string
          description: Date and Time with offset value in ISO 8601 standard. e.g. 2024-03-21T19:25:04+00:00
          format: date-time
          nullable: true
        userNetworkDateTime:
          type: boolean
          nullable: true
        requestType:
          $ref: '#/components/schemas/RequestType'
        woolTypeGroup:
          $ref: '#/components/schemas/WoolTypeGroup'
        recordTypesToBeExcluded:
          type: array
          items:
            type: string
          description: 'Record types and record sub-types to be excluded. e.g. 20 - Lot Header, 22A - Group Header'
          nullable: true
        season:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    RequestForDataGroup:
      required:
        - requestForDataCollection
        - transmissionHeader
      type: object
      properties:
        transmissionHeader:
          $ref: '#/components/schemas/TransmissionHeader'
        requestForDataCollection:
          maxItems: 53
          type: array
          items:
            $ref: '#/components/schemas/RequestForData'
      additionalProperties: false
    RequestForDataOrStatus:
      required:
        - requests
      type: object
      properties:
        requests:
          type: array
          items:
            $ref: '#/components/schemas/RequestForDataGroup'
      additionalProperties: false
    RequestType:
      enum:
        - 1
        - 2
        - 3
        - 4
      type: integer
      description: '1: Private Data Request<br />2: Status Request<br />3: Data Request<br />4: Broadcast Data Request'
      format: int32
    SaleIdentity:
      type: object
      properties:
        sellingCentreType:
          type: string
          nullable: true
        saleNumber:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    SaleType:
      enum:
        - A
        - T
        - O
        - AV
        - E
      type: string
      description: 'A: Auction (open cry)<br />T: Tender<br />O: Offer<br />AV: Availability<br />E: Electronic Sale'
    SoftwareIdentifier:
      type: object
      properties:
        softwareCompany:
          type: string
          nullable: true
        version:
          type: integer
          description: Version no. e.g. 2400
          format: int32
          nullable: true
        programName:
          type: string
          nullable: true
      additionalProperties: false
    SourceCode:
      enum:
        - 1
        - 2
        - 3
      type: integer
      description: 'Source of the lot presented for sale.<br />1: Grower<br />2: Dealer<br />3: Bulk Class'
      format: int32
    SubSamplingMethod:
      enum:
        - 1
      type: integer
      description: '1: Minicore'
      format: int32
    TransmissionHeader:
      required:
        - abn
        - countryOfOrigin
        - currentReceiver
        - currentTransmitter
        - dateFormatLastRevised
        - dateTransmissionFileCreated
        - documentOriginator
        - finalReceiver
        - transmissionType
      type: object
      properties:
        dateFormatLastRevised:
          minLength: 1
          pattern: '/(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$/'
          type: string
          description: Date value in ISO 8601 standard. e.g. 2024-03-21 (year-month-day)
          format: date
        dateTransmissionFileCreated:
          minLength: 1
          pattern: '/(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$/'
          type: string
          description: Date value in ISO 8601 standard. e.g. 2024-03-21 (year-month-day)
          format: date
        countryOfOrigin:
          $ref: '#/components/schemas/CountryCode'
        documentOriginator:
          minLength: 1
          type: string
        currentTransmitter:
          minLength: 1
          type: string
        currentReceiver:
          minLength: 1
          type: string
        finalReceiver:
          minLength: 1
          type: string
        accessPassword:
          type: string
          nullable: true
        accessPasswordReplacement:
          type: string
          nullable: true
        transmissionType:
          $ref: '#/components/schemas/TransmissionType'
        versionNumber:
          type: integer
          format: int32
          nullable: true
        softwareIdentifier:
          $ref: '#/components/schemas/SoftwareIdentifier'
        abn:
          minLength: 1
          type: string
      additionalProperties: false
    TransmissionType:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 11
        - 13
        - 16
        - 17
        - 50
        - 52
        - 55
        - 56
        - 60
        - 64
        - 98
        - 99
      type: integer
      description: 'The code used to indicate what type of documents is being transmitted, eg. Brokers’ catalogues or lot invoices.<br />0: Lot Invoices<br />1: Delivery Orders<br />2: Auction Catalogues<br />3: Private Catalogues<br />4: Group Invoices<br />5: Auction Catalogue Updates<br />6: Request Post-Sale Printing of Pre-Sale Certificates<br />7: Statements<br />8: Test Certificate Requests<br />11: Organisation Details<br />13: Lot Price and Buyer<br />16: Delivery Order Summary<br />17: Payment Advice<br />50: Test Certificate<br />52: Test Status<br />55: Test Request Verification<br />56: Dark and Medullated Fibre Risk Verification<br />60: Test Certificate Update<br />64: Payment Confirmation File<br />98: Text File<br />99: Password Replacement'
      format: int32
    UpdateType:
      enum:
        - A
        - C
        - D
      type: string
      description: 'A flag to indicate what type of change has been made to an item.<br />A: The entry is to be added<br />C: The entry is to be changed<br />D: The entry is to be deleted'
    WeightUnit:
      enum:
        - 0
        - 1
      type: integer
      description: '0: Kilograms<br />1: Pounds'
      format: int32
    WoolSaleHeaderExtension:
      required:
        - dateStorageChargeCommences
        - discountRate
        - maximumDaysDiscount
        - penaltyInterestRate
        - storageChargePerBalePerDay
        - storageOrganisation
      type: object
      properties:
        storageOrganisation:
          minLength: 1
          type: string
          description: "This is the organisation store that is storing the wool. \r\nNote: If there is more than one organisation in a centre, then separate AWEX codes are required for each store.\r\nIt is not necessarily the same as the Releasing Organisation."
        storageDescription:
          type: string
          description: 'Used to provide more details on location within the Storage Organisations facility - such as street address, warehouse number etc. – to assist delivery.'
          nullable: true
        paymentDueDate:
          pattern: '/(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$/'
          type: string
          description: "The date on which payment is due. Also known as Prompt Date.\r\nDate value in ISO 8601 standard. e.g. 2024-03-21"
          format: date
          nullable: true
        discountRate:
          type: number
          format: double
        maximumDaysDiscount:
          maximum: 99
          minimum: 0
          type: integer
          format: int32
        dateStorageChargeCommences:
          minLength: 1
          pattern: '/(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$/'
          type: string
          description: Date value in ISO 8601 standard. e.g. 2024-03-21
          format: date
        storageChargePerBalePerDay:
          type: number
          format: double
        penaltyInterestRate:
          type: number
          format: double
        lotAvailableDate:
          pattern: '/(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$/'
          type: string
          description: "The first date on which the wool is available for purchase.\r\nDate value in ISO 8601 standard. e.g. 2024-03-21."
          format: date
          nullable: true
        postSaleChargeRebate:
          type: number
          description: "The total (extended) amount of Post Sale Charge Rebate for the Lot. \r\nThis value is provided where a value in the Post Sale Charge Rebate field exists (11A)"
          format: double
          nullable: true
      additionalProperties: false
    WoolSaleHeaderLots:
      required:
        - calculationBasis
        - catalogueSection
        - centreCatalogue
        - centreStorage
        - currency
        - deliveryBasis
        - invoicingOrganisation
        - packType
        - postSaleCharge
        - releasingOrganisation
        - saleDate
        - saleIdentity
        - season
        - sellingOrganisation
        - weightUnit
        - woolState
        - woolTypeGroup
      type: object
      properties:
        season:
          type: integer
          format: int32
        saleIdentity:
          $ref: '#/components/schemas/SaleIdentity'
        centreStorage:
          minLength: 1
          type: string
          description: "The centre (code) representing the location at which the wool is stored (relevant to the intended use of the document). \r\nFor example, the Centre- Storage against a lot in the AC or ACU is the location of the wool where the buyer would expect to take delivery."
        saleDate:
          minLength: 1
          pattern: '/(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$/'
          type: string
          format: date
        woolState:
          minLength: 1
          type: string
          description: The state of the wool itemised in the invoice
        packType:
          minLength: 1
          type: string
          description: A code used to indicate how the wool has been baled. The most common type is Farm bales.
        currency:
          maxLength: 3
          minLength: 1
          type: string
          description: The Code for the currency in which the sale was made. To obtain the current code list please use the Commonwealth Bank Currency Codes on their website
        weightUnit:
          $ref: '#/components/schemas/WeightUnit'
        postSaleCharge:
          minimum: 1
          type: number
          description: "This is the published rate for the charge levied by the broker to the buyer for each bale purchased and is included in the last cost of the wool.\r\nIt will not include freight if freight is listed separately in the Freight Charge field, if freight is not listed in the Freight Charge field it will include freight. \r\nIn Australia it will always include freight as the Freight Charge field is not used"
          format: double
        calculationBasis:
          $ref: '#/components/schemas/CalculationBasis'
        freightCharge:
          type: number
          description: "If specified, this is not part of the last cost of the wool. \r\nIf a freight charge is not included in the post Sale Charge, then the freight charge is the charge levied by the broker should the buyer request that the broker transport the wool to the nearest designated area (usually a shipping port). \r\nFreight Charge is not used in Australia."
          format: double
          nullable: true
        freightRebate:
          type: number
          format: double
          nullable: true
        chargePerLot:
          type: number
          description: Any charge made for a lot which is not covered by the Post Sale Charge or the Freight charge per Bale fields.
          format: double
          nullable: true
        invoiceNumber:
          type: string
          nullable: true
        catalogueSection:
          $ref: '#/components/schemas/CatalogueSection'
        invoicingOrganisation:
          minLength: 1
          type: string
          description: The code for the broker who will raise the invoice for the wool
        releasingOrganisation:
          minLength: 1
          type: string
          description: The broker that is responsible for releasing the wool out of the store
        sellingOrganisation:
          minLength: 1
          type: string
        woolTypeGroup:
          $ref: '#/components/schemas/WoolTypeGroup'
        centreCatalogue:
          $ref: '#/components/schemas/Centre'
        deliveryBasis:
          $ref: '#/components/schemas/DeliveryBasis'
        centreDelivery:
          $ref: '#/components/schemas/Centre'
        alternateDelivery:
          $ref: '#/components/schemas/Centre'
      additionalProperties: false
    WoolSaleHeaderNonAuction:
      type: object
      properties:
        catalogueAvailabilityDateTime:
          pattern: '/(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])[+-]?(((([0][0-9])|([1][0-3])):(([03][0])|([14][5])))|14:00)$/'
          type: string
          description: Date and Time with offset value in ISO 8601 standard. e.g. 2024-03-21T19:25:04+00:00
          format: date-time
          nullable: true
        saleStartDateTime:
          pattern: '/(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])[+-]?(((([0][0-9])|([1][0-3])):(([03][0])|([14][5])))|14:00)$/'
          type: string
          description: Date and Time with offset value in ISO 8601 standard. e.g. 2024-03-21T19:25:04+00:00
          format: date-time
          nullable: true
        saleEndDateTime:
          pattern: '/(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])[+-]?(((([0][0-9])|([1][0-3])):(([03][0])|([14][5])))|14:00)$/'
          type: string
          description: Date and Time with offset value in ISO 8601 standard. e.g. 2024-03-21T19:25:04+00:00
          format: date-time
          nullable: true
        saleType:
          $ref: '#/components/schemas/SaleType'
        electronicSaleFlag:
          type: boolean
          nullable: true
        reservePriceDisplayFlag:
          type: boolean
          description: '`true` = Available to Buyers, `false` = Not available to buyers.'
          nullable: true
        tenderSaleReplyDateTime:
          pattern: '/(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])[+-]?(((([0][0-9])|([1][0-3])):(([03][0])|([14][5])))|14:00)$/'
          type: string
          description: Date and Time with offset value in ISO 8601 standard. e.g. 2024-03-21T19:25:04+00:00
          format: date-time
          nullable: true
      additionalProperties: false
    WoolTypeGroup:
      enum:
        - MFLC
        - MSKT
        - XBFS
        - ODDS
      type: string
      description: 'A code to indicate which section of the sale that lot belongs.<br />MFLC: Merino fleece types<br />MSKT: Merino fleece types<br />XBFS: Merino fleece types<br />ODDS: Merino fleece types'
    YieldType:
      enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
        - 13
        - 14
        - 15
        - 16
        - 17
        - 18
        - 19
        - 20
        - 21
        - 22
        - 23
        - 24
        - 25
        - 26
        - 27
        - 28
        - 29
        - 30
        - 31
        - 32
        - 33
        - 42
        - 43
      type: integer
      description: 'Yield Type indicates either the type of yield transmitted in another field or record, or the type of yield used to arrive at the value in another field.<br />1: RESERVED<br />2: RESERVED<br />3: ESTIMATED<br />4: Schlumberger Combed Dry (1% TFM)<br />5: Schlumberger Combed Dry (2% TFM)<br />7: Noble Combed in Oil<br />8: IWTO Scoured Yield at 16% Regain<br />9: IWTO Scoured Yield at 17% Regain<br />10: Japanese Clean Scoured<br />11: Australian Carbonising<br />12: IWTO Clean Wool Content, 17% Regain<br />13: United States Custom Clean<br />14: Card Sliver<br />15: ASTM Clean Wool Fibre Present<br />16: Noble Dry Combed<br />17: Schlumberger Combed in Oil (4.6% TFM)<br />18: Noble Combed Dry<br />19: Theoretical Card Sliver<br />20: ASTM Laboratory Scoured Yield<br />21: Conditioned at 12.00%<br />22: Conditioned at 13.00%<br />23: Conditioned at 13.50%<br />24: Conditioned at 13.64%<br />25: Conditioned at 14.00%<br />26: Conditioned at 14.40%<br />27: Conditioned at 15.00%<br />28: Conditioned at 16.00%<br />29: Conditioned at 17.00%<br />30: Conditioned at 18.00%<br />31: Conditioned at 18.25%<br />32: Japanese Clean Scoured at 17%<br />33: New Zealand Process Yield<br />42: IWT0 Schlumberger Oil T&N (2.0% & T.FM.)<br />43: IWTO Clean Wool Content, 16% Regain'
      format: int32