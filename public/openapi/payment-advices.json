{
  "openapi": "3.0.1",
  "info": {
    "title": "WIEDPUG API",
    "description": "API Documentation for the WIEDPUG Network",
    "termsOfService": "https://wiedpug.github.io/wiedpug",
    "contact": {
      "name": "WIEDPUG Team",
      "url": "https://wiedpug.github.io/wiedpug",
      "email": "changethis@email.com"
    },
    "license": {
      "name": "Applicable License",
      "url": "https://wiedpug.github.io/wiedpug"
    },
    "version": "0.0.0"
  },
  "paths": {
    "/v0/payment-advices": {
      "post": {
        "tags": [
          "Payment Advices"
        ],
        "summary": "Payment Advices",
        "description": "Used to provide payment advices",
        "operationId": "CreatePaymentAdvices",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PaymentAdvice"
                }
              },
              "example": [
                {
                  "transmissionHeader": {
                    "dateFormatLastRevised": "2020-07-15",
                    "dateTransmissionFileCreated": "2016-01-17",
                    "countryOfOrigin": "AU",
                    "documentOriginator": {
                      "organisationCode": "ABC"
                    },
                    "currentReceiver": {
                      "organisationCode": "ATW"
                    },
                    "versionNumber": "1.10.1",
                    "softwareIdentifier": {
                      "softwareCompany": 1,
                      "softwareVersion": 1082,
                      "programName": "NETR"
                    },
                    "abn": 72001967184
                  },
                  "transferConfig": {
                    "transferType": "Unrestrict"
                  },
                  "paymentAdviceDetails": [
                    {
                      "woolSaleHeaderLot": {
                        "season": 16,
                        "saleIdentity": {
                          "sellingCentreType": "M",
                          "saleNumber": 18
                        },
                        "centreStorage": {
                          "countryCode": "AU",
                          "centreCode": "A"
                        },
                        "saleDate": "2017-01-10",
                        "woolState": "A",
                        "packType": "2",
                        "invoicingOrganisation": {
                          "organisationCode": "ABC"
                        },
                        "sellingOrganisation": {
                          "organisationCode": "ABC"
                        },
                        "centreCatalogue": {
                          "countryCode": "AU",
                          "centreCode": "A"
                        },
                        "storageOrganisation": {
                          "organisationCode": "ABC"
                        },
                        "storageDescription": "45 MAIN ST",
                        "discountRate": 1.5,
                        "maximumDaysDiscount": 0,
                        "dateStorageChargeCommences": "2017-01-24",
                        "storageChargePerBalePerDay": {
                          "value": 0.245,
                          "currencyCode": "AUD"
                        },
                        "penaltyInterestRate": 11.35
                      },
                      "lotPaymentDetails": [
                        {
                          "lotIdentity": "123456",
                          "lotLastCost": {
                            "value": 23.45,
                            "currencyCode": "AUD"
                          }
                        }
                      ],
                      "paymentSummary": {
                        "lastCostPaid": {
                          "value": 67,
                          "currencyCode": "AUD"
                        },
                        "discountAmount": {
                          "value": 23,
                          "currencyCode": "AUD"
                        },
                        "netAmountPaid": {
                          "value": 77,
                          "currencyCode": "AUD"
                        },
                        "datePaymentMade": "2024-05-24"
                      }
                    }
                  ],
                  "comments": [
                    {
                      "text": "dfsfbsdfafsafs fdsa"
                    }
                  ]
                }
              ]
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiResult"
                  }
                },
                "example": {
                  "apiMessages": []
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResult"
                },
                "example": {
                  "type": "https://datatracker.ietf.org/doc/html/rfc9110#section-15.5.1",
                  "title": "One or more validation errors occurred",
                  "status": 400,
                  "detail": "",
                  "errors": [
                    {
                      "errors": {
                        "Requests[0].TransmissionHeader.DateFormatLastRevised": [
                          "The field DateFormatLastRevised is required",
                          "The field DateFormatLastRevised must match regulart expression pattern..."
                        ],
                        "Requests[0].TransmissionHeader.CountryOfOrigin": [
                          "The field CountryOfOrigin is required"
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResult"
                },
                "example": {
                  "type": "https://datatracker.ietf.org/doc/html/rfc9110#section-15.5.2",
                  "title": "Unauthorized",
                  "status": 401,
                  "detail": "Missing authentication credentials"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResult"
                },
                "example": {
                  "type": "https://datatracker.ietf.org/doc/html/rfc9110#section-15.5.4",
                  "title": "You don't have permission to access this resource",
                  "status": 403,
                  "detail": "You don't have a 'read' access to access this resource"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResult"
                },
                "example": {
                  "type": "https://datatracker.ietf.org/doc/html/rfc9110#name-500-internal-server-error",
                  "title": "An error occurred while processing your required",
                  "status": 500,
                  "detail": "Error details.."
                }
              }
            }
          }
        }
      }
    },
    "/v0/payment-advices/data": {
      "post": {
        "tags": [
          "Payment Advices"
        ],
        "summary": "Retrieves the payment advices",
        "operationId": "RequestForPaymentAdvices",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RequestForData"
                }
              },
              "example": [
                {
                  "transmissionHeader": {
                    "dateFormatLastRevised": "2020-07-15",
                    "dateTransmissionFileCreated": "2016-01-17",
                    "countryOfOrigin": "AU",
                    "documentOriginator": {
                      "organisationCode": "ABC"
                    },
                    "currentReceiver": {
                      "organisationCode": "ATW"
                    },
                    "versionNumber": "1.10.1",
                    "softwareIdentifier": {
                      "softwareCompany": 8,
                      "softwareVersion": 1082,
                      "programName": "NETR"
                    },
                    "abn": 72001967184
                  },
                  "requestForDataType": {}
                }
              ]
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentAdviceListApiResult"
                  }
                },
                "example": {
                  "apiMessages": [],
                  "data": [
                    {
                      "transmissionHeader": {
                        "dateFormatLastRevised": "2020-07-15",
                        "dateTransmissionFileCreated": "2016-01-17",
                        "countryOfOrigin": "AU",
                        "documentOriginator": {
                          "organisationCode": "AWT"
                        },
                        "currentReceiver": {
                          "organisationCode": "MNC"
                        },
                        "versionNumber": "1.10.1",
                        "softwareIdentifier": {
                          "softwareCompany": 1,
                          "softwareVersion": 1082,
                          "programName": "NETR"
                        },
                        "abn": 72001967184
                      },
                      "paymentAdviceDetails": [
                        {
                          "woolSaleHeaderLot": {
                            "season": 16,
                            "saleIdentity": {
                              "sellingCentreType": "M",
                              "saleNumber": 18
                            },
                            "centreStorage": {
                              "countryCode": "AU",
                              "centreCode": "A"
                            },
                            "saleDate": "2017-01-10",
                            "woolState": "A",
                            "packType": "2",
                            "invoicingOrganisation": {
                              "organisationCode": "ABC"
                            },
                            "sellingOrganisation": {
                              "organisationCode": "ABC"
                            },
                            "centreCatalogue": {
                              "countryCode": "AU",
                              "centreCode": "A"
                            },
                            "storageOrganisation": {
                              "organisationCode": "ABC"
                            },
                            "storageDescription": "45 MAIN ST",
                            "discountRate": 1.5,
                            "maximumDaysDiscount": 0,
                            "dateStorageChargeCommences": "2017-01-24",
                            "storageChargePerBalePerDay": {
                              "value": 0.245,
                              "currencyCode": "USD"
                            },
                            "penaltyInterestRate": 11.35
                          },
                          "lotPaymentDetails": [
                            {
                              "lotIdentity": "123456",
                              "lotLastCost": {
                                "value": 23.45,
                                "currencyCode": "AUD"
                              }
                            }
                          ],
                          "paymentSummary": {
                            "lastCostPaid": {
                              "value": 67,
                              "currencyCode": "AUD"
                            },
                            "discountAmount": {
                              "value": 23,
                              "currencyCode": "AUD"
                            },
                            "netAmountPaid": {
                              "value": 77,
                              "currencyCode": "AUD"
                            },
                            "datePaymentMade": "2024-05-24"
                          }
                        }
                      ],
                      "comments": [
                        {
                          "text": "dfsfbsdfafsafs fdsa"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "204": {
            "description": "No Content",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResult"
                },
                "example": {
                  "apiMessages": [
                    {
                      "warningMessage": "Resason:  You have requested data but there is nothing available.\nAction: If you have requested private data, wait until more data is received by the network and try again.  If your data should be there, check with the Network Administrator. If you have requested broadcast data, either this is not yet available, or you have incorrectly specified the sale number, broker etc. in the RequestForData. Check this and try again later."
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResult"
                },
                "example": {
                  "type": "https://datatracker.ietf.org/doc/html/rfc9110#section-15.5.1",
                  "title": "One or more validation errors occurred",
                  "status": 400,
                  "detail": "",
                  "errors": [
                    {
                      "errors": {
                        "Requests[0].TransmissionHeader.DateFormatLastRevised": [
                          "The field DateFormatLastRevised is required",
                          "The field DateFormatLastRevised must match regulart expression pattern..."
                        ],
                        "Requests[0].TransmissionHeader.CountryOfOrigin": [
                          "The field CountryOfOrigin is required"
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResult"
                },
                "example": {
                  "type": "https://datatracker.ietf.org/doc/html/rfc9110#section-15.5.2",
                  "title": "Unauthorized",
                  "status": 401,
                  "detail": "Missing authentication credentials"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResult"
                },
                "example": {
                  "type": "https://datatracker.ietf.org/doc/html/rfc9110#section-15.5.4",
                  "title": "You don't have permission to access this resource",
                  "status": 403,
                  "detail": "You don't have a 'read' access to access this resource"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResult"
                },
                "example": {
                  "type": "https://datatracker.ietf.org/doc/html/rfc9110#section-15.5.4",
                  "title": "Resource not found",
                  "status": 404
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResult"
                },
                "example": {
                  "type": "https://datatracker.ietf.org/doc/html/rfc9110#name-500-internal-server-error",
                  "title": "An error occurred while processing your required",
                  "status": 500,
                  "detail": "Error details.."
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "PaymentAdvice": {
        "required": [
          "paymentAdviceDetails",
          "transmissionHeader"
        ],
        "type": "object",
        "properties": {
          "transmissionHeader": {
            "$ref": "#/components/schemas/TransmissionHeader"
          },
          "transferConfig": {
            "$ref": "#/components/schemas/TransferConfig"
          },
          "paymentAdviceDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentAdviceDetail"
            }
          },
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Comment"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TransmissionHeader": {
        "required": [
          "abn",
          "countryOfOrigin",
          "currentReceiver",
          "dateFormatLastRevised",
          "dateTransmissionFileCreated",
          "documentOriginator"
        ],
        "type": "object",
        "properties": {
          "dateFormatLastRevised": {
            "$ref": "#/components/schemas/LiteralDate"
          },
          "dateTransmissionFileCreated": {
            "$ref": "#/components/schemas/LiteralDate"
          },
          "countryOfOrigin": {
            "$ref": "#/components/schemas/CountryCode"
          },
          "documentOriginator": {
            "$ref": "#/components/schemas/Organisation"
          },
          "currentReceiver": {
            "$ref": "#/components/schemas/Organisation"
          },
          "versionNumber": {
            "type": "string",
            "description": "The full version number of API that the transmission relates to.\r\n\r\nIt uses Semantic Versioning. https://semver.org/\r\n\r\nThe format is MAJOR.MINOR.PATCH. e.g. 1.10.2",
            "nullable": true
          },
          "softwareIdentifier": {
            "$ref": "#/components/schemas/SoftwareIdentifier"
          },
          "abn": {
            "maximum": 99999999999,
            "minimum": 10000000000,
            "type": "integer",
            "description": "Australian Business Number, 11 digits",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "LiteralDate": {
        "type": "string",
        "description": "Date value in ISO standard UTC date format. e.g. 2024-03-21 (YYYY-MM-DD).\n\ndateOfCreditNote: Date the Credit note was issued\n\ndateOfOriginalInvoice: Date of the original invoice\\ndateIssue: The date the certificate was issued.\n\ndateLastUpdated: The day the item was last amended.\n\nstatementDate: The period ending date of the statement.\n\nstatementPaymentDate: The date the payment was made.\n\ndatePaymentMade: Required date field for the date payment was made.\n\nsaleDate: The date on which the wool was sold.\n\ncoreTestSamplingDate: For Fibre Diameter Histogram Header and Test Request Verification this is the date core test was sampled or date combination/OML was requested. For the Lot Header this is the date the core test was sampled, the last date of weighing for untested wool or the date the Combination/OML was requested.\n\nitemDate: The date the cost of the item was incurred.",
        "format": "((?:19|20)[0-9][0-9])-(0?[1-9]|1[012])-(0?[1-9]|[12][0-9]|3[01])",
        "example": "2024-03-21"
      },
      "CountryCode": {
        "enum": [
          "AU",
          "NZ",
          "DE",
          "IT",
          "CN",
          "TW"
        ],
        "type": "string",
        "description": "A code for the country in which the transmission was created. Country Code using ISO 3166-1 standard<br />AU: Australia<br />NZ: New Zealand<br />DE: Germany<br />IT: Italy<br />CN: China<br />TW: Taiwan"
      },
      "Organisation": {
        "required": [
          "organisationCode"
        ],
        "type": "object",
        "properties": {
          "organisationCode": {
            "maxLength": 3,
            "minLength": 1,
            "type": "string"
          },
          "centre": {
            "$ref": "#/components/schemas/Centre"
          }
        },
        "additionalProperties": false,
        "description": "A code used to identify organisations involved in the wool trade.\r\n\r\nThese codes are issued and maintained by the Network and are available online.\r\n\r\ncurrentReceiver: The code for the organisation that will receive the document at the end of the current transmission.Where a document is transferred from one\r\norganisation to another through an intermediary, the code for the current receiver will vary from leg to leg of the journey.\r\n\r\nreleasingOrganisation: The broker that is responsible for releasing the wool out of the store.\r\n\r\nmarkingOrganisation: The code for the organisation which is to apply marks to the bales.\r\n\r\ninvoicingOrganisation: The code for the broker who will raise the invoice for the wool.\r\n\r\nstorageOrganisation: This is the organisation store that is storing the wool. Note: If there is more than one organisation in a centre, then separate AWEX codes are \r\nrequired for each store. It is not necessarily the same as the Releasing Organisation.\r\n\r\nclient: The code for the organisation that is the transmitter’s client. Where one organisation submits a TRV document to a Test House requesting tests \r\nfor one of its own clients, the code for that client will be used in this field."
      },
      "Centre": {
        "required": [
          "centreCode",
          "countryCode"
        ],
        "type": "object",
        "properties": {
          "countryCode": {
            "$ref": "#/components/schemas/CountryCode"
          },
          "centreCode": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CentreCodeAustralia"
              },
              {
                "$ref": "#/components/schemas/CentreCodeChina"
              },
              {
                "$ref": "#/components/schemas/CentreCodeGermany"
              },
              {
                "$ref": "#/components/schemas/CentreCodeItaly"
              },
              {
                "$ref": "#/components/schemas/CentreCodeNewZealand"
              },
              {
                "$ref": "#/components/schemas/CentreCodeTaiwan"
              }
            ]
          }
        },
        "additionalProperties": false,
        "description": "Centre has country and centreCode.\r\n\r\nThe centreCode is one of these below based on the value of country.\r\n\r\nThe mapping of country:centreCode is the following:\r\n            \r\nAU:CentreCodeAustralia\r\n\r\nNZ: CentreNewZealand\r\n\r\nDE: CentreGermany\r\n\r\nIT: CentreItaly\r\n\r\nCN: CentreChina\r\n\r\nTW: CentreTaiwan\r\n\r\nThe legacy codes for Overseas Centre are under CentreCodeAustralia\r\n\r\ncentreStorage: The centre (code) representing the location at which the wool is stored (relevant to the intended use of the document). For example, the\r\nCentre- Storage against a lot in the Catalogue is the location of the wool where the buyer would expect to take delivery.\r\n\r\ncentreCatalogue: The centre (code) used to group lots of wool based on a location. This location is typically the core test/weighing centre and is often aligned with the seller’s Post Sale Charge schedule.\r\n\r\ncentreDelivery: Inclusion of the Delivery Area Centre Code is Mandatory when the Post Sale Service Charge includes delivery to a nominated area and a “D” is included in the Delivery Basis Field.\r\n\r\ncentreAlternateDelivery: This field is to be used when the PSC includes optional delivery to a second area.",
        "discriminator": {
          "propertyName": "countryCode",
          "mapping": {
            "AU": "#/components/schemas/CentreCodeAustralia",
            "CN": "#/components/schemas/CentreCodeChina",
            "DE": "#/components/schemas/CentreCodeGermany",
            "IT": "#/components/schemas/CentreCodeItaly",
            "NZ": "#/components/schemas/CentreCodeNewZealand",
            "TW": "#/components/schemas/CentreCodeTaiwan"
          }
        }
      },
      "CentreCodeAustralia": {
        "enum": [
          "A",
          "AD",
          "AR",
          "AU",
          "B",
          "BA",
          "BK",
          "BL",
          "BM",
          "BO",
          "BR",
          "BT",
          "C",
          "CA",
          "CB",
          "CC",
          "CL",
          "CN",
          "CO",
          "CR",
          "CU",
          "CW",
          "D",
          "DE",
          "DO",
          "DR",
          "E",
          "ER",
          "ES",
          "F",
          "G",
          "GF",
          "GI",
          "GN",
          "GR",
          "GU",
          "H",
          "HA",
          "HB",
          "HM",
          "HO",
          "HY",
          "I",
          "J",
          "JA",
          "K",
          "KE",
          "KH",
          "KI",
          "KN",
          "KT",
          "KW",
          "KY",
          "L",
          "LC",
          "M",
          "MA",
          "MB",
          "MC",
          "ME",
          "MG",
          "MI",
          "MO",
          "MR",
          "MU",
          "N",
          "NA",
          "ND",
          "NO",
          "NR",
          "OB",
          "OR",
          "P",
          "PA",
          "PL",
          "Q",
          "QU",
          "R",
          "S",
          "SG",
          "SH",
          "SK",
          "SW",
          "SY",
          "T",
          "TE",
          "U",
          "UR",
          "V",
          "W",
          "WA",
          "WG",
          "WL",
          "WN",
          "WR",
          "WW",
          "X",
          "Y",
          "YA",
          "YM",
          "YO",
          "Z",
          "ZC",
          "ZD",
          "ZH",
          "ZJ",
          "ZK",
          "ZL",
          "ZM",
          "ZO",
          "ZP",
          "ZQ",
          "ZR",
          "ZT",
          "ZV",
          "ZW",
          "ZX",
          "ZY"
        ],
        "type": "string",
        "description": "This is Centres for Australia. A centre is a town where any activity connected with the wool industry takes place. The codes used in transmissions are those defined in the Australian Wool Selling Regulation.<br />A: Australia - ADELAIDE<br />AD: Australia - Ardlethan<br />AR: Australia - Armidale (NSW)<br />AU: Australia - AUSTRALIA (AWEX internal only)<br />B: Australia - BRISBANE<br />BA: Australia - Benalla<br />BK: Australia - Bourke<br />BL: Australia - Ballarat<br />BM: Australia - Barham<br />BO: Australia - Boorowa<br />BR: Australia - Bordertown<br />BT: Australia - Bathurst<br />C: Australia - Cooma<br />CA: Australia - Casterton<br />CB: Australia - Coonabarabran<br />CC: Australia - Culcairn<br />CL: Australia - Coleraine<br />CN: Australia - Condoblin<br />CO: Australia - Cootamundra<br />CR: Australia - Corowa<br />CU: Australia - Cunnamulla<br />CW: Australia - Crookwell<br />D: Australia - Bendigo<br />DE: Australia - Deniliquin<br />DO: Australia - Dubbo<br />DR: Australia - Canowindra<br />E: Australia - Echuca<br />ER: Australia - Euroa<br />ES: Australia - Esperance<br />F: Australia - FREMANTLE<br />G: Australia - GEELONG<br />GF: Australia - Grenfell<br />GI: Australia - Glenn Innes<br />GN: Australia - Gunning<br />GR: Australia - Griffith<br />GU: Australia - Guyra<br />H: Australia - Hobart<br />HA: Australia - Harden<br />HB: Australia - Holbrook<br />HM: Australia - Hamilton<br />HO: Australia - Horsham<br />HY: Australia - Hay<br />I: Australia - Narrabri<br />J: Australia - Parkes<br />JA: Australia - Jamestown<br />K: Australia - Warracknabeal<br />KE: Australia - Kerang<br />KH: Australia - Keith<br />KI: Australia - Kangaroo Island<br />KN: Australia - Kingston<br />KT: Australia - Katanning<br />KW: Australia - Wagga Wagga<br />KY: Australia - Kyneton<br />L: Australia - LAUNCESTON<br />LC: Australia - Lane Cove (AWEX internal only)<br />M: Australia - MELBOURNE<br />MA: Australia - Mansfield<br />MB: Australia - Murray Bridge<br />MC: Australia - Macarthur<br />ME: Australia - Melton<br />MG: Australia - Mount Gambier<br />MI: Australia - Mildura<br />MO: Australia - Moree<br />MR: Australia - Maryborough<br />MU: Australia - Mudgee<br />N: Australia - NEWCASTLE<br />NA: Australia - Narrandera<br />ND: Australia - Goondiwindi<br />NO: Australia - Northam<br />NR: Australia - Naracoorte<br />OB: Australia - Oberon<br />OR: Australia - Orange<br />P: Australia - Portland<br />PA: Australia - Cowra<br />PL: Australia - Port Lincoln<br />Q: Australia - Yarrawonga<br />QU: Australia - Queanbeyan<br />R: Australia - GOULBURN<br />S: Australia - SYDNEY<br />SG: Australia - St George<br />SH: Australia - Shepparton<br />SK: Australia - Skipton<br />SW: Australia - Swan Hill<br />SY: Australia - Seymour<br />T: Australia - Inverell<br />TE: Australia - Temora<br />U: Australia - Auburn<br />UR: Australia - Uralla<br />V: Australia - Forbes<br />W: Australia - Tamworth<br />WA: Australia - Warren<br />WG: Australia - Walgett<br />WL: Australia - Walcha<br />WN: Australia - Wellington<br />WR: Australia - Wangaratta<br />WW: Australia - West Wyalong<br />X: Australia - Ararat<br />Y: Australia - Albury<br />YA: Australia - Yass<br />YM: Australia - Yarram<br />YO: Australia - Young<br />Z: Australia - Albany<br />ZC:Christchurch - New Zealand<br />ZD: Dunedin - New Zealand<br />ZH: Blumenthal - Germany<br />ZJ: Biella - Italy<br />ZK: Grisignano - Italy<br />ZL: Mosgiel - New Zealand<br />ZM: Nanjing - China<br />ZO: Keelung - Taiwan<br />ZP: Shanghai - China<br />ZQ: Qingdao - China<br />ZR: Zhangjiagang - China<br />ZT: Timaru - New Zealand<br />ZV: Invercargill - New Zealand<br />ZW:Wellington - New Zealand<br />ZX: Napier – New Zealand<br />ZY: Ashburton – New Zealand"
      },
      "CentreCodeChina": {
        "enum": [
          "NA",
          "SH",
          "QI",
          "ZH"
        ],
        "type": "string",
        "description": "This is Centres for China. A centre is a town where any activity connected with the wool industry takes place. The codes used in transmissions are those defined in the Australian Wool Selling Regulation.<br />NA: Nanjing - China<br />SH: Shanghai - China<br />QI: Qingdao - China<br />ZH: Zhangjiagang - China"
      },
      "CentreCodeGermany": {
        "enum": [
          "BL"
        ],
        "type": "string",
        "description": "This is Centres for Germany. A centre is a town where any activity connected with the wool industry takes place. The codes used in transmissions are those defined in the Australian Wool Selling Regulation.<br />BL: Blumenthal - Germany"
      },
      "CentreCodeItaly": {
        "enum": [
          "BI",
          "GR"
        ],
        "type": "string",
        "description": "This is Centres for Italy. A centre is a town where any activity connected with the wool industry takes place. The codes used in transmissions are those defined in the Australian Wool Selling Regulation.<br />BI: Biella - Italy<br />GR: Grisignano - Italy"
      },
      "CentreCodeNewZealand": {
        "enum": [
          "A",
          "AW",
          "B",
          "BL",
          "BT",
          "C",
          "CV",
          "D",
          "F",
          "FA",
          "G",
          "GD",
          "GO",
          "HA",
          "HS",
          "I",
          "J",
          "K",
          "KA",
          "KP",
          "L",
          "LO",
          "LU",
          "M",
          "MA",
          "MK",
          "MT",
          "MU",
          "N",
          "NE",
          "O",
          "OH",
          "OI",
          "OM",
          "OT",
          "P",
          "PT",
          "PU",
          "R",
          "RG",
          "RI",
          "S",
          "SA",
          "SH",
          "SY",
          "T",
          "TA",
          "TE",
          "TH",
          "TP",
          "U",
          "V",
          "W",
          "WH",
          "WI",
          "WR",
          "WT",
          "WU",
          "X",
          "Y",
          "YP",
          "Z"
        ],
        "type": "string",
        "description": "This is Centres for New Zealand. A centre is a town where any activity connected with the wool industry takes place. The codes used in transmissions are those defined in the Australian Wool Selling Regulation.<br />A: New Zealand - Auckland<br />AW: New Zealand - Awatoto<br />B: New Zealand - Cambridge<br />BL: New Zealand - Blenheim<br />BT: New Zealand - Bunnythorpe<br />C: New Zealand - Christchurch<br />CV: New Zealand - Clive<br />D: New Zealand - Dunedin<br />F: New Zealand - Feilding<br />FA: New Zealand - Fairlie<br />G: New Zealand - Gisborne<br />GD: New Zealand - Geraldine<br />GO: New Zealand - Gore<br />HA: New Zealand - Hawera<br />HS: New Zealand - Hastings<br />I: New Zealand - Invercargill<br />J: New Zealand - Tapanui<br />K: New Zealand - Te Kuiti<br />KA: New Zealand - Kakariki<br />KP: New Zealand - Kaiapoi<br />L: New Zealand - Mosgiel<br />LO: New Zealand - Longburn<br />LU: New Zealand - Lumsden<br />M: New Zealand - Masterton<br />MA: New Zealand - Mangatinoka<br />MK: New Zealand - Motueka<br />MT: New Zealand - Milton<br />MU: New Zealand - Mataura<br />N: New Zealand - Napier<br />NE: New Zealand - Nelson<br />O: New Zealand - Oamaru<br />OH: New Zealand - Ohinewai<br />OI: New Zealand - Ohai<br />OM: New Zealand - Omakau<br />OT: New Zealand - Otorohonga<br />P: New Zealand - Palmerston North<br />PT: New Zealand - Pahiatua<br />PU: New Zealand - Putaruru<br />R: New Zealand - Rotorua<br />RG: New Zealand - Rangiora<br />RI: New Zealand - Riwaka<br />S: New Zealand - Ashburton<br />SA: New Zealand - Saltwater Creek<br />SH: New Zealand - Shannon<br />SY: New Zealand - Sydney<br />T: New Zealand - Timaru<br />TA: New Zealand - Tapanui<br />TE: New Zealand - TeAnau<br />TH: New Zealand - Taihape<br />TP: New Zealand - Te Puke<br />U: New Zealand - Taumaruniu<br />V: New Zealand - Dannevirke<br />W: New Zealand - Wellington<br />WH: New Zealand - Whakatu<br />WI: New Zealand - Whakatu Industrial Park<br />WR: New Zealand - Wairoa<br />WT: New Zealand - Winton<br />WU: New Zealand - Waikuku<br />X: New Zealand - Wanganui<br />Y: New Zealand - Whangarei<br />YP: New Zealand - Waipukurau<br />Z: New Zealand - Taupo"
      },
      "CentreCodeTaiwan": {
        "enum": [
          "KE"
        ],
        "type": "string",
        "description": "This is Centres for Taiwan. A centre is a town where any activity connected with the wool industry takes place. The codes used in transmissions are those defined in the Australian Wool Selling Regulation.<br />KE: Keelung - Taiwan"
      },
      "SoftwareIdentifier": {
        "type": "object",
        "properties": {
          "softwareCompany": {
            "$ref": "#/components/schemas/SoftwareCompany"
          },
          "softwareVersion": {
            "maximum": 9999,
            "minimum": -9999,
            "type": "integer",
            "description": "Version no. e.g. 2400",
            "format": "int32",
            "nullable": true
          },
          "programName": {
            "maxLength": 4,
            "minLength": 1,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SoftwareCompany": {
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8
        ],
        "type": "integer",
        "description": "1: Talman<br />2: Symbotic<br />3: Jumbuck/Datacon<br />4: Jemalong<br />5: NA - no value<br />6: Modiano<br />7: AWH<br />8: AWTA",
        "format": "int32"
      },
      "TransferConfig": {
        "required": [
          "transferType"
        ],
        "type": "object",
        "properties": {
          "transferType": {
            "$ref": "#/components/schemas/TransferType"
          },
          "finalReceiverList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Organisation"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Used to identify document transfer type: Restrict, Unrestrict, and Exclude.\r\n\r\nOnly used for data retrieval. Do not include it in the response."
      },
      "TransferType": {
        "enum": [
          "Unrestrict",
          "Restrict",
          "Exclude"
        ],
        "type": "string",
        "description": "Unrestrict: Send document to all members<br />Restrict: Send document to appointed members<br />Exclude: Send to all members excluding the appointed members"
      },
      "PaymentAdviceDetail": {
        "required": [
          "lotPaymentDetails",
          "paymentSummary",
          "woolSaleHeaderLot"
        ],
        "type": "object",
        "properties": {
          "woolSaleHeaderLot": {
            "$ref": "#/components/schemas/WoolSaleHeaderLot"
          },
          "lotPaymentDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LotPaymentDetail"
            }
          },
          "miscellaneousCharges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MiscellaneousCharge"
            },
            "nullable": true
          },
          "paymentSummary": {
            "$ref": "#/components/schemas/PaymentSummary"
          }
        },
        "additionalProperties": false
      },
      "WoolSaleHeaderLot": {
        "required": [
          "centreCatalogue",
          "centreStorage",
          "invoicingOrganisation",
          "saleDate",
          "saleIdentity",
          "season",
          "woolState"
        ],
        "type": "object",
        "properties": {
          "season": {
            "$ref": "#/components/schemas/Season"
          },
          "saleIdentity": {
            "$ref": "#/components/schemas/SaleIdentity"
          },
          "centreStorage": {
            "$ref": "#/components/schemas/Centre"
          },
          "saleDate": {
            "$ref": "#/components/schemas/LiteralDate"
          },
          "woolState": {
            "$ref": "#/components/schemas/WoolState"
          },
          "packType": {
            "$ref": "#/components/schemas/PackType"
          },
          "postSaleCharge": {
            "$ref": "#/components/schemas/Currency"
          },
          "calculationBasis": {
            "$ref": "#/components/schemas/CalculationBasis"
          },
          "freightCharge": {
            "$ref": "#/components/schemas/Currency"
          },
          "freightRebate": {
            "$ref": "#/components/schemas/Currency"
          },
          "chargePerLot": {
            "$ref": "#/components/schemas/Currency"
          },
          "invoiceNumber": {
            "maximum": 99999999,
            "minimum": -99999999,
            "type": "string",
            "description": "Invoice number of the credit",
            "nullable": true
          },
          "catalogueSection": {
            "$ref": "#/components/schemas/CatalogueSection"
          },
          "isFinalCatalogue": {
            "type": "boolean",
            "description": "A boolean value to indicate whether the related section of the catalogue transmission is expected to have more amendments transmitted or is the final transmission for that section.\r\n\r\ntrue: is a final catalogue.\r\n\r\nfalse: is not a final catalogue.",
            "nullable": true
          },
          "invoicingOrganisation": {
            "$ref": "#/components/schemas/Organisation"
          },
          "releasingOrganisation": {
            "$ref": "#/components/schemas/Organisation"
          },
          "sellingOrganisation": {
            "$ref": "#/components/schemas/Organisation"
          },
          "woolTypeGroup": {
            "$ref": "#/components/schemas/WoolTypeGroup"
          },
          "centreCatalogue": {
            "$ref": "#/components/schemas/Centre"
          },
          "deliveryBasis": {
            "$ref": "#/components/schemas/DeliveryBasis"
          },
          "centreDelivery": {
            "$ref": "#/components/schemas/Centre"
          },
          "centreAlternateDelivery": {
            "$ref": "#/components/schemas/Centre"
          },
          "storageOrganisation": {
            "$ref": "#/components/schemas/Organisation"
          },
          "storageDescription": {
            "maxLength": 15,
            "minLength": 1,
            "type": "string",
            "description": "Used to provide more details on location within the Storage Organisations facility - such as street address, warehouse number etc. – to assist delivery.",
            "nullable": true
          },
          "paymentDueDate": {
            "$ref": "#/components/schemas/LiteralDate"
          },
          "discountRate": {
            "maximum": 99.99,
            "minimum": -99.99,
            "type": "number",
            "description": "Total 4 digits with 2 digits after the decimal point. e.g. 23.76",
            "format": "double",
            "nullable": true,
            "multipleOf": 0.01
          },
          "maximumDaysDiscount": {
            "maximum": 99,
            "minimum": -99,
            "type": "integer",
            "description": "2 digits number. e.g. 23",
            "format": "int32",
            "nullable": true
          },
          "dateStorageChargeCommences": {
            "$ref": "#/components/schemas/LiteralDate"
          },
          "storageChargePerBalePerDay": {
            "$ref": "#/components/schemas/StorageChargeCurrency"
          },
          "penaltyInterestRate": {
            "maximum": 99.99,
            "minimum": -99.99,
            "type": "number",
            "description": "Total 4 digits with 2 digits after the decimal point. e.g. 23.76",
            "format": "double",
            "nullable": true,
            "multipleOf": 0.01
          },
          "lotAvailableDate": {
            "$ref": "#/components/schemas/LiteralDate"
          },
          "postSaleChargeRebate": {
            "$ref": "#/components/schemas/Currency"
          },
          "catalogueAvailabilityDateTime": {
            "$ref": "#/components/schemas/UtcDateTime"
          },
          "saleStartDateTime": {
            "$ref": "#/components/schemas/UtcDateTime"
          },
          "saleEndDateTime": {
            "$ref": "#/components/schemas/UtcDateTime"
          },
          "saleType": {
            "$ref": "#/components/schemas/SaleType"
          },
          "electronicSaleFlag": {
            "maxLength": 1,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "isReservePriceDisplayed": {
            "type": "boolean",
            "description": "A boolean value to indicate whether to display reserve price to buyers.\r\n\r\ntrue: display.\r\n\r\nfalse: not display.",
            "nullable": true
          },
          "tenderSaleReplyDateTime": {
            "$ref": "#/components/schemas/UtcDateTime"
          }
        },
        "additionalProperties": false
      },
      "Season": {
        "maximum": 99,
        "minimum": -99,
        "type": "integer",
        "format": "int32"
      },
      "SaleIdentity": {
        "required": [
          "saleNumber",
          "sellingCentreType"
        ],
        "type": "object",
        "properties": {
          "sellingCentreType": {
            "maxLength": 2,
            "minLength": 1,
            "type": "string",
            "description": "The following codes are reserved for current and historical open cry auction selling centres:\r\n            \r\nSellingCentre/Type (New Zealand):\r\n            \r\nC: Christchurch; \r\n\r\nN: Napier.\r\n\r\n            \r\nSellingCentre/Type (Australia):\r\n            \r\nA: Adelaide; \r\n\r\nAU: Australia; \r\n\r\nB: Brisbane; \r\n\r\nF: Fremantle; \r\n\r\nG: Geelong; \r\n\r\nL: Launceston; \r\n\r\nM: Melbourne; \r\n\r\nN: Newcastle; \r\n\r\nR: Goulburn; \r\n\r\nS: Sydney.\r\n\r\n\r\nThe following codes are allocated for alternative sale types:\r\n            \r\nPS: Private Sales; \r\n\r\nT: Auctions Plus Sales.\r\n            \r\n\r\nPlease contact the WIEDPUG Secretary for the latest list of reserved and allocated codes."
          },
          "saleNumber": {
            "maximum": 99,
            "minimum": -99,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "A group field of SellingCentre/Type and Sale Number\r\n            \r\nFrom: The current value that the Sale Identity is to be changed from.\r\n            \r\nTo: The new value that the Sale Identity is to be changed to."
      },
      "WoolState": {
        "enum": [
          "1",
          "2",
          "3",
          "4",
          "5",
          "6",
          "7",
          "8",
          "9",
          "A",
          "C",
          "M"
        ],
        "type": "string",
        "description": "The state of the wool itemised in the invoice.<br />1. Greasy<br />2. Dead<br />3. Slipe<br />4. Scoured<br />5. Carbonised<br />6. Wool tops<br />7. Wool noils<br />8. Carded sliver<br />9. Other processed wool<br />A. Alpaca<br />C. Cashmere<br />M. Mohair"
      },
      "PackType": {
        "enum": [
          "0",
          "1",
          "2",
          "3",
          "4",
          "5",
          "6",
          "7",
          "8",
          "9",
          "A",
          "B",
          "C",
          "D",
          "E",
          "F",
          "Z"
        ],
        "type": "string",
        "description": "A code used to indicate how the wool has been baled. The most common type is Farm bales. <strong>Original</strong> - the pack type when the wool was originally baled. <strong>Preferred</strong> - The pack type which the buyer would prefer to be used when his wool is dumped.<br />0: Standard (farm) bale<br />1: Bag/butt<br />2: Lightweight bale<br />3: Jumbo bale<br />4: Single bales (normal density dumped)<br />5: Single bales (high density dumped)<br />6: Single bales (super high density dumped)<br />7: 3 bale tripack (super high density dumped)<br />8: 2 bale tripack (super high density dumped)<br />9: U bales<br />A: 4 or 6 bale unitised (normal density dumped)<br />B: 4 or 6 bale unitised (high density dumped)<br />C: 4 or 6 bale unitised (super high density dumped)<br />D: Two Bale Module (2BM)<br />E: J9 size bale used for scoured wool<br />F: J12 size bale used for scoured wool<br />Z: Mixed (to be used with groups only, that is, record type 12)"
      },
      "Currency": {
        "required": [
          "value"
        ],
        "type": "object",
        "properties": {
          "value": {
            "maximum": 9999999999.99,
            "minimum": -9999999999.99,
            "type": "number",
            "description": "Total up to 12 digits with 2 digits after the decimal point.",
            "format": "double",
            "multipleOf": 0.01
          },
          "currencyCode": {
            "$ref": "#/components/schemas/CurrencyCode"
          }
        },
        "additionalProperties": false
      },
      "CurrencyCode": {
        "enum": [
          "AUD",
          "BEF",
          "NZD",
          "BGP",
          "FRF",
          "DEM",
          "ITL",
          "CNY",
          "ANG",
          "TWD",
          "ZAR",
          "USD",
          "EUR"
        ],
        "type": "string",
        "description": "AUD: Australian Dollars<br />BEF: Belgian Francs<br />NZD: New Zealand Dollars<br />BGP: British Pounds<br />FRF: French Francs<br />DEM: German Deutsche Marks<br />ITL: Italy Lire<br />CNY: Chinese Yuan<br />ANG: Netherlands Antilles Guilders<br />BEF: Taiwan New Dollars<br />ZAR: South Africa Rand<br />USD: USA Dollars<br />EUR: Euro"
      },
      "CalculationBasis": {
        "enum": [
          "B",
          "K",
          "P"
        ],
        "type": "string",
        "description": "This is used to identify the method used to calculate the post sale charge. The post sale charge may be a per bale, per kilogram or percentage of the price of the wool. Calculation Basis is always per bale in Australia.<br />B: Post sale charge is levied per bale<br />K: The post sale charge is a charge per kil<br />P: The post sale charge is a % of first cost"
      },
      "CatalogueSection": {
        "enum": [
          "BLK",
          "DEAD",
          "FLC",
          "FMG",
          "ODD",
          "SKIN",
          "SKT",
          "TRAD",
          "XBD"
        ],
        "type": "string",
        "description": "These are the codes allocated by the local wool authorities to sectionalise the sale catalogues.<br />BLK: ODDS - Black<br />DEAD: ODDS - Dead<br />FLC: MFLC - Merino Fleece<br />FMG: ODDS - Fellmongered<br />ODD: ODDS - Oddments<br />SKIN: ODDS - Skin Wool<br />SKT: MSKT - Skirting<br />TRAD: MFLC / MSKT / XBFS / ODDS - Traditionally Shown<br />XBD: C XBFS - Crossbred (Flc & Skt)"
      },
      "WoolTypeGroup": {
        "enum": [
          "MFLC",
          "MSKT",
          "XBFS",
          "ODDS"
        ],
        "type": "string",
        "description": "A code to indicate which section of the sale that lot belongs.<br />MFLC: Merino fleece types<br />MSKT: Merino fleece types<br />XBFS: Merino fleece types<br />ODDS: Merino fleece types"
      },
      "DeliveryBasis": {
        "enum": [
          "D",
          "L"
        ],
        "type": "string",
        "description": "D: Delivery Nominated Destination<br />L: Loaded on Transport"
      },
      "StorageChargeCurrency": {
        "required": [
          "value"
        ],
        "type": "object",
        "properties": {
          "value": {
            "maximum": 9.999,
            "minimum": -9.999,
            "type": "number",
            "format": "double",
            "multipleOf": 0.001
          },
          "currencyCode": {
            "$ref": "#/components/schemas/CurrencyCode"
          }
        },
        "additionalProperties": false
      },
      "UtcDateTime": {
        "type": "string",
        "description": "Date and Time value in ISO 8601 standard UTC datetime format. e.g. 2024-03-21T19:25:04+00:00.000Z",
        "format": "((?:19|20)[0-9][0-9])-(0?[1-9]|1[012])-(0?[1-9]|[12][0-9]|3[01])T([01]\\d|2[0-3]):([0-5]\\d):([0-5]\\d)Z$",
        "example": "2024-03-21T19:25:04+00:00.000Z"
      },
      "SaleType": {
        "enum": [
          "A",
          "T",
          "O",
          "AV",
          "E"
        ],
        "type": "string",
        "description": "A: Auction (open cry)<br />T: Tender<br />O: Offer<br />AV: Availability<br />E: Electronic Sale"
      },
      "LotPaymentDetail": {
        "required": [
          "lotIdentity",
          "lotLastCost"
        ],
        "type": "object",
        "properties": {
          "lotIdentity": {
            "$ref": "#/components/schemas/LotIdentity"
          },
          "lotLastCost": {
            "$ref": "#/components/schemas/Currency"
          }
        },
        "additionalProperties": false
      },
      "LotIdentity": {
        "maxLength": 6,
        "minLength": 0,
        "type": "string",
        "description": "This is a compound name for lot number and lot suffix, where the lot \r\nnumber is 5 numeric characters and the lot suffix is 1 alphanumeric\r\ncharacter.The suffix is used when a lot is broken up by the original lot\r\nnumber is retained; for example.If 2 bales of a 10-bale lot got wet and\r\nthe 8 bales and the 2 bales are offered separately, one could have a\r\nsuffix A and the other a suffix B.Where a suffix is not used, the lot\r\nnumber occupies the whole of the Lot Identity field and is right justified.\r\n            \r\nFrom:\r\n            \r\nThe current value that the Lot Identity is to be changed from.\r\n\r\nTo:\r\n\r\nThe new value that the Lot Identity is to be changed to."
      },
      "MiscellaneousCharge": {
        "required": [
          "chargeAmount",
          "debitOrCreditType"
        ],
        "type": "object",
        "properties": {
          "chargeType": {
            "maxLength": 5,
            "minLength": 1,
            "type": "string",
            "description": "A code describing a charge such as penalty interest or miscellaneous adjustments to an earlier payment.",
            "nullable": true
          },
          "chargeDescription": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string",
            "description": "A description of the particular charge type.",
            "nullable": true
          },
          "chargeAmount": {
            "$ref": "#/components/schemas/Currency"
          },
          "debitOrCreditType": {
            "$ref": "#/components/schemas/DebitOrCreditType"
          }
        },
        "additionalProperties": false
      },
      "DebitOrCreditType": {
        "enum": [
          "DR",
          "CR"
        ],
        "type": "string"
      },
      "PaymentSummary": {
        "required": [
          "datePaymentMade",
          "discountAmount",
          "lastCostPaid",
          "netAmountPaid"
        ],
        "type": "object",
        "properties": {
          "lastCostPaid": {
            "$ref": "#/components/schemas/Currency"
          },
          "discountAmount": {
            "$ref": "#/components/schemas/Currency"
          },
          "netAmountPaid": {
            "$ref": "#/components/schemas/Currency"
          },
          "datePaymentMade": {
            "$ref": "#/components/schemas/LiteralDate"
          }
        },
        "additionalProperties": false
      },
      "Comment": {
        "required": [
          "text"
        ],
        "type": "object",
        "properties": {
          "text": {
            "maxLength": 80,
            "minLength": 1,
            "type": "string",
            "description": "A free form message"
          }
        },
        "additionalProperties": false
      },
      "ApiResult": {
        "type": "object",
        "properties": {
          "apiMessages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiMessage"
            },
            "description": "Contains information about the response if applicable.",
            "nullable": true
          },
          "data": {
            "description": "Contains response data.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A standard API response object used for all successful API responses"
      },
      "ApiMessage": {
        "type": "object",
        "properties": {
          "warningMessage": {
            "type": "string",
            "description": "A code to indicate the different types of errors.\r\n\r\n11: Weight Note suffix is not numeric or has been omitted.\r\n\r\n12: Number of bales is invalid or has been omitted.\r\n\r\n13: Sale identification has been omitted.\r\n\r\n18: Invalid Gross weight.\r\n\r\n19: Invalid Tare weight.\r\n\r\n20: Invalid Centre/Client code on pre-sale test request.\r\n\r\n24: Incorrect PCTR Hash total.\r\n\r\nDRV: Dark and Medullated Fibre Risk error.",
            "nullable": true
          },
          "warningCode": {
            "type": "string",
            "nullable": true
          },
          "informationCode": {
            "$ref": "#/components/schemas/InformationCode"
          }
        },
        "additionalProperties": false
      },
      "InformationCode": {
        "enum": [
          "OK"
        ],
        "type": "string",
        "description": "A code to indicate the information.\r\n\r\nFor AC, PC LI and GI transmissions, one record will be sent for each Wool Sale Header Lots received.\r\n\r\nOK - aaaaaDATA RECEIVED OK FOR aann/nn dd/mm/yy ooooo LOTS nnnn\r\n\r\nWhere aann/nn = sale number/season\r\n    \r\ndd/mm/yy = sale date\r\n    \r\nooooo = selling organisation\r\n    \r\nnnnnn = number of lots\r\n    \r\nReason - You have sent data to the network and it has been received with no communication or transmission errors.\r\n\r\nAction - None.\r\n\r\nOR\r\n\r\nFor all other types of transmissions, one record will be sent for each transmission file received.\r\n\r\nOK - ALL aaaaa DATA RECEIVED OK\r\n\r\nReason - You have sent data to the network and it has been received with no communication or transmission errors.\r\n\r\nAction - None."
      },
      "ApiErrorResult": {
        "required": [
          "status",
          "title"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "A URI reference [RFC3986] that identifies the problem type.\r\n\r\nThis specification encourages that, when dereferenced, it provide human-readable documentation for the problem type (e.g., using HTML [W3C.REC-html5-20141028]). \r\n            \r\nWhen this member is not present, its value is assumed to be \"about:blank\".\r\n\r\ne.g. For 400 Bad Request, the \"type\" value can be \"https://tools.ietf.org/html/rfc9110#section-15.5.1\"",
            "nullable": true
          },
          "title": {
            "minLength": 1,
            "type": "string",
            "description": "A short, human-readable summary of the problem type.\r\n\r\nIt SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization(e.g., using proactive content negotiation; see[RFC7231], Section 3.4).\r\n\r\ne.g. \"One or more validation errors occurred.\""
          },
          "status": {
            "type": "integer",
            "description": "The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.",
            "format": "int32"
          },
          "detail": {
            "type": "string",
            "description": "A human-readable explanation specific to this occurrence of the problem. e.g. 400, 403, or business relared problem etc.",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomError"
            },
            "description": "A collection of the erros",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A machine-readable format for specifying errors in HTTP API responses based on https://tools.ietf.org/html/rfc7807."
      },
      "CustomError": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            },
            "description": "Dictionary of errors in <PropertyName, ErrorDetails[]> format. e.g. errors: { \"name\": [\"Product name is required\"], \"category\": [\"Category name cannot be longer than 20 characters.\"]  }",
            "nullable": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "errorCode": {
            "type": "string",
            "description": "The error code is defined by business rules to indicate the different types of errors.\r\n\r\nExamples of error code:\r\n \r\nDOXCT: Document originator does not match current transmitter.\"\r\n            \r\nINVTC: Invalid transfer config. All data rejected.\"\r\n\r\nINVFR: Invalid/missing FinalReceiverList record. All data rejected.\"\r\n            \r\nINVAC: Invalid sale aann/nn dd/mm/yy ooooo. All data rejected.\"\r\n\r\nINVCR: Current receiver not awtm. All data rejected.\"\r\n\r\nINVDO: Invalid document originator code aaaaa. Data accepted.\"\r\n\r\nINVSO: Warning! Invalid selling org AAAAA using doc orig AAAAA.\"\r\n\r\nINVEX: Invalid excluded record.\"",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RequestForData": {
        "required": [
          "requestForDataType",
          "transmissionHeader"
        ],
        "type": "object",
        "properties": {
          "transmissionHeader": {
            "$ref": "#/components/schemas/TransmissionHeader"
          },
          "requestForDataType": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UseNetworkDateTimeRequestForDataType"
              },
              {
                "$ref": "#/components/schemas/DateTimeRangeRequestForDataType"
              }
            ]
          }
        },
        "additionalProperties": false,
        "discriminator": {
          "propertyName": "requestForDataType",
          "mapping": {
            "UseNetworkDateTimeRequestForDataType": "#/components/schemas/UseNetworkDateTimeRequestForDataType",
            "DateTimeRangeRequestForDataType": "#/components/schemas/DateTimeRangeRequestForDataType"
          }
        }
      },
      "UseNetworkDateTimeRequestForDataType": {
        "required": [
          "isUsingNetworkDateTime"
        ],
        "type": "object",
        "properties": {
          "isUsingNetworkDateTime": {
            "type": "boolean",
            "description": "A boolean value to indicate whether to use network datetime.\r\n\r\ntrue: use network datetime.\r\n\r\nfalse: not use."
          }
        },
        "additionalProperties": false
      },
      "DateTimeRangeRequestForDataType": {
        "required": [
          "startDateTimeStatusRequest"
        ],
        "type": "object",
        "properties": {
          "startDateTimeStatusRequest": {
            "$ref": "#/components/schemas/UtcDateTime"
          },
          "endDateTimeStatusRequest": {
            "$ref": "#/components/schemas/UtcDateTime"
          }
        },
        "additionalProperties": false
      },
      "PaymentAdviceListApiResult": {
        "type": "object",
        "properties": {
          "apiMessages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiMessage"
            },
            "description": "Contains information about the response if applicable.",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentAdvice"
            },
            "description": "Contains response data.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A standard API response object used for all successful API responses"
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Access Token that is added in the Authorization header of the HTTP request. Example: \"Authorization: Bearer {token}\". The JWT serves as a credential that proves the identity of the client to the server.",
        "name": "Authorization",
        "in": "header"
      },
      "oauth2": {
        "type": "oauth2",
        "description": "Authentication for client applications by providing Client ID and Client Secret for an JWT Access Token.",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "/auth-server/oauth/token",
            "scopes": {}
          }
        }
      }
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ]
}
