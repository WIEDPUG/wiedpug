{
  "openapi": "3.0.1",
  "info": {
    "title": "WIEDPUG API",
    "description": "API Documentation for the WIEDPUG Network",
    "termsOfService": "https://wiedpug.github.io/wiedpug",
    "contact": {
      "name": "WIEDPUG Team",
      "url": "https://wiedpug.github.io/wiedpug",
      "email": "changethis@email.com"
    },
    "license": {
      "name": "Applicable License",
      "url": "https://wiedpug.github.io/wiedpug"
    },
    "version": "v0.0"
  },
  "paths": {
    "/v0/postsale-printing-of-presale-certificates": {
      "post": {
        "tags": [
          "Request Postsale Printing Of Presale Certificates"
        ],
        "summary": "Request Postsale Printing Of Presale Certificates",
        "description": "Used to provide request postsale printing of presale certificates",
        "operationId": "CreateRequestPostsalePrintingOfPresaleCertificates",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RequestPostsalePrintingOfPresaleCertificates"
                }
              },
              "example": [
                {
                  "transmissionHeader": {
                    "dateFormatLastRevised": "2020-07-15",
                    "dateTransmissionFileCreated": "2016-01-17",
                    "countryOfOrigin": "AU",
                    "documentOriginator": {
                      "organisationCode": "ATW"
                    },
                    "currentReceiver": {
                      "organisationCode": "ATW"
                    },
                    "versionNumber": 31,
                    "softwareIdentifier": {
                      "softwareCompany": 1,
                      "softwareVersion": 1082,
                      "programName": "NETR"
                    },
                    "abn": 72001967184
                  },
                  "confirmations": [
                    {
                      "paymentHeader": {
                        "clientCode": 55674,
                        "statementDate": "2024-05-11",
                        "amountRemitted": {
                          "value": 262,
                          "currencyCode": "AUD"
                        },
                        "statementPaymentDate": "2024-06-01",
                        "bankBsbNumber": 335567,
                        "bankAccountNumber": 456735,
                        "amountWithheldThisStatement": {
                          "value": 690.45,
                          "currencyCode": "AUD"
                        },
                        "amountWithheldPreviousStatements": {
                          "value": 672.23,
                          "currencyCode": "AUD"
                        }
                      },
                      "paymentDetails": [
                        {
                          "statementDate": "2024-05-12",
                          "accountReference": "12345678901",
                          "amount": {
                            "value": 723.23,
                            "currencyCode": "AUD"
                          },
                          "paymentType": 0
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiResult"
                  }
                },
                "example": {
                  "apiMessages": []
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResult"
                },
                "example": {
                  "type": "https://datatracker.ietf.org/doc/html/rfc9110#section-15.5.1",
                  "title": "One or more validation errors occurred",
                  "status": 400,
                  "detail": "",
                  "errors": [
                    {
                      "errors": {
                        "Requests[0].TransmissionHeader.DateFormatLastRevised": [
                          "The field DateFormatLastRevised is required",
                          "The field DateFormatLastRevised must match regulart expression pattern..."
                        ],
                        "Requests[0].TransmissionHeader.CountryOfOrigin": [
                          "The field CountryOfOrigin is required"
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResult"
                },
                "example": {
                  "type": "https://datatracker.ietf.org/doc/html/rfc9110#section-15.5.2",
                  "title": "Unauthorized",
                  "status": 401,
                  "detail": "Missing authentication credentials"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResult"
                },
                "example": {
                  "type": "https://datatracker.ietf.org/doc/html/rfc9110#section-15.5.4",
                  "title": "You don't have permission to access this resource",
                  "status": 403,
                  "detail": "You don't have a 'read' access to access this resource"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResult"
                },
                "example": {
                  "type": "https://datatracker.ietf.org/doc/html/rfc9110#name-500-internal-server-error",
                  "title": "An error occurred while processing your required",
                  "status": 500,
                  "detail": "Error details.."
                }
              }
            }
          }
        }
      }
    },
    "/v0/postsale-printing-of-presale-certificates/data": {
      "post": {
        "tags": [
          "Request Postsale Printing Of Presale Certificates"
        ],
        "summary": "Retrieves the request postsale printing of presale certificates",
        "operationId": "RequestForRequestPostsalePrintingOfPresaleCertificates",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RequestForData"
                }
              },
              "example": [
                {
                  "transmissionHeader": {
                    "dateFormatLastRevised": "2020-07-15",
                    "dateTransmissionFileCreated": "2016-01-17",
                    "countryOfOrigin": "AU",
                    "documentOriginator": {
                      "organisationCode": "ABC"
                    },
                    "currentReceiver": {
                      "organisationCode": "ATW"
                    },
                    "versionNumber": 31,
                    "softwareIdentifier": {
                      "softwareCompany": 8,
                      "softwareVersion": 1082,
                      "programName": "NETR"
                    },
                    "abn": 72001967184
                  },
                  "requestForDataType": {}
                }
              ]
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RequestPostsalePrintingOfPresaleCertificatesListApiResult"
                  }
                },
                "example": {
                  "apiMessages": [],
                  "data": [
                    {
                      "transmissionHeader": {
                        "dateFormatLastRevised": "2020-07-15",
                        "dateTransmissionFileCreated": "2016-01-17",
                        "countryOfOrigin": "AU",
                        "documentOriginator": {
                          "organisationCode": "AWT"
                        },
                        "currentReceiver": {
                          "organisationCode": "ATW"
                        },
                        "versionNumber": 31,
                        "softwareIdentifier": {
                          "softwareCompany": 1,
                          "softwareVersion": 1082,
                          "programName": "NETR"
                        },
                        "abn": 72001967184
                      },
                      "printPreSaleCertificatePostSales": [
                        {
                          "certificateIdentity": {
                            "certificateIdPrefix": 2,
                            "certificateIdNumber": 234567,
                            "certificateIdSuffix": "F",
                            "certificateIdCd": 6
                          },
                          "weightNote": {
                            "prefix": "L",
                            "suffix": 1234567
                          },
                          "lotIdentity": "45567L",
                          "buyingOrganisation": {
                            "organisationCode": "AWT"
                          },
                          "saleOutcome": 6,
                          "numberOfBales": 23,
                          "gross": {
                            "value": 2340,
                            "weightCode": "KG"
                          },
                          "saleIdentity": {
                            "sellingCentreType": "M",
                            "saleNumber": 18
                          },
                          "centreStorage": {
                            "country": "AU",
                            "centreCode": "AR"
                          },
                          "certificateDeliveryIndicator": 0
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "204": {
            "description": "No Content",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResult"
                },
                "example": {
                  "apiMessages": [
                    {
                      "message": "Resason:  You have requested data but there is nothing available.\nAction: If you have requested private data, wait until more data is received by the network and try again.  If your data should be there, check with the Network Administrator. If you have requested broadcast data, either this is not yet available, or you have incorrectly specified the sale number, broker etc. in the RequestForData. Check this and try again later."
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResult"
                },
                "example": {
                  "type": "https://datatracker.ietf.org/doc/html/rfc9110#section-15.5.1",
                  "title": "One or more validation errors occurred",
                  "status": 400,
                  "detail": "",
                  "errors": [
                    {
                      "errors": {
                        "Requests[0].TransmissionHeader.DateFormatLastRevised": [
                          "The field DateFormatLastRevised is required",
                          "The field DateFormatLastRevised must match regulart expression pattern..."
                        ],
                        "Requests[0].TransmissionHeader.CountryOfOrigin": [
                          "The field CountryOfOrigin is required"
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResult"
                },
                "example": {
                  "type": "https://datatracker.ietf.org/doc/html/rfc9110#section-15.5.2",
                  "title": "Unauthorized",
                  "status": 401,
                  "detail": "Missing authentication credentials"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResult"
                },
                "example": {
                  "type": "https://datatracker.ietf.org/doc/html/rfc9110#section-15.5.4",
                  "title": "You don't have permission to access this resource",
                  "status": 403,
                  "detail": "You don't have a 'read' access to access this resource"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResult"
                },
                "example": {
                  "type": "https://datatracker.ietf.org/doc/html/rfc9110#section-15.5.4",
                  "title": "Resource not found",
                  "status": 404
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResult"
                },
                "example": {
                  "type": "https://datatracker.ietf.org/doc/html/rfc9110#name-500-internal-server-error",
                  "title": "An error occurred while processing your required",
                  "status": 500,
                  "detail": "Error details.."
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RequestPostsalePrintingOfPresaleCertificates": {
        "required": [
          "printPreSaleCertificatePostSales",
          "transmissionHeader"
        ],
        "type": "object",
        "properties": {
          "transmissionHeader": {
            "$ref": "#/components/schemas/TransmissionHeader"
          },
          "transferConfig": {
            "$ref": "#/components/schemas/TransferConfig"
          },
          "printPreSaleCertificatePostSales": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PrintPreSaleCertificatePostSale"
            }
          }
        },
        "additionalProperties": false
      },
      "TransmissionHeader": {
        "required": [
          "abn",
          "countryOfOrigin",
          "currentReceiver",
          "dateFormatLastRevised",
          "dateTransmissionFileCreated",
          "documentOriginator"
        ],
        "type": "object",
        "properties": {
          "dateFormatLastRevised": {
            "$ref": "#/components/schemas/UtcDate"
          },
          "dateTransmissionFileCreated": {
            "$ref": "#/components/schemas/UtcDate"
          },
          "countryOfOrigin": {
            "$ref": "#/components/schemas/CountryCode"
          },
          "documentOriginator": {
            "$ref": "#/components/schemas/Organisation"
          },
          "currentReceiver": {
            "$ref": "#/components/schemas/Organisation"
          },
          "versionNumber": {
            "maximum": 99,
            "minimum": -99,
            "type": "integer",
            "description": "The version number of the WIEDPUG Handbook that the transmission relates to\r\nTwo digits. e.g. 99",
            "format": "int32",
            "nullable": true
          },
          "softwareIdentifier": {
            "$ref": "#/components/schemas/SoftwareIdentifier"
          },
          "abn": {
            "maximum": 99999999999,
            "minimum": 10000000000,
            "type": "integer",
            "description": "Australian Business Number, 11 digits",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "UtcDate": {
        "type": "string",
        "description": "Date value in ISO standard UTC date format. e.g. 2024-03-21 (YYYY-MM-DD).",
        "format": "((?:19|20)[0-9][0-9])-(0?[1-9]|1[012])-(0?[1-9]|[12][0-9]|3[01])",
        "example": "2024-03-21"
      },
      "CountryCode": {
        "enum": [
          "AU",
          "NZ",
          "DE",
          "IT",
          "CN",
          "TW"
        ],
        "type": "string",
        "description": "A code for the country in which the transmission was created. Country Code using ISO 3166-1 standard<br />AU: Australia<br />NZ: New Zealand<br />DE: Germany<br />IT: Italy<br />CN: China<br />TW: Taiwan"
      },
      "Organisation": {
        "required": [
          "organisationCode"
        ],
        "type": "object",
        "properties": {
          "organisationCode": {
            "maxLength": 3,
            "minLength": 1,
            "type": "string"
          },
          "centre": {
            "$ref": "#/components/schemas/Centre"
          }
        },
        "additionalProperties": false,
        "description": "A code used to identify organisations involved in the wool trade.\r\n\r\nThese codes are issued and maintained by the Network and are available online."
      },
      "Centre": {
        "required": [
          "centreCode",
          "country"
        ],
        "type": "object",
        "properties": {
          "country": {
            "$ref": "#/components/schemas/CountryCode"
          },
          "centreCode": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CentreCodeAustralia"
              },
              {
                "$ref": "#/components/schemas/CentreCodeChina"
              },
              {
                "$ref": "#/components/schemas/CentreCodeGermany"
              },
              {
                "$ref": "#/components/schemas/CentreCodeItaly"
              },
              {
                "$ref": "#/components/schemas/CentreCodeNewZealand"
              },
              {
                "$ref": "#/components/schemas/CentreCodeTaiwan"
              }
            ]
          }
        },
        "additionalProperties": false,
        "description": "Centre has country and centreCode.\r\n\r\nThe centreCode is one of these below based on the value of country.\r\n\r\nThe mapping of country:centreCode is the following:\r\n            \r\nAU:CentreCodeAustralia\r\n\r\nNZ: CentreNewZealand\r\n\r\nDE: CentreGermany\r\n\r\nIT: CentreItaly\r\n\r\nCN: CentreChina\r\n\r\nTW: CentreTaiwan\r\n\r\nThe legacy codes for Overseas Centre are under CentreCodeAustralia",
        "discriminator": {
          "propertyName": "country",
          "mapping": {
            "AU": "#/components/schemas/CentreCodeAustralia",
            "CN": "#/components/schemas/CentreCodeChina",
            "DE": "#/components/schemas/CentreCodeGermany",
            "IT": "#/components/schemas/CentreCodeItaly",
            "NZ": "#/components/schemas/CentreCodeNewZealand",
            "TW": "#/components/schemas/CentreCodeTaiwan"
          }
        }
      },
      "CentreCodeAustralia": {
        "enum": [
          "A",
          "AD",
          "AR",
          "AU",
          "B",
          "BA",
          "BK",
          "BL",
          "BM",
          "BO",
          "BR",
          "BT",
          "C",
          "CA",
          "CB",
          "CC",
          "CL",
          "CN",
          "CO",
          "CR",
          "CU",
          "CW",
          "D",
          "DE",
          "DO",
          "DR",
          "E",
          "ER",
          "ES",
          "F",
          "G",
          "GF",
          "GI",
          "GN",
          "GR",
          "GU",
          "H",
          "HA",
          "HB",
          "HM",
          "HO",
          "HY",
          "I",
          "J",
          "JA",
          "K",
          "KE",
          "KH",
          "KI",
          "KN",
          "KT",
          "KW",
          "KY",
          "L",
          "LC",
          "M",
          "MA",
          "MB",
          "MC",
          "ME",
          "MG",
          "MI",
          "MO",
          "MR",
          "MU",
          "N",
          "NA",
          "ND",
          "NO",
          "NR",
          "OB",
          "OR",
          "P",
          "PA",
          "PL",
          "Q",
          "QU",
          "R",
          "S",
          "SG",
          "SH",
          "SK",
          "SW",
          "SY",
          "T",
          "TE",
          "U",
          "UR",
          "V",
          "W",
          "WA",
          "WG",
          "WL",
          "WN",
          "WR",
          "WW",
          "X",
          "Y",
          "YA",
          "YM",
          "YO",
          "Z",
          "ZC",
          "ZD",
          "ZH",
          "ZJ",
          "ZK",
          "ZL",
          "ZM",
          "ZO",
          "ZP",
          "ZQ",
          "ZR",
          "ZT",
          "ZV",
          "ZW",
          "ZX",
          "ZY"
        ],
        "type": "string",
        "description": "This is Centres for Australia. A centre is a town where any activity connected with the wool industry takes place. The codes used in transmissions are those defined in the Australian Wool Selling Regulation.<br />A: Australia - ADELAIDE<br />AD: Australia - Ardlethan<br />AR: Australia - Armidale (NSW)<br />AU: Australia - AUSTRALIA (AWEX internal only)<br />B: Australia - BRISBANE<br />BA: Australia - Benalla<br />BK: Australia - Bourke<br />BL: Australia - Ballarat<br />BM: Australia - Barham<br />BO: Australia - Boorowa<br />BR: Australia - Bordertown<br />BT: Australia - Bathurst<br />C: Australia - Cooma<br />CA: Australia - Casterton<br />CB: Australia - Coonabarabran<br />CC: Australia - Culcairn<br />CL: Australia - Coleraine<br />CN: Australia - Condoblin<br />CO: Australia - Cootamundra<br />CR: Australia - Corowa<br />CU: Australia - Cunnamulla<br />CW: Australia - Crookwell<br />D: Australia - Bendigo<br />DE: Australia - Deniliquin<br />DO: Australia - Dubbo<br />DR: Australia - Canowindra<br />E: Australia - Echuca<br />ER: Australia - Euroa<br />ES: Australia - Esperance<br />F: Australia - FREMANTLE<br />G: Australia - GEELONG<br />GF: Australia - Grenfell<br />GI: Australia - Glenn Innes<br />GN: Australia - Gunning<br />GR: Australia - Griffith<br />GU: Australia - Guyra<br />H: Australia - Hobart<br />HA: Australia - Harden<br />HB: Australia - Holbrook<br />HM: Australia - Hamilton<br />HO: Australia - Horsham<br />HY: Australia - Hay<br />I: Australia - Narrabri<br />J: Australia - Parkes<br />JA: Australia - Jamestown<br />K: Australia - Warracknabeal<br />KE: Australia - Kerang<br />KH: Australia - Keith<br />KI: Australia - Kangaroo Island<br />KN: Australia - Kingston<br />KT: Australia - Katanning<br />KW: Australia - Wagga Wagga<br />KY: Australia - Kyneton<br />L: Australia - LAUNCESTON<br />LC: Australia - Lane Cove (AWEX internal only)<br />M: Australia - MELBOURNE<br />MA: Australia - Mansfield<br />MB: Australia - Murray Bridge<br />MC: Australia - Macarthur<br />ME: Australia - Melton<br />MG: Australia - Mount Gambier<br />MI: Australia - Mildura<br />MO: Australia - Moree<br />MR: Australia - Maryborough<br />MU: Australia - Mudgee<br />N: Australia - NEWCASTLE<br />NA: Australia - Narrandera<br />ND: Australia - Goondiwindi<br />NO: Australia - Northam<br />NR: Australia - Naracoorte<br />OB: Australia - Oberon<br />OR: Australia - Orange<br />P: Australia - Portland<br />PA: Australia - Cowra<br />PL: Australia - Port Lincoln<br />Q: Australia - Yarrawonga<br />QU: Australia - Queanbeyan<br />R: Australia - GOULBURN<br />S: Australia - SYDNEY<br />SG: Australia - St George<br />SH: Australia - Shepparton<br />SK: Australia - Skipton<br />SW: Australia - Swan Hill<br />SY: Australia - Seymour<br />T: Australia - Inverell<br />TE: Australia - Temora<br />U: Australia - Auburn<br />UR: Australia - Uralla<br />V: Australia - Forbes<br />W: Australia - Tamworth<br />WA: Australia - Warren<br />WG: Australia - Walgett<br />WL: Australia - Walcha<br />WN: Australia - Wellington<br />WR: Australia - Wangaratta<br />WW: Australia - West Wyalong<br />X: Australia - Ararat<br />Y: Australia - Albury<br />YA: Australia - Yass<br />YM: Australia - Yarram<br />YO: Australia - Young<br />Z: Australia - Albany<br />ZC:Christchurch - New Zealand<br />ZD: Dunedin - New Zealand<br />ZH: Blumenthal - Germany<br />ZJ: Biella - Italy<br />ZK: Grisignano - Italy<br />ZL: Mosgiel - New Zealand<br />ZM: Nanjing - China<br />ZO: Keelung - Taiwan<br />ZP: Shanghai - China<br />ZQ: Qingdao - China<br />ZR: Zhangjiagang - China<br />ZT: Timaru - New Zealand<br />ZV: Invercargill - New Zealand<br />ZW:Wellington - New Zealand<br />ZX: Napier – New Zealand<br />ZY: Ashburton – New Zealand"
      },
      "CentreCodeChina": {
        "enum": [
          "NA",
          "SH",
          "QI",
          "ZH"
        ],
        "type": "string",
        "description": "This is Centres for China. A centre is a town where any activity connected with the wool industry takes place. The codes used in transmissions are those defined in the Australian Wool Selling Regulation.<br />NA: Nanjing - China<br />SH: Shanghai - China<br />QI: Qingdao - China<br />ZH: Zhangjiagang - China"
      },
      "CentreCodeGermany": {
        "enum": [
          "BL"
        ],
        "type": "string",
        "description": "This is Centres for Germany. A centre is a town where any activity connected with the wool industry takes place. The codes used in transmissions are those defined in the Australian Wool Selling Regulation.<br />BL: Blumenthal - Germany"
      },
      "CentreCodeItaly": {
        "enum": [
          "BI",
          "GR"
        ],
        "type": "string",
        "description": "This is Centres for Italy. A centre is a town where any activity connected with the wool industry takes place. The codes used in transmissions are those defined in the Australian Wool Selling Regulation.<br />BI: Biella - Italy<br />GR: Grisignano - Italy"
      },
      "CentreCodeNewZealand": {
        "enum": [
          "A",
          "AW",
          "B",
          "BL",
          "BT",
          "C",
          "CV",
          "D",
          "F",
          "FA",
          "G",
          "GD",
          "GO",
          "HA",
          "HS",
          "I",
          "J",
          "K",
          "KA",
          "KP",
          "L",
          "LO",
          "LU",
          "M",
          "MA",
          "MK",
          "MT",
          "MU",
          "N",
          "NE",
          "O",
          "OH",
          "OI",
          "OM",
          "OT",
          "P",
          "PT",
          "PU",
          "R",
          "RG",
          "RI",
          "S",
          "SA",
          "SH",
          "SY",
          "T",
          "TA",
          "TE",
          "TH",
          "TP",
          "U",
          "V",
          "W",
          "WH",
          "WI",
          "WR",
          "WT",
          "WU",
          "X",
          "Y",
          "YP",
          "Z"
        ],
        "type": "string",
        "description": "This is Centres for New Zealand. A centre is a town where any activity connected with the wool industry takes place. The codes used in transmissions are those defined in the Australian Wool Selling Regulation.<br />A: New Zealand - Auckland<br />AW: New Zealand - Awatoto<br />B: New Zealand - Cambridge<br />BL: New Zealand - Blenheim<br />BT: New Zealand - Bunnythorpe<br />C: New Zealand - Christchurch<br />CV: New Zealand - Clive<br />D: New Zealand - Dunedin<br />F: New Zealand - Feilding<br />FA: New Zealand - Fairlie<br />G: New Zealand - Gisborne<br />GD: New Zealand - Geraldine<br />GO: New Zealand - Gore<br />HA: New Zealand - Hawera<br />HS: New Zealand - Hastings<br />I: New Zealand - Invercargill<br />J: New Zealand - Tapanui<br />K: New Zealand - Te Kuiti<br />KA: New Zealand - Kakariki<br />KP: New Zealand - Kaiapoi<br />L: New Zealand - Mosgiel<br />LO: New Zealand - Longburn<br />LU: New Zealand - Lumsden<br />M: New Zealand - Masterton<br />MA: New Zealand - Mangatinoka<br />MK: New Zealand - Motueka<br />MT: New Zealand - Milton<br />MU: New Zealand - Mataura<br />N: New Zealand - Napier<br />NE: New Zealand - Nelson<br />O: New Zealand - Oamaru<br />OH: New Zealand - Ohinewai<br />OI: New Zealand - Ohai<br />OM: New Zealand - Omakau<br />OT: New Zealand - Otorohonga<br />P: New Zealand - Palmerston North<br />PT: New Zealand - Pahiatua<br />PU: New Zealand - Putaruru<br />R: New Zealand - Rotorua<br />RG: New Zealand - Rangiora<br />RI: New Zealand - Riwaka<br />S: New Zealand - Ashburton<br />SA: New Zealand - Saltwater Creek<br />SH: New Zealand - Shannon<br />SY: New Zealand - Sydney<br />T: New Zealand - Timaru<br />TA: New Zealand - Tapanui<br />TE: New Zealand - TeAnau<br />TH: New Zealand - Taihape<br />TP: New Zealand - Te Puke<br />U: New Zealand - Taumaruniu<br />V: New Zealand - Dannevirke<br />W: New Zealand - Wellington<br />WH: New Zealand - Whakatu<br />WI: New Zealand - Whakatu Industrial Park<br />WR: New Zealand - Wairoa<br />WT: New Zealand - Winton<br />WU: New Zealand - Waikuku<br />X: New Zealand - Wanganui<br />Y: New Zealand - Whangarei<br />YP: New Zealand - Waipukurau<br />Z: New Zealand - Taupo"
      },
      "CentreCodeTaiwan": {
        "enum": [
          "KE"
        ],
        "type": "string",
        "description": "This is Centres for Taiwan. A centre is a town where any activity connected with the wool industry takes place. The codes used in transmissions are those defined in the Australian Wool Selling Regulation.<br />KE: Keelung - Taiwan"
      },
      "SoftwareIdentifier": {
        "type": "object",
        "properties": {
          "softwareCompany": {
            "$ref": "#/components/schemas/SoftwareCompany"
          },
          "softwareVersion": {
            "maximum": 9999,
            "minimum": -9999,
            "type": "integer",
            "description": "Version no. e.g. 2400",
            "format": "int32",
            "nullable": true
          },
          "programName": {
            "maxLength": 4,
            "minLength": 1,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SoftwareCompany": {
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8
        ],
        "type": "integer",
        "description": "1: Talman<br />2: Symbotic<br />3: Jumbuck/Datacon<br />4: Jemalong<br />5: NA - no value<br />6: Modiano<br />7: AWH<br />6: AWTA",
        "format": "int32"
      },
      "TransferConfig": {
        "required": [
          "transferType"
        ],
        "type": "object",
        "properties": {
          "transferType": {
            "$ref": "#/components/schemas/TransferType"
          },
          "finalReceiverList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Organisation"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Used to identify document transfer type: Restrict, Unrestrict, and Exclude.\r\n\r\nOnly used for data retrieval. Do not include it in the response."
      },
      "TransferType": {
        "enum": [
          "Unrestrict",
          "Restrict",
          "Exclude"
        ],
        "type": "string",
        "description": "Unrestrict: Send document to all members<br />Restrict: Send document to appointed members<br />Exclude: Send to all members excluding the appointed members"
      },
      "PrintPreSaleCertificatePostSale": {
        "required": [
          "buyingOrganisation",
          "centreStorage",
          "certificateDeliveryIndicator",
          "certificateIdentity",
          "gross",
          "lotIdentity",
          "numberOfBales",
          "saleIdentity",
          "saleOutcome",
          "weightNote"
        ],
        "type": "object",
        "properties": {
          "certificateIdentity": {
            "$ref": "#/components/schemas/CertificateIdentity"
          },
          "weightNote": {
            "$ref": "#/components/schemas/WeightNote"
          },
          "lotIdentity": {
            "$ref": "#/components/schemas/LotIdentity"
          },
          "buyingOrganisation": {
            "$ref": "#/components/schemas/Organisation"
          },
          "saleOutcome": {
            "$ref": "#/components/schemas/SaleOutcome"
          },
          "numberOfBales": {
            "$ref": "#/components/schemas/NumberOfBales"
          },
          "gross": {
            "$ref": "#/components/schemas/Weight"
          },
          "saleIdentity": {
            "$ref": "#/components/schemas/SaleIdentity"
          },
          "centreStorage": {
            "$ref": "#/components/schemas/Centre"
          },
          "certificateDeliveryIndicator": {
            "$ref": "#/components/schemas/CertificateDeliveryIndicator"
          },
          "costPerWeightUnit": {
            "maximum": 999999,
            "minimum": -999999,
            "type": "integer",
            "description": "The selling price per weight unit. Generally, cost per weight unit will be in Australian cents per kilogram.",
            "format": "int32",
            "nullable": true
          },
          "printFlag": {
            "$ref": "#/components/schemas/PrintFlag"
          },
          "isPrintingPrintTEAM3Hauteur": {
            "maxLength": 5,
            "minLength": 4,
            "type": "boolean",
            "description": "A boolean value to indicate whether to print Team3-Hauteur.\r\n\r\ntrue: print.\r\n\r\nfalse: not print.",
            "nullable": true
          },
          "woolinkSaleSystem": {
            "$ref": "#/components/schemas/WoolinkSaleSystem"
          },
          "saleType": {
            "$ref": "#/components/schemas/SaleType"
          }
        },
        "additionalProperties": false
      },
      "CertificateIdentity": {
        "required": [
          "certificateIdCd",
          "certificateIdNumber",
          "certificateIdPrefix",
          "certificateIdSuffix"
        ],
        "type": "object",
        "properties": {
          "certificateIdPrefix": {
            "$ref": "#/components/schemas/CertificateIdPrefix"
          },
          "certificateIdNumber": {
            "maxLength": 8,
            "minLength": 1,
            "type": "integer",
            "format": "int32"
          },
          "certificateIdSuffix": {
            "$ref": "#/components/schemas/CertificateIdSuffix"
          },
          "certificateIdCd": {
            "maxLength": 1,
            "minLength": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "The certificate identity consists of a 1 digit prefix, followed by an 8 digit certificate number, followed by a 1 character suffix, followed by a 1 digit\r\ncheck number.It is printed at the top of the certificate."
      },
      "CertificateIdPrefix": {
        "enum": [
          2,
          3,
          6
        ],
        "type": "integer",
        "description": "2: Sydney Laboratory<br />3: Melbourne Laboratory<br />6: Fremantle Laboratory",
        "format": "int32"
      },
      "CertificateIdSuffix": {
        "enum": [
          "B",
          "C",
          "D",
          "F",
          "I",
          "J",
          "L",
          "M",
          "N",
          "Q",
          "P",
          "R",
          "W",
          "Y"
        ],
        "type": "string",
        "description": "B: Bulk Class<br />C: Colour<br />D: PTC (Pre-Sale Test Certificate – Other Grower Lot)<br />F: Premium Test<br />I: Subjectively Appraised Interlot<br />J: Combination - Yield & Micron, Length & Strength, Colour<br />L: Length & Strength<br />M: Objectively Matched Lot<br />N: Objectively matched Interlot<br />Q: Bulk Class – Quality Managed<br />P: PTC (Pre-sale Test Certificate - Classed Grower Lot)<br />R: Guidance Report<br />W: Scoured Wool<br />Y: Post sale Core Test"
      },
      "WeightNote": {
        "required": [
          "prefix",
          "suffix"
        ],
        "type": "object",
        "properties": {
          "prefix": {
            "maxLength": 1,
            "minLength": 1,
            "type": "string"
          },
          "suffix": {
            "maximum": 9999999,
            "minimum": -9999999,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "The first character contains the Weight Note prefix, and the next seven characters contain the weight Note Suffix."
      },
      "LotIdentity": {
        "maxLength": 6,
        "minLength": 0,
        "type": "string",
        "description": "This is a compound name for lot number and lot suffix, where the lot \r\nnumber is 5 numeric characters and the lot suffix is 1 alphanumeric\r\ncharacter.The suffix is used when a lot is broken up by the original lot\r\nnumber is retained; for example.If 2 bales of a 10-bale lot got wet and\r\nthe 8 bales and the 2 bales are offered separately, one could have a\r\nsuffix A and the other a suffix B.Where a suffix is not used, the lot\r\nnumber occupies the whole of the Lot Identity field and is right justified.\r\n            \r\nFrom:\r\n            \r\nThe current value that the Lot Identity is to be changed from.\r\n\r\nTo:\r\n\r\nThe new value that the Lot Identity is to be changed to."
      },
      "SaleOutcome": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          6,
          7
        ],
        "type": "integer",
        "description": "0: Sold<br />1: Passed In<br />2: Lot withdrawn from sale<br />3: No bid<br />4: Transfer<br />6: Bid or Offer Price<br />7: Withdrawn – Sold Prior",
        "format": "int32"
      },
      "NumberOfBales": {
        "maximum": 9999,
        "minimum": -9999,
        "type": "integer",
        "description": "Number of bales",
        "format": "int32"
      },
      "Weight": {
        "required": [
          "value",
          "weightCode"
        ],
        "type": "object",
        "properties": {
          "value": {
            "maximum": 999999.99,
            "minimum": -999999.99,
            "type": "number",
            "format": "double",
            "multipleOf": 0.01
          },
          "weightCode": {
            "$ref": "#/components/schemas/WeightCode"
          }
        },
        "additionalProperties": false
      },
      "WeightCode": {
        "enum": [
          "KG",
          "LB",
          "G"
        ],
        "type": "string",
        "description": "KG: Kilograms<br />LB: Pounds<br />G: Grams"
      },
      "SaleIdentity": {
        "required": [
          "saleNumber",
          "sellingCentreType"
        ],
        "type": "object",
        "properties": {
          "sellingCentreType": {
            "maxLength": 2,
            "minLength": 1,
            "type": "string",
            "description": "The following codes are reserved for current and historical open cry auction selling centres:\r\n            \r\nSellingCentre/Type (New Zealand):\r\n            \r\nC: Christchurch; \r\n\r\nN: Napier.\r\n\r\n            \r\nSellingCentre/Type (Australia):\r\n            \r\nA: Adelaide; \r\n\r\nAU: Australia; \r\n\r\nB: Brisbane; \r\n\r\nF: Fremantle; \r\n\r\nG: Geelong; \r\n\r\nL: Launceston; \r\n\r\nM: Melbourne; \r\n\r\nN: Newcastle; \r\n\r\nR: Goulburn; \r\n\r\nS: Sydney.\r\n\r\n\r\nThe following codes are allocated for alternative sale types:\r\n            \r\nPS: Private Sales; \r\n\r\nT: Auctions Plus Sales.\r\n            \r\n\r\nPlease contact the WIEDPUG Secretary for the latest list of reserved and allocated codes."
          },
          "saleNumber": {
            "maximum": 99,
            "minimum": -99,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "A group field of SellingCentre/Type and Sale Number\r\n            \r\nFrom: The current value that the Sale Identity is to be changed from.\r\n            \r\nTo: The new value that the Sale Identity is to be changed to."
      },
      "CertificateDeliveryIndicator": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "description": "A code to tell the Test House to whom the post-sale printed certificate is to be delivered.<br />0: Deliver to Broker/Buyer Address<br />1: Deliver to Clearing House",
        "format": "int32"
      },
      "PrintFlag": {
        "enum": [
          "Normal",
          "A",
          "S",
          "C",
          "E",
          "M",
          "N"
        ],
        "type": "string",
        "description": "This field provides options to produce certificates for combinations, omls and/or associated sublots<br />P: Normal RPP/TCR request to pdf Certificate<br />A: Pdf Combination/OML Certificate and associated sub-lots<br />S: Pdf associated sub-lots excluding the Combination/OML Certificate<br />C: Pdf Combination Certificate in Chinese and English<br />E: Pdf Combination Certificate in Chinese and English & associated sublots in English)<br />M: Pdf Combination Certificate in English & Mulesing Status report<br />N: Pdf Mulesing Status report only"
      },
      "WoolinkSaleSystem": {
        "enum": [
          "A",
          "H",
          "O",
          "W",
          "S",
          "T",
          "E"
        ],
        "type": "string",
        "description": "A: Auction<br />H: Holding<br />O: Offer board<br />W: Wool International<br />S: Spot Sale<br />T: Tender<br />E:Electronic Auction"
      },
      "SaleType": {
        "enum": [
          "A",
          "T",
          "O",
          "AV",
          "E"
        ],
        "type": "string",
        "description": "A: Auction (open cry)<br />T: Tender<br />O: Offer<br />AV: Availability<br />E: Electronic Sale"
      },
      "ApiResult": {
        "type": "object",
        "properties": {
          "apiMessages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiMessage"
            },
            "description": "Contains information about the response if applicable.",
            "nullable": true
          },
          "data": {
            "description": "Contains response data. e.g. Auction Catalogue",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A standard API response object used for all successful API responses"
      },
      "ApiMessage": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "warningCode": {
            "$ref": "#/components/schemas/WarningCode"
          },
          "informationCode": {
            "$ref": "#/components/schemas/InformationCode"
          }
        },
        "additionalProperties": false
      },
      "WarningCode": {
        "enum": [
          "11",
          "12",
          "13",
          "18",
          "19",
          "20",
          "24",
          "DRVnn"
        ],
        "type": "string",
        "description": "A code to indicate the different types of errors.<br />11: Weight Note suffix is not numeric or has been omitted.<br />12: Number of bales is invalid or has been omitted.<br />13: Sale identification has been omitted.<br />18: Invalid Gross weight.<br />19: Invalid Tare weight.<br />20: Invalid Centre/Client code on pre-sale test request.<br />24: Incorrect PCTR Hash total.<br />DRVnn: Dark and Medullated Fibre Risk error where nn is the field number in error."
      },
      "InformationCode": {
        "enum": [
          "OK"
        ],
        "type": "string",
        "description": "A code to indicate the information.\r\n\r\nFor AC, PC LI and GI transmissions, one record will be sent for each Wool Sale Header Lots received.\r\n\r\nOK - aaaaaDATA RECEIVED OK FOR aann/nn dd/mm/yy ooooo LOTS nnnn\r\n\r\nWhere aann/nn = sale number/season\r\n    \r\ndd/mm/yy = sale date\r\n    \r\nooooo = selling organisation\r\n    \r\nnnnnn = number of lots\r\n    \r\nReason - You have sent data to the network and it has been received with no communication or transmission errors.\r\n\r\nAction - None.\r\n\r\nOR\r\n\r\nFor all other types of transmissions, one record will be sent for each transmission file received.\r\n\r\nOK - ALL aaaaa DATA RECEIVED OK\r\n\r\nReason - You have sent data to the network and it has been received with no communication or transmission errors.\r\n\r\nAction - None."
      },
      "ApiErrorResult": {
        "required": [
          "status",
          "title"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "A URI reference [RFC3986] that identifies the problem type.\r\n\r\nThis specification encourages that, when dereferenced, it provide human-readable documentation for the problem type (e.g., using HTML [W3C.REC-html5-20141028]). \r\n            \r\nWhen this member is not present, its value is assumed to be \"about:blank\".\r\n\r\ne.g. For 400 Bad Request, the \"type\" value can be \"https://tools.ietf.org/html/rfc9110#section-15.5.1\"",
            "nullable": true
          },
          "title": {
            "minLength": 1,
            "type": "string",
            "description": "A short, human-readable summary of the problem type.\r\n\r\nIt SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization(e.g., using proactive content negotiation; see[RFC7231], Section 3.4).\r\n\r\ne.g. \"One or more validation errors occurred.\""
          },
          "status": {
            "type": "integer",
            "description": "The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.",
            "format": "int32"
          },
          "detail": {
            "type": "string",
            "description": "A human-readable explanation specific to this occurrence of the problem. e.g. 400, 403, or business relared problem etc.",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomError"
            },
            "description": "A collection of the erros",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A machine-readable format for specifying errors in HTTP API responses based on https://tools.ietf.org/html/rfc7807."
      },
      "CustomError": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            },
            "description": "Dictionary of errors in <PropertyName, ErrorDetails[]> format. e.g. errors: { \"name\": [\"Product name is required\"], \"category\": [\"Category name cannot be longer than 20 characters.\"]  }",
            "nullable": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "errorCode": {
            "$ref": "#/components/schemas/ErrorCode"
          }
        },
        "additionalProperties": false
      },
      "ErrorCode": {
        "enum": [
          "DOXCT",
          "INVTC",
          "INVFR",
          "INVAC",
          "INVCR",
          "INVDO",
          "INVSO",
          "INVEX"
        ],
        "type": "string",
        "description": "A code to indicate the different types of errors.<br />DOXCT: Document originator does not match current transmitter.<br />INVTC: Invalid transfer config. All data rejected.<br />INVFR: Invalid/missing FinalReceiverList record. All data rejected.<br />INVAC: Invalid sale aann/nn dd/mm/yy ooooo. All data rejected.<br />INVCR: Current receiver not awtm. All data rejected.<br />INVDO: Invalid document originator code aaaaa. Data accepted.<br />INVSO: Warning! Invalid selling org AAAAA using doc orig AAAAA.<br />INVEX: Invalid excluded record."
      },
      "RequestForData": {
        "required": [
          "requestForDataType",
          "transmissionHeader"
        ],
        "type": "object",
        "properties": {
          "transmissionHeader": {
            "$ref": "#/components/schemas/TransmissionHeader"
          },
          "requestForDataType": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UseNetworkDateTimeRequestForDataType"
              },
              {
                "$ref": "#/components/schemas/DateTimeRangeRequestForDataType"
              }
            ]
          }
        },
        "additionalProperties": false,
        "discriminator": {
          "propertyName": "requestForDataType",
          "mapping": {
            "UseNetworkDateTimeRequestForDataType": "#/components/schemas/UseNetworkDateTimeRequestForDataType",
            "DateTimeRangeRequestForDataType": "#/components/schemas/DateTimeRangeRequestForDataType"
          }
        }
      },
      "UseNetworkDateTimeRequestForDataType": {
        "required": [
          "isUsingNetworkDateTime"
        ],
        "type": "object",
        "properties": {
          "isUsingNetworkDateTime": {
            "maxLength": 5,
            "minLength": 4,
            "type": "boolean",
            "description": "A boolean value to indicate whether to use network datetime.\r\n\r\ntrue: use network datetime.\r\n\r\nfalse: not use."
          }
        },
        "additionalProperties": false
      },
      "DateTimeRangeRequestForDataType": {
        "required": [
          "startDateTimeStatusRequest"
        ],
        "type": "object",
        "properties": {
          "startDateTimeStatusRequest": {
            "$ref": "#/components/schemas/UtcDateTime"
          },
          "endDateTimeStatusRequest": {
            "$ref": "#/components/schemas/UtcDateTime"
          }
        },
        "additionalProperties": false
      },
      "UtcDateTime": {
        "type": "string",
        "description": "Date and Time value in ISO 8601 standard UTC datetime format. e.g. 2024-03-21T19:25:04+00:00.000Z",
        "format": "((?:19|20)[0-9][0-9])-(0?[1-9]|1[012])-(0?[1-9]|[12][0-9]|3[01])T([01]\\d|2[0-3]):([0-5]\\d):([0-5]\\d)Z$",
        "example": "2024-03-21T19:25:04+00:00.000Z"
      },
      "RequestPostsalePrintingOfPresaleCertificatesListApiResult": {
        "type": "object",
        "properties": {
          "apiMessages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiMessage"
            },
            "description": "Contains information about the response if applicable.",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RequestPostsalePrintingOfPresaleCertificates"
            },
            "description": "Contains response data. e.g. Auction Catalogue",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A standard API response object used for all successful API responses"
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Access Token that is added in the Authorization header of the HTTP request. Example: \"Authorization: Bearer {token}\". The JWT serves as a credential that proves the identity of the client to the server.",
        "name": "Authorization",
        "in": "header"
      },
      "oauth2": {
        "type": "oauth2",
        "description": "Authentication for client applications by providing Client ID and Client Secret for an JWT Access Token.",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "/auth-server/oauth/token",
            "scopes": {}
          }
        }
      }
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ]
}
