{
    "openapi": "3.0.1",
    "info": {
        "title": "WIEDPUG API",
        "description": "API Documentation for the WIEDPUG Network",
        "termsOfService": "https://wiedpug.github.io/wiedpug",
        "contact": {
            "name": "WIEDPUG Team",
            "url": "https://wiedpug.github.io/wiedpug",
            "email": "changethis@email.com"
        },
        "license": {
            "name": "Applicable License",
            "url": "https://wiedpug.github.io/wiedpug"
        },
        "version": "v0.0"
    },
    "paths": {
        "/v0/test-resquests-verification": {
            "post": {
                "tags": [
                    "Test Requests Verification"
                ],
                "summary": "Test Request Verification",
                "description": "Sent by an organisation that has already requested a test by paper to the Test House, as a verification of the paper request",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TestRequestsVerification"
                            },
                            "example": {
                                "transmissionHeader": {
                                    "dateFormatLastRevised": "2020-07-15",
                                    "dateTransmissionFileCreated": "2016-01-17",
                                    "countryOfOrigin": "AU",
                                    "documentOriginator": {
                                        "organisationId": "AWTA"
                                    },
                                    "versionNumber": 31,
                                    "softwareIdentifier": {
                                        "softwareCompany": 8,
                                        "version": 1082,
                                        "programName": "NETR"
                                    },
                                    "abn": "72001967184"
                                },
                                "testRequestsVerificationDetails": [
                                    {
                                        "testDataHeader": {
                                            "client": {
                                                "organisationId": "AWTA"
                                            },
                                            "lotIdentity": "567545",
                                            "weightNote": "12345678",
                                            "bales": 1,
                                            "gross": 1,
                                            "tare": 1,
                                            "weightUnit": 0,
                                            "lotType": 3,
                                            "centreAuction": "AU_A",
                                            "sourceCode": 1,
                                            "isCompanyABNApplicable": false
                                        },
                                        "testRequestVerification": {
                                            "laboratory": 1,
                                            "growerCode": "G123",
                                            "growerName": "John Doe",
                                            "coreSampleWeight": 20,
                                            "coreTestSamplingDate": "2024-04-15",
                                            "coresPerBale": 5,
                                            "grabsPerBale": 10,
                                            "updatePreviousData": true,
                                            "hashTotal": 123456,
                                            "isYieldAndMicronTestRequired": true,
                                            "isLengthAndStrengthTestRequired": false,
                                            "isLengthOnlyTestRequired": true,
                                            "isColourTestRequired": false,
                                            "isLaserscanTestRequired": true,
                                            "isAirflowTestRequired": false,
                                            "isOFDATestRequired": true,
                                            "isDarkAndMedullatedFibreTestRequired": false,
                                            "isPesticideResidueTestRequired": false
                                        },
                                        "contractLimitRequirements": {
                                            "micronMin": 15.5,
                                            "micronMax": 25,
                                            "colourYZMin": 1.2,
                                            "colourYZMax": 2.1,
                                            "vmbMin": 0.85,
                                            "vmbMax": 1.25,
                                            "woolBaseMin": 50,
                                            "woolBaseMax": 65,
                                            "dichloromethaneDryBasisMin": 0.05,
                                            "dichloromethaneDryBasisMax": 0.15,
                                            "conditioningMassMin": 500,
                                            "conditioningMassMax": 1500,
                                            "lacBarbeMin": 10,
                                            "lacBarbeMax": 30,
                                            "lacHauteurMin": 15,
                                            "lacHauteurMax": 45,
                                            "lacHauteurUnder20Min": 5,
                                            "lacHauteurUnder20Max": 15,
                                            "lacHauteurUnder40Min": 8,
                                            "lacHauteurUnder40Max": 25,
                                            "lacHauteurCVPercentMin": 10,
                                            "lacHauteurCVPercentMax": 20
                                        },
                                        "darkAndMedullatedFibreRiskDetails": {
                                            "declaredBreed": "A",
                                            "declaredWoolSubCategory": "N",
                                            "declaredWoolCategory": "P",
                                            "contactWithExoticBreeds": true,
                                            "crutched": false,
                                            "crutchedWithin3MonthsOfShearing": true,
                                            "sex": "R",
                                            "ageFrom": 2,
                                            "ageTo": 5
                                        }
                                    },
                                    {
                                        "testDataHeader": {
                                            "client": {
                                                "organisationId": "AWTA"
                                            },
                                            "lotIdentity": "567545",
                                            "weightNote": "12345678",
                                            "bales": 1,
                                            "gross": 1,
                                            "tare": 1,
                                            "weightUnit": 0,
                                            "lotType": 3,
                                            "centreAuction": "AU_BA",
                                            "sourceCode": 2,
                                            "isCompanyABNApplicable": false
                                        },
                                        "testRequestVerification": {
                                            "laboratory": 1,
                                            "growerCode": "G4643",
                                            "growerName": "Alice Stonewood",
                                            "coreSampleWeight": 164,
                                            "coreTestSamplingDate": "2024-04-25",
                                            "coresPerBale": 4,
                                            "grabsPerBale": 20,
                                            "updatePreviousData": true,
                                            "hashTotal": 125534,
                                            "isYieldAndMicronTestRequired": true,
                                            "isLengthAndStrengthTestRequired": false,
                                            "isLengthOnlyTestRequired": false,
                                            "isColourTestRequired": false,
                                            "isLaserscanTestRequired": false,
                                            "isAirflowTestRequired": false,
                                            "isOFDATestRequired": false,
                                            "isDarkAndMedullatedFibreTestRequired": true,
                                            "isPesticideResidueTestRequired": true
                                        },
                                        "contractLimitRequirements": {
                                            "micronMin": 12.3,
                                            "micronMax": 18.6,
                                            "colourYZMin": 1.6,
                                            "colourYZMax": 2.5,
                                            "vmbMin": 0.66,
                                            "vmbMax": 1.8,
                                            "woolBaseMin": 40,
                                            "woolBaseMax": 55,
                                            "dichloromethaneDryBasisMin": 0.06,
                                            "dichloromethaneDryBasisMax": 0.12,
                                            "conditioningMassMin": 260,
                                            "conditioningMassMax": 1200,
                                            "lacBarbeMin": 17,
                                            "lacBarbeMax": 56,
                                            "lacHauteurMin": 12,
                                            "lacHauteurMax": 36,
                                            "lacHauteurUnder20Min": 3,
                                            "lacHauteurUnder20Max": 12,
                                            "lacHauteurUnder40Min": 9,
                                            "lacHauteurUnder40Max": 15,
                                            "lacHauteurCVPercentMin": 13,
                                            "lacHauteurCVPercentMax": 27
                                        },
                                        "darkAndMedullatedFibreRiskDetails": {
                                            "declaredBreed": "A",
                                            "declaredWoolSubCategory": "N",
                                            "declaredWoolCategory": "B",
                                            "contactWithExoticBreeds": false,
                                            "crutched": false,
                                            "crutchedWithin3MonthsOfShearing": true,
                                            "sex": "E",
                                            "ageFrom": 1,
                                            "ageTo": 4
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResult"
                                },
                                "example": {
                                    "isSuccessful": true
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomProblemDetails"
                                },
                                "example": {
                                    "type": "https://datatracker.ietf.org/doc/html/rfc9110#section-15.5.1",
                                    "title": "One or more validation errors occurred",
                                    "status": 400,
                                    "detail": "",
                                    "errors": {
                                        "TransmissionHeader.DateFormatLastRevised": [
                                            "The field DateFormatLastRevised is required",
                                            "The field DateFormatLastRevised must match regulart expression pattern..."
                                        ],
                                        "TransmissionHeader.CountryOfOrigin": [
                                            "The field CountryOfOrigin is required"
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomProblemDetails"
                                },
                                "example": {
                                    "type": "https://datatracker.ietf.org/doc/html/rfc9110#section-15.5.2",
                                    "title": "Unauthorized",
                                    "status": 401,
                                    "detail": "Missing authentication credentials"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomProblemDetails"
                                },
                                "example": {
                                    "type": "https://datatracker.ietf.org/doc/html/rfc9110#section-15.5.4",
                                    "title": "You don't have permission to access this resource",
                                    "status": 403,
                                    "detail": "You don't have a 'read' access to access this resource"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomProblemDetails"
                                },
                                "example": {
                                    "type": "https://datatracker.ietf.org/doc/html/rfc9110#name-500-internal-server-error",
                                    "title": "An error occurred while processing your required",
                                    "status": 500,
                                    "detail": "Error details.."
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "ApiResult": {
                "required": [
                    "isSuccessful"
                ],
                "type": "object",
                "properties": {
                    "isSuccessful": {
                        "type": "boolean",
                        "description": "Indicator if the request has been successfully processed."
                    },
                    "message": {
                        "type": "string",
                        "description": "Contains information about the response if applicable.",
                        "nullable": true
                    },
                    "data": {
                        "description": "Contains response data. e.g. Auction Catalogue",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "A standard API response object used for all successful API responses"
            },
            "Bale": {
                "required": [
                    "baleHeader"
                ],
                "type": "object",
                "properties": {
                    "baleHeader": {
                        "$ref": "#/components/schemas/BaleHeader"
                    },
                    "baleDetails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BaleDetail"
                        },
                        "nullable": true
                    },
                    "propertyIdentificationCodes": {
                        "maxLength": 8,
                        "minLength": 0,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Property Identification Code - the property code to identify the source of the wool.\r\nThis field is not used in New Zealand transmission.\r\nFor TRV only",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "BaleDetail": {
                "required": [
                    "baleDetailType",
                    "baleNumber",
                    "gross",
                    "tare"
                ],
                "type": "object",
                "properties": {
                    "baleNumber": {
                        "maxLength": 5,
                        "minLength": 0,
                        "type": "string"
                    },
                    "baleDetailType": {
                        "$ref": "#/components/schemas/BaleDetailType"
                    },
                    "showBaleIndicator": {
                        "maxLength": 1,
                        "minLength": 0,
                        "type": "string",
                        "description": "Property for Greasy/Processed bale detail, not necessary for other types of bale details.",
                        "nullable": true
                    },
                    "baleRenumber": {
                        "maxLength": 5,
                        "minLength": 0,
                        "type": "string",
                        "description": "Property for Renumber BaleDetail, not necessary for other types of bale details.",
                        "nullable": true
                    },
                    "unitNumber": {
                        "pattern": "-?\\d{1,5}",
                        "type": "integer",
                        "description": "Property for Tripacks BaleDetail, not necessary for other types of bale details.",
                        "format": "int32",
                        "nullable": true
                    },
                    "gross": {
                        "pattern": "-?\\d{1,4}",
                        "type": "integer",
                        "format": "int32"
                    },
                    "tare": {
                        "pattern": "-?\\d{1,2}",
                        "type": "integer",
                        "format": "int32"
                    },
                    "baleIdentifications": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BaleIdentification"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "BaleDetailType": {
                "enum": [
                    "Renumbers",
                    "GreasyOrProcessed",
                    "Tripacks"
                ],
                "type": "string",
                "description": "Renumbers: Bale Details - Renumbers<br />GreasyOrProcessed: Bale Details - GreasyOrProcessed<br />Tripacks: Bale Details - Tripacks"
            },
            "BaleHeader": {
                "required": [
                    "areaOfOrigin",
                    "baleDescription",
                    "brand"
                ],
                "type": "object",
                "properties": {
                    "brand": {
                        "maxLength": 30,
                        "minLength": 0,
                        "type": "string"
                    },
                    "baleDescription": {
                        "maxLength": 15,
                        "minLength": 0,
                        "type": "string"
                    },
                    "areaOfOrigin": {
                        "maxLength": 4,
                        "minLength": 0,
                        "type": "string"
                    },
                    "bales": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "locationWithinStore": {
                        "maxLength": 20,
                        "minLength": 0,
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "BaleIdentification": {
                "type": "object",
                "properties": {
                    "baleNumber": {
                        "maxLength": 5,
                        "minLength": 0,
                        "type": "string",
                        "nullable": true
                    },
                    "eBaleId": {
                        "maxLength": 30,
                        "minLength": 0,
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Centre": {
                "enum": [
                    "AU_A",
                    "AU_AD",
                    "AU_AR",
                    "AU_AU",
                    "AU_B",
                    "AU_BA",
                    "AU_BK",
                    "AU_BL",
                    "AU_BM",
                    "AU_BO",
                    "AU_BR",
                    "AU_BT",
                    "AU_C",
                    "AU_CA",
                    "AU_CB",
                    "AU_CC",
                    "AU_CL",
                    "AU_CN",
                    "AU_CO",
                    "AU_CR",
                    "AU_CU",
                    "AU_CW",
                    "AU_D",
                    "AU_DE",
                    "AU_DO",
                    "AU_DR",
                    "AU_E",
                    "AU_ER",
                    "AU_ES",
                    "AU_F",
                    "AU_G",
                    "AU_GF",
                    "AU_GI",
                    "AU_GN",
                    "AU_GR",
                    "AU_GU",
                    "AU_H",
                    "AU_HA",
                    "AU_HB",
                    "AU_HM",
                    "AU_HO",
                    "AU_HY",
                    "AU_I",
                    "AU_J",
                    "AU_JA",
                    "AU_K",
                    "AU_KE",
                    "AU_KH",
                    "AU_KI",
                    "AU_KN",
                    "AU_KT",
                    "AU_KW",
                    "AU_KY",
                    "AU_L",
                    "AU_LC",
                    "AU_M",
                    "AU_MA",
                    "AU_MB",
                    "AU_MC",
                    "AU_ME",
                    "AU_MG",
                    "AU_MI",
                    "AU_MO",
                    "AU_MR",
                    "AU_MU",
                    "AU_N",
                    "AU_NA",
                    "AU_ND",
                    "AU_NO",
                    "AU_NR",
                    "AU_OB",
                    "AU_OR",
                    "AU_P",
                    "AU_PA",
                    "AU_PL",
                    "AU_Q",
                    "AU_QU",
                    "AU_R",
                    "AU_S",
                    "AU_SG",
                    "AU_SH",
                    "AU_SK",
                    "AU_SW",
                    "AU_SY",
                    "AU_T",
                    "AU_TE",
                    "AU_U",
                    "AU_UR",
                    "AU_V",
                    "AU_W",
                    "AU_WA",
                    "AU_WG",
                    "AU_WL",
                    "AU_WN",
                    "AU_WR",
                    "AU_WW",
                    "AU_X",
                    "AU_Y",
                    "AU_YA",
                    "AU_YM",
                    "AU_YO",
                    "AU_Z",
                    "OS_ZA",
                    "OS_ZB",
                    "OS_ZC",
                    "OS_ZD",
                    "OS_ZE",
                    "OS_ZF",
                    "OS_ZG",
                    "OS_ZH",
                    "OS_ZI",
                    "OS_ZJ",
                    "OS_ZK",
                    "OS_ZL",
                    "OS_ZM",
                    "OS_ZN",
                    "OS_ZO",
                    "OS_ZP",
                    "OS_ZQ",
                    "OS_ZR",
                    "OS_ZS",
                    "OS_ZT",
                    "OS_ZU",
                    "OS_ZV",
                    "OS_ZW",
                    "OS_ZX",
                    "OS_ZY",
                    "OS_ZZ",
                    "NZ_A",
                    "NZ_AW",
                    "NZ_B",
                    "NZ_BL",
                    "NZ_BT",
                    "NZ_C",
                    "NZ_CV",
                    "NZ_D",
                    "NZ_F",
                    "NZ_FA",
                    "NZ_G",
                    "NZ_GD",
                    "NZ_GO",
                    "NZ_HA",
                    "NZ_HS",
                    "NZ_I",
                    "NZ_J",
                    "NZ_K",
                    "NZ_KA",
                    "NZ_KP",
                    "NZ_L",
                    "NZ_LO",
                    "NZ_LU",
                    "NZ_M",
                    "NZ_MA",
                    "NZ_MK",
                    "NZ_MT",
                    "NZ_MU",
                    "NZ_N",
                    "NZ_NE",
                    "NZ_O",
                    "NZ_OH",
                    "NZ_OI",
                    "NZ_OM",
                    "NZ_OT",
                    "NZ_P",
                    "NZ_PT",
                    "NZ_PU",
                    "NZ_R",
                    "NZ_RG",
                    "NZ_RI",
                    "NZ_S",
                    "NZ_SA",
                    "NZ_SH",
                    "NZ_SY",
                    "NZ_T",
                    "NZ_TA",
                    "NZ_TE",
                    "NZ_TH",
                    "NZ_TP",
                    "NZ_U",
                    "NZ_V",
                    "NZ_W",
                    "NZ_WH",
                    "NZ_WI",
                    "NZ_WR",
                    "NZ_WT",
                    "NZ_WU",
                    "NZ_X",
                    "NZ_Y",
                    "NZ_YP",
                    "NZ_Z"
                ],
                "type": "string",
                "description": ""
            },
            "ContractLimitRequirements": {
                "type": "object",
                "properties": {
                    "micronMin": {
                        "pattern": "^-?\\d{1,2}\\.\\d{1}$",
                        "type": "number",
                        "description": "Minimum micron, optional decimal with one digit precision.",
                        "format": "double",
                        "nullable": true
                    },
                    "micronMax": {
                        "pattern": "^-?\\d{1,2}\\.\\d{1}$",
                        "type": "number",
                        "description": "Maximum micron, optional decimal with one digit precision.",
                        "format": "double",
                        "nullable": true
                    },
                    "colourYZMin": {
                        "pattern": "^-?\\d{1,3}\\.\\d{1}$",
                        "type": "number",
                        "description": "Minimum colour Y-Z, optional decimal with one digit precision.",
                        "format": "double",
                        "nullable": true
                    },
                    "colourYZMax": {
                        "pattern": "^-?\\d{1,3}\\.\\d{1}$",
                        "type": "number",
                        "description": "Maximum colour Y-Z, optional decimal with one digit precision.",
                        "format": "double",
                        "nullable": true
                    },
                    "vmbMin": {
                        "pattern": "^-?\\d{1,2}\\.\\d{2}$",
                        "type": "number",
                        "description": "Minimum VMB, optional decimal with two digits precision.",
                        "format": "double",
                        "nullable": true
                    },
                    "vmbMax": {
                        "pattern": "^-?\\d{1,2}\\.\\d{2}$",
                        "type": "number",
                        "description": "Maximum VMB, optional decimal with two digits precision.",
                        "format": "double",
                        "nullable": true
                    },
                    "woolBaseMin": {
                        "pattern": "^-?\\d{1,2}\\.\\d{2}$",
                        "type": "number",
                        "description": "Minimum wool base, optional decimal with two digits precision.",
                        "format": "double",
                        "nullable": true
                    },
                    "woolBaseMax": {
                        "pattern": "^-?\\d{1,2}\\.\\d{2}$",
                        "type": "number",
                        "description": "Maximum wool base, optional decimal with two digits precision.",
                        "format": "double",
                        "nullable": true
                    },
                    "dichloromethaneDryBasisMin": {
                        "pattern": "^-?\\d{1,2}\\.\\d{2}$",
                        "type": "number",
                        "description": "Minimum dichloromethane on a dry basis, optional decimal with two digits precision.",
                        "format": "double",
                        "nullable": true
                    },
                    "dichloromethaneDryBasisMax": {
                        "pattern": "^-?\\d{1,2}\\.\\d{2}$",
                        "type": "number",
                        "description": "Maximum dichloromethane on a dry basis, optional decimal with two digits precision.",
                        "format": "double",
                        "nullable": true
                    },
                    "conditioningMassMin": {
                        "pattern": "-?\\d{1,5}",
                        "type": "integer",
                        "description": "Minimum conditioning mass, optional numeric field.",
                        "format": "int32",
                        "nullable": true
                    },
                    "conditioningMassMax": {
                        "pattern": "-?\\d{1,5}",
                        "type": "integer",
                        "description": "Maximum conditioning mass, optional numeric field.",
                        "format": "int32",
                        "nullable": true
                    },
                    "lacBarbeMin": {
                        "pattern": "-?\\d{1,3}",
                        "type": "integer",
                        "description": "Minimum LAC Barbe, optional numeric field.",
                        "format": "int32",
                        "nullable": true
                    },
                    "lacBarbeMax": {
                        "pattern": "-?\\d{1,3}",
                        "type": "integer",
                        "description": "Maximum LAC Barbe, optional numeric field.",
                        "format": "int32",
                        "nullable": true
                    },
                    "lacHauteurMin": {
                        "pattern": "-?\\d{1,3}",
                        "type": "integer",
                        "description": "Minimum LAC Hauteur, optional numeric field.",
                        "format": "int32",
                        "nullable": true
                    },
                    "lacHauteurMax": {
                        "pattern": "-?\\d{1,3}",
                        "type": "integer",
                        "description": "Maximum LAC Hauteur, optional numeric field.",
                        "format": "int32",
                        "nullable": true
                    },
                    "lacHauteurUnder20Min": {
                        "pattern": "-?\\d{1,3}",
                        "type": "integer",
                        "description": "Minimum LAC Hauteur under 20, optional numeric field.",
                        "format": "int32",
                        "nullable": true
                    },
                    "lacHauteurUnder20Max": {
                        "pattern": "-?\\d{1,3}",
                        "type": "integer",
                        "description": "Maximum LAC Hauteur under 20, optional numeric field.",
                        "format": "int32",
                        "nullable": true
                    },
                    "lacHauteurUnder40Min": {
                        "pattern": "-?\\d{1,3}",
                        "type": "integer",
                        "description": "Minimum LAC Hauteur under 40, optional numeric field.",
                        "format": "int32",
                        "nullable": true
                    },
                    "lacHauteurUnder40Max": {
                        "pattern": "-?\\d{1,3}",
                        "type": "integer",
                        "description": "Maximum LAC Hauteur under 40, optional numeric field.",
                        "format": "int32",
                        "nullable": true
                    },
                    "lacHauteurCVPercentMin": {
                        "pattern": "-?\\d{1,3}",
                        "type": "integer",
                        "description": "Minimum LAC Hauteur CV(%), optional numeric field.",
                        "format": "int32",
                        "nullable": true
                    },
                    "lacHauteurCVPercentMax": {
                        "pattern": "-?\\d{1,3}",
                        "type": "integer",
                        "description": "Maximum LAC Hauteur CV(%), optional numeric field.",
                        "format": "int32",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "CountryCode": {
                "enum": [
                    "AU",
                    "NZ",
                    "FR",
                    "ZA"
                ],
                "type": "string",
                "description": "A code for the country in which the transmission was created. Country Code using ISO 3166-1 standard<br />AU: Australia<br />NZ: New Zealand<br />FR: France<br />ZA: South Africa"
            },
            "CustomProblemDetails": {
                "required": [
                    "status",
                    "title"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "A URI reference [RFC3986] that identifies the problem type.\r\nThis specification encourages that, when dereferenced, it provide human-readable documentation for the problem type (e.g., using HTML [W3C.REC-html5-20141028]). \r\nWhen this member is not present, its value is assumed to be \"about:blank\".      \r\ne.g. For 400 Bad Request, the \"type\" value can be \"https://tools.ietf.org/html/rfc9110#section-15.5.1\"",
                        "nullable": true
                    },
                    "title": {
                        "minLength": 1,
                        "type": "string",
                        "description": "A short, human-readable summary of the problem type. \r\nIt SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization(e.g., using proactive content negotiation; see[RFC7231], Section 3.4).\r\ne.g. \"One or more validation errors occurred.\""
                    },
                    "status": {
                        "type": "integer",
                        "description": "The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.",
                        "format": "int32"
                    },
                    "detail": {
                        "type": "string",
                        "description": "A human-readable explanation specific to this occurrence of the problem. e.g. 400, 403, etc.",
                        "nullable": true
                    },
                    "errors": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "nullable": true
                        },
                        "description": "Dictionary of errors in <PropertyName, ErrorDetails[]> format. e.g. errors: { \"name\": [\"Product name is required\"], \"category\": [\"Category name cannot be longer than 20 characters.\"]  }",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "A machine-readable format for specifying errors in HTTP API responses based on https://tools.ietf.org/html/rfc7807."
            },
            "DarkAndMedullatedFibreRiskBroker": {
                "enum": [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6
                ],
                "type": "integer",
                "description": "1: Risk Level 1 (lowest)<br />2: Risk Level 2<br />3: Risk Level 3<br />4: Risk Level 4<br />5: Risk Level 5<br />6: Risk Level 6",
                "format": "int32"
            },
            "DeclaredBreed": {
                "enum": [
                    "A",
                    "M",
                    "X",
                    "D",
                    "T",
                    "R"
                ],
                "type": "string",
                "description": "A: Australian Superfine<br />M: Merino<br />X: Crossbred<br />D: Downs<br />T: Carpet<br />R: Sheds Fibres"
            },
            "DeclaredQualifierCode": {
                "enum": [
                    "T",
                    "H",
                    "M",
                    "S",
                    "C",
                    "J",
                    "A",
                    "K",
                    "Q",
                    "E",
                    "N",
                    "R",
                    "G",
                    "D",
                    "V",
                    "P",
                    "Y",
                    "F",
                    "U"
                ],
                "type": "string",
                "description": "T: Qualifier not required<br />H: Unscourable colour<br />M: Scourable colour/creamy<br />S: Dark Stain<br />C: Cotts<br />J: Jowls<br />A: Dermatitis<br />K: Kemp / Medullated<br />Q: Dags<br />E: Necks (Not Scaled)<br />N: Water Stain<br />R: Brands<br />G: Doggy (Not Scaled)<br />D: Mud<br />V: Skin pieces<br />P: Shanks<br />Y: Black & Grey<br />F: Soft Cotts<br />U: Sweat/Frib"
            },
            "DeclaredQualifierScale": {
                "enum": [
                    0,
                    1,
                    2,
                    3
                ],
                "type": "integer",
                "description": "0: No scale/qualifier code is T<br />1: Light/Odd<br />2: Medium<br />3: Heavy/Line of…",
                "format": "int32"
            },
            "DeclaredWoolCategory": {
                "enum": [
                    "F",
                    "P",
                    "B",
                    "C",
                    "Z"
                ],
                "type": "string",
                "description": "F: Fleece<br />P: Pieces<br />B: Bellies<br />C: Crutchings<br />Z: Locks"
            },
            "DeclaredWoolSubCategory": {
                "enum": [
                    "W",
                    "L",
                    "U",
                    "K",
                    "G",
                    "O",
                    "N",
                    "T"
                ],
                "type": "string",
                "description": "W: Combing Weaners & Lambs<br />L: Carding Lambs<br />U: Plucked & Dead<br />K: Shorn from Skins<br />G: Fellmongered<br />O: Overgrown<br />N: Non-conforming lot<br />T: Not required"
            },
            "Laboratory": {
                "enum": [
                    1,
                    2,
                    3,
                    4
                ],
                "type": "integer",
                "description": "The code for a Test House.<br />1: Australian Wool Testing Authority<br />2: N.Z. Wool Testing Authority<br />3: N.Z. Wool Testing Service<br />4: South African Wool Testing Authority",
                "format": "int32"
            },
            "LotType": {
                "enum": [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9
                ],
                "type": "integer",
                "description": "A code used to describe wool lot preparation. It is not wool type. `*` wool meets clip preparation guidelines.`#` wool does not necessarily meet clip preparation guidelines<br />1: (Suffix - P) Classed Grower Lot *<br />2: (Suffix - M) Objectively Matched Lot<br />3: (Suffix - J) Combined Certificate<br />4: (Suffix - I) Subjectively Matched Interlot<br />5: (Suffix - B) Other Bulk Class Lot #<br />6: Not Used<br />7: (Suffix - N) Objectively Matched Interlot<br />8: (Suffix - Q) Classed Bulk Class Lot – Quality Managed *<br />9: (Suffix - D) Other Grower Lot #",
                "format": "int32"
            },
            "MulesingStatus": {
                "enum": [
                    "NM",
                    "LN",
                    "CM",
                    "AA",
                    "M",
                    "ND"
                ],
                "type": "string",
                "description": "NM: Non Mulesed<br />LN: Liquid Nitrogen<br />CM: Ceased Mulesing<br />AA: Mulesed with Analgesic &/or Anaesthetic<br />M: Mulesed<br />ND: Not Declared"
            },
            "Organisation": {
                "type": "object",
                "properties": {
                    "organisationCodeAndCentre": {
                        "$ref": "#/components/schemas/OrganisationCodeAndCentre"
                    },
                    "organisationId": {
                        "maxLength": 5,
                        "minLength": 0,
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "OrganisationCodeAndCentre": {
                "required": [
                    "centre",
                    "organisationCode"
                ],
                "type": "object",
                "properties": {
                    "organisationCode": {
                        "maxLength": 3,
                        "minLength": 0,
                        "type": "string"
                    },
                    "centre": {
                        "$ref": "#/components/schemas/Centre"
                    }
                },
                "additionalProperties": false
            },
            "SaleIdentity": {
                "type": "object",
                "properties": {
                    "sellingCentreType": {
                        "$ref": "#/components/schemas/SellingCentreType"
                    },
                    "saleNumber": {
                        "maxLength": 2,
                        "minLength": 0,
                        "pattern": "-?\\d{1,2}",
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "SellingCentreType": {
                "enum": [
                    "NZ_C",
                    "NZ_N",
                    "AU_A",
                    "AU_AU",
                    "AU_B",
                    "AU_F",
                    "AU_G",
                    "AU_L",
                    "AU_M",
                    "AU_N",
                    "AU_R",
                    "AU_S",
                    "PS",
                    "T"
                ],
                "type": "string",
                "description": "NZ_C: Christchurch<br />NZ_N: Napier<br />AU_A: Adelaide<br />AU_AU: Australia<br />AU_B: Brisbane<br />AU_F: Fremantle<br />AU_G: Geelong<br />AU_L: Launceston<br />AU_M: Melbourne<br />AU_N: Newcastle<br />AU_R: Goulburn<br />AU_S: Sydney<br />PS: Private Sales<br />T: Auctions Plus Sales"
            },
            "Sex": {
                "enum": [
                    "E",
                    "W",
                    "R",
                    "M"
                ],
                "type": "string",
                "description": "E: Ewes<br />W: Wethers<br />R: Rams<br />M: Mixed"
            },
            "SoftwareCompany": {
                "enum": [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8
                ],
                "type": "integer",
                "description": "1: Talman<br />2: Symbotic<br />3: Jumbuck/Datacon<br />4: Jemalong<br />5: NA - no value<br />6: Modiano<br />7: AWH<br />6: AWTA",
                "format": "int32"
            },
            "SoftwareIdentifier": {
                "type": "object",
                "properties": {
                    "softwareCompany": {
                        "$ref": "#/components/schemas/SoftwareCompany"
                    },
                    "version": {
                        "pattern": "-?\\d{1,4}",
                        "type": "integer",
                        "description": "Version no. e.g. 2400",
                        "format": "int32",
                        "nullable": true
                    },
                    "programName": {
                        "maxLength": 4,
                        "minLength": 0,
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "SourceCode": {
                "enum": [
                    1,
                    2,
                    3
                ],
                "type": "integer",
                "description": "Source of the lot presented for sale.<br />1: Grower<br />2: Dealer<br />3: BulkClass",
                "format": "int32"
            },
            "TestDataHeader": {
                "required": [
                    "bales",
                    "client",
                    "gross",
                    "lotIdentity",
                    "tare",
                    "weightNote",
                    "weightUnit"
                ],
                "type": "object",
                "properties": {
                    "client": {
                        "$ref": "#/components/schemas/Organisation"
                    },
                    "season": {
                        "maxLength": 2,
                        "minLength": 0,
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "saleIdentity": {
                        "$ref": "#/components/schemas/SaleIdentity"
                    },
                    "centreStorage": {
                        "$ref": "#/components/schemas/Centre"
                    },
                    "lotIdentity": {
                        "maxLength": 6,
                        "minLength": 0,
                        "type": "string"
                    },
                    "weightNote": {
                        "maxLength": 8,
                        "minLength": 0,
                        "type": "string"
                    },
                    "clientsCrossReference": {
                        "maxLength": 8,
                        "minLength": 0,
                        "type": "string",
                        "nullable": true
                    },
                    "bales": {
                        "pattern": "-?\\d{1,4}",
                        "type": "integer",
                        "format": "int32"
                    },
                    "gross": {
                        "pattern": "-?\\d{1,6}",
                        "type": "integer",
                        "format": "int32"
                    },
                    "tare": {
                        "pattern": "-?\\d{1,4}",
                        "type": "integer",
                        "format": "int32"
                    },
                    "weightUnit": {
                        "$ref": "#/components/schemas/WeightUnit"
                    },
                    "mulesingStatus": {
                        "$ref": "#/components/schemas/MulesingStatus"
                    },
                    "declaredGross": {
                        "maxLength": 6,
                        "minLength": 0,
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "declaredTare": {
                        "maxLength": 4,
                        "minLength": 0,
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "lotType": {
                        "$ref": "#/components/schemas/LotType"
                    },
                    "centreAuction": {
                        "$ref": "#/components/schemas/Centre"
                    },
                    "sourceCode": {
                        "$ref": "#/components/schemas/SourceCode"
                    },
                    "isCompanyABNApplicable": {
                        "maxLength": 5,
                        "minLength": 0,
                        "type": "boolean",
                        "description": "A Flag to determine if Compnay ABN apply to invoice",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "TestRequestVerification": {
                "required": [
                    "hashTotal",
                    "laboratory",
                    "updatePreviousData"
                ],
                "type": "object",
                "properties": {
                    "laboratory": {
                        "$ref": "#/components/schemas/Laboratory"
                    },
                    "growerCode": {
                        "maxLength": 8,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional alphanumeric field for grower code.",
                        "nullable": true
                    },
                    "growerName": {
                        "maxLength": 30,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional alphanumeric field for grower name.",
                        "nullable": true
                    },
                    "coreSampleWeight": {
                        "pattern": "-?\\d{1,2}",
                        "type": "integer",
                        "description": "Optional numeric field for core sample weight.",
                        "format": "int32",
                        "nullable": true
                    },
                    "coreTestSamplingDate": {
                        "maxLength": 10,
                        "minLength": 0,
                        "pattern": "/(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$/",
                        "type": "string",
                        "description": "Optional date field for core test sampling.",
                        "format": "date",
                        "nullable": true
                    },
                    "coresPerBale": {
                        "pattern": "-?\\d{1,2}",
                        "type": "integer",
                        "description": "Optional numeric field for cores per bale.",
                        "format": "int32",
                        "nullable": true
                    },
                    "grabsPerBale": {
                        "pattern": "-?\\d{1,2}",
                        "type": "integer",
                        "description": "Optional numeric field for grabs per bale.",
                        "format": "int32",
                        "nullable": true
                    },
                    "updatePreviousData": {
                        "maxLength": 5,
                        "minLength": 0,
                        "type": "boolean",
                        "description": "This field indicates whether data sent on a previous transmission is to be updated by data in the current transmission."
                    },
                    "hashTotal": {
                        "pattern": "-?\\d{1,8}",
                        "type": "integer",
                        "description": "Required numeric field for hash total.",
                        "format": "int32"
                    },
                    "isYieldAndMicronTestRequired": {
                        "maxLength": 5,
                        "minLength": 0,
                        "type": "boolean",
                        "nullable": true
                    },
                    "isLengthAndStrengthTestRequired": {
                        "maxLength": 5,
                        "minLength": 0,
                        "type": "boolean",
                        "nullable": true
                    },
                    "isLengthOnlyTestRequired": {
                        "maxLength": 5,
                        "minLength": 0,
                        "type": "boolean",
                        "nullable": true
                    },
                    "isColourTestRequired": {
                        "maxLength": 5,
                        "minLength": 0,
                        "type": "boolean",
                        "nullable": true
                    },
                    "isLaserscanTestRequired": {
                        "maxLength": 5,
                        "minLength": 0,
                        "type": "boolean",
                        "nullable": true
                    },
                    "isAirflowTestRequired": {
                        "maxLength": 5,
                        "minLength": 0,
                        "type": "boolean",
                        "nullable": true
                    },
                    "isOFDATestRequired": {
                        "maxLength": 5,
                        "minLength": 0,
                        "type": "boolean",
                        "nullable": true
                    },
                    "isDarkAndMedullatedFibreTestRequired": {
                        "maxLength": 5,
                        "minLength": 0,
                        "type": "boolean",
                        "nullable": true
                    },
                    "isPesticideResidueTestRequired": {
                        "maxLength": 5,
                        "minLength": 0,
                        "type": "boolean",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "TestRequestVerificationDarkAndMedullatedFibreRiskDetails": {
                "required": [
                    "ageFrom",
                    "contactWithExoticBreeds",
                    "crutched",
                    "declaredBreed",
                    "declaredWoolCategory",
                    "declaredWoolSubCategory",
                    "sex"
                ],
                "type": "object",
                "properties": {
                    "declaredBreed": {
                        "$ref": "#/components/schemas/DeclaredBreed"
                    },
                    "declaredWoolSubCategory": {
                        "$ref": "#/components/schemas/DeclaredWoolSubCategory"
                    },
                    "declaredWoolCategory": {
                        "$ref": "#/components/schemas/DeclaredWoolCategory"
                    },
                    "declaredQualifierCode1": {
                        "$ref": "#/components/schemas/DeclaredQualifierCode"
                    },
                    "declaredQualifierCode2": {
                        "$ref": "#/components/schemas/DeclaredQualifierCode"
                    },
                    "declaredQualifierCode3": {
                        "$ref": "#/components/schemas/DeclaredQualifierCode"
                    },
                    "declaredQualifierCode4": {
                        "$ref": "#/components/schemas/DeclaredQualifierCode"
                    },
                    "declaredQualifierCode5": {
                        "$ref": "#/components/schemas/DeclaredQualifierCode"
                    },
                    "declaredQualifierScale": {
                        "$ref": "#/components/schemas/DeclaredQualifierScale"
                    },
                    "contactWithExoticBreeds": {
                        "maxLength": 5,
                        "minLength": 0,
                        "type": "boolean",
                        "description": "Boolean type for contact with exotic breeds.\r\nTrue for contact with exotic breeds. False for not contact with exotic breeds."
                    },
                    "crutched": {
                        "maxLength": 5,
                        "minLength": 0,
                        "type": "boolean",
                        "description": "Boolean type for crutched status. \r\nTrue for crutched, False for not crutched."
                    },
                    "crutchedWithin3MonthsOfShearing": {
                        "maxLength": 5,
                        "minLength": 0,
                        "type": "boolean",
                        "description": "Boolean type for crutching within 3 months of shearing.",
                        "nullable": true
                    },
                    "sex": {
                        "$ref": "#/components/schemas/Sex"
                    },
                    "ageFrom": {
                        "pattern": "-?\\d{1,2}",
                        "type": "integer",
                        "description": "Required numeric field for minimum age.",
                        "format": "int32"
                    },
                    "ageTo": {
                        "pattern": "-?\\d{1,2}",
                        "type": "integer",
                        "description": "Optional numeric field for maximum age.",
                        "format": "int32",
                        "nullable": true
                    },
                    "darkAndMedullatedFibreRiskBroker": {
                        "$ref": "#/components/schemas/DarkAndMedullatedFibreRiskBroker"
                    }
                },
                "additionalProperties": false
            },
            "TestRequestsVerification": {
                "required": [
                    "transmissionHeader"
                ],
                "type": "object",
                "properties": {
                    "transmissionHeader": {
                        "$ref": "#/components/schemas/TransmissionHeader"
                    },
                    "testRequestsVerificationDetails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TestRequestsVerificationDetail"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "TestRequestsVerificationDetail": {
                "required": [
                    "testDataHeader",
                    "testRequestVerification"
                ],
                "type": "object",
                "properties": {
                    "testDataHeader": {
                        "$ref": "#/components/schemas/TestDataHeader"
                    },
                    "testRequestVerification": {
                        "$ref": "#/components/schemas/TestRequestVerification"
                    },
                    "contractLimitRequirements": {
                        "$ref": "#/components/schemas/ContractLimitRequirements"
                    },
                    "darkAndMedullatedFibreRiskDetails": {
                        "$ref": "#/components/schemas/TestRequestVerificationDarkAndMedullatedFibreRiskDetails"
                    },
                    "bales": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Bale"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "TransmissionHeader": {
                "required": [
                    "abn",
                    "countryOfOrigin",
                    "dateFormatLastRevised",
                    "dateTransmissionFileCreated",
                    "documentOriginator"
                ],
                "type": "object",
                "properties": {
                    "dateFormatLastRevised": {
                        "maxLength": 10,
                        "minLength": 0,
                        "pattern": "/(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$/",
                        "type": "string",
                        "description": "Date value in ISO standard UTC date format. e.g. 2024-03-21 (YYYY-MM-DD)",
                        "format": "date"
                    },
                    "dateTransmissionFileCreated": {
                        "maxLength": 10,
                        "minLength": 0,
                        "pattern": "/(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$/",
                        "type": "string",
                        "description": "Date value in ISO standard UTC date format. e.g. 2024-03-21 (YYYY-MM-DD)",
                        "format": "date"
                    },
                    "countryOfOrigin": {
                        "$ref": "#/components/schemas/CountryCode"
                    },
                    "documentOriginator": {
                        "$ref": "#/components/schemas/Organisation"
                    },
                    "versionNumber": {
                        "pattern": "-?\\d{1,2}",
                        "type": "integer",
                        "description": "Two digits. e.g. 99",
                        "format": "int32",
                        "nullable": true
                    },
                    "softwareIdentifier": {
                        "$ref": "#/components/schemas/SoftwareIdentifier"
                    },
                    "abn": {
                        "maxLength": 11,
                        "minLength": 0,
                        "pattern": "^[0-9]+$",
                        "type": "string",
                        "description": "Australian Business Number, 11 digits string"
                    }
                },
                "additionalProperties": false
            },
            "WeightUnit": {
                "enum": [
                    0,
                    1
                ],
                "type": "integer",
                "description": "0: Kilograms<br />1: Pounds",
                "format": "int32"
            }
        },
        "securitySchemes": {
            "Bearer": {
                "type": "apiKey",
                "description": "JWT Access Token that is added in the Authorization header of the HTTP request. Example: \"Authorization: Bearer {token}\". The JWT serves as a credential that proves the identity of the client to the server.",
                "name": "Authorization",
                "in": "header"
            },
            "oauth2": {
                "type": "oauth2",
                "description": "Authentication for client applications by providing Client ID and Client Secret for an JWT Access Token.",
                "flows": {
                    "clientCredentials": {
                        "tokenUrl": "/auth-server/oauth/token",
                        "scopes": {}
                    }
                }
            }
        }
    },
    "security": [
        {
            "Bearer": []
        }
    ]
}