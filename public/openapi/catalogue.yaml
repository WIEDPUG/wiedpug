openapi: 3.0.1
info:
  title: WIEDPUG API
  description: API Documentation for the WIEDPUG Network
  termsOfService: https://wiedpug.github.io/wiedpug
  contact:
    name: WIEDPUG Team
    url: https://wiedpug.github.io/wiedpug
    email: changethis@email.com
  license:
    name: Applicable License
    url: https://wiedpug.github.io/wiedpug
  version: v0.0
paths:
  /v0/catalogue:
    post:
      tags:
        - Catalogue
      summary: Transmit new Auction Catalogues and Private Catalogues
      description: Used by brokers to transmit Original broadcast and private auction
        catalogue data to the Network for auctions regulated by the Australian
        Wool Exchange Limited.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/Catalogue"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResult"
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ApiErrorResult"
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ApiErrorResult"
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ApiErrorResult"
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ApiErrorResult"
  /v0/catalogue/updates:
    post:
      tags:
        - Catalogue
      summary: Transmit Catalogue Updates
      description: Used by brokers to transmit broadcast and private auction catalogue
        data updates to the Network for auctions regulated by the Australian
        Wool Exchange Limited.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/Catalogue"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResult"
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ApiErrorResult"
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ApiErrorResult"
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ApiErrorResult"
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ApiErrorResult"
  /v0/catalogue/data:
    post:
      tags:
        - Catalogue
      summary: Request for Data relating to Auction Catalogue, Private Catalogue and
        Auction Catalogue Updates
      description: Used by brokers to request Private and Broadcast data, as well as
        Re-requesting data for Auction Catalogues, Private Catalogues, and
        Auction Catalogue Updates
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/WoolSaleRequestForData"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CatalogueListApiResult"
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ApiErrorResult"
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ApiErrorResult"
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ApiErrorResult"
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ApiErrorResult"
components:
  schemas:
    Catalogue:
      required:
        - catalogueType
        - transmissionHeader
        - woolSaleHeaders
      type: object
      properties:
        transmissionHeader:
          $ref: "#/components/schemas/TransmissionHeader"
        catalogueType:
          $ref: "#/components/schemas/CatalogueType"
        transferConfig:
          $ref: "#/components/schemas/TransferConfig"
        woolSaleHeaders:
          type: array
          items:
            $ref: "#/components/schemas/CatalogueWoolSaleHeader"
      additionalProperties: false
    TransmissionHeader:
      required:
        - abn
        - countryOfOrigin
        - currentReceiver
        - dateFormatLastRevised
        - dateTransmissionFileCreated
        - documentOriginator
      type: object
      properties:
        dateFormatLastRevised:
          maxLength: 10
          minLength: 1
          pattern: /(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$/
          type: string
          description: Date value in ISO standard UTC date format. e.g. 2024-03-21
            (YYYY-MM-DD).
          format: date
        dateTransmissionFileCreated:
          maxLength: 10
          minLength: 1
          pattern: /(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$/
          type: string
          description: Date value in ISO standard UTC date format. e.g. 2024-03-21
            (YYYY-MM-DD).
          format: date
        countryOfOrigin:
          $ref: "#/components/schemas/CountryCode"
        documentOriginator:
          $ref: "#/components/schemas/Organisation"
        currentReceiver:
          $ref: "#/components/schemas/Organisation"
        versionNumber:
          pattern: -?\d{1,2}
          type: integer
          description: Two digits. e.g. 99
          format: int32
          nullable: true
        softwareIdentifier:
          $ref: "#/components/schemas/SoftwareIdentifier"
        abn:
          maxLength: 11
          minLength: 1
          pattern: ^[0-9]+$
          type: string
          description: Australian Business Number, 11 digits string
      additionalProperties: false
    CountryCode:
      enum:
        - AU
        - NZ
        - DE
        - IT
        - CN
        - TW
      type: string
      description: "A code for the country in which the transmission was created.
        Country Code using ISO 3166-1 standard<br />AU: Australia<br />NZ: New
        Zealand<br />DE: Germany<br />IT: Italy<br />CN: China<br />TW: Taiwan"
    Organisation:
      required:
        - organisationCode
      type: object
      properties:
        organisationCode:
          maxLength: 3
          minLength: 1
          type: string
        centre:
          $ref: "#/components/schemas/Centre"
      additionalProperties: false
    Centre:
      required:
        - centreCode
        - country
      type: object
      properties:
        country:
          $ref: "#/components/schemas/CountryCode"
        centreCode:
          oneOf:
            - $ref: "#/components/schemas/CentreCodeAustralia"
            - $ref: "#/components/schemas/CentreCodeChina"
            - $ref: "#/components/schemas/CentreCodeGermany"
            - $ref: "#/components/schemas/CentreCodeItaly"
            - $ref: "#/components/schemas/CentreCodeNewZealand"
            - $ref: "#/components/schemas/CentreCodeTaiwan"
      additionalProperties: false
      description: "Centre has country and centreCode.\r

        \r

        The centreCode is one of these below based on the value of
        country.\r

        \r

        The mapping of country:centreCode is the following:\r

        \            \r

        AU:CentreCodeAustralia\r

        \r

        NZ: CentreNewZealand\r

        \r

        DE: CentreGermany\r

        \r

        IT: CentreItaly\r

        \r

        CN: CentreChina\r

        \r

        TW: CentreTaiwan\r

        \r

        The legacy codes for Overseas Centre are under
        CentreCodeAustralia"
    CentreCodeAustralia:
      enum:
        - A
        - AD
        - AR
        - AU
        - B
        - BA
        - BK
        - BL
        - BM
        - BO
        - BR
        - BT
        - C
        - CA
        - CB
        - CC
        - CL
        - CN
        - CO
        - CR
        - CU
        - CW
        - D
        - DE
        - DO
        - DR
        - E
        - ER
        - ES
        - F
        - G
        - GF
        - GI
        - GN
        - GR
        - GU
        - H
        - HA
        - HB
        - HM
        - HO
        - HY
        - I
        - J
        - JA
        - K
        - KE
        - KH
        - KI
        - KN
        - KT
        - KW
        - KY
        - L
        - LC
        - M
        - MA
        - MB
        - MC
        - ME
        - MG
        - MI
        - MO
        - MR
        - MU
        - N
        - NA
        - ND
        - NO
        - NR
        - OB
        - OR
        - P
        - PA
        - PL
        - Q
        - QU
        - R
        - S
        - SG
        - SH
        - SK
        - SW
        - SY
        - T
        - TE
        - U
        - UR
        - V
        - W
        - WA
        - WG
        - WL
        - WN
        - WR
        - WW
        - X
        - Y
        - YA
        - YM
        - YO
        - Z
        - ZC
        - ZD
        - ZH
        - ZJ
        - ZK
        - ZL
        - ZM
        - ZO
        - ZP
        - ZQ
        - ZR
        - ZT
        - ZV
        - ZW
        - ZX
        - ZY
      type: string
      description: "This is Centres for Australia. A centre is a town where any
        activity connected with the wool industry takes place. The codes used in
        transmissions are those defined in the Australian Wool Selling
        Regulation.<br />A: Australia - ADELAIDE<br />AD: Australia -
        Ardlethan<br />AR: Australia - Armidale (NSW)<br />AU: Australia -
        AUSTRALIA (AWEX internal only)<br />B: Australia - BRISBANE<br />BA:
        Australia - Benalla<br />BK: Australia - Bourke<br />BL: Australia -
        Ballarat<br />BM: Australia - Barham<br />BO: Australia - Boorowa<br
        />BR: Australia - Bordertown<br />BT: Australia - Bathurst<br />C:
        Australia - Cooma<br />CA: Australia - Casterton<br />CB: Australia -
        Coonabarabran<br />CC: Australia - Culcairn<br />CL: Australia -
        Coleraine<br />CN: Australia - Condoblin<br />CO: Australia -
        Cootamundra<br />CR: Australia - Corowa<br />CU: Australia -
        Cunnamulla<br />CW: Australia - Crookwell<br />D: Australia - Bendigo<br
        />DE: Australia - Deniliquin<br />DO: Australia - Dubbo<br />DR:
        Australia - Canowindra<br />E: Australia - Echuca<br />ER: Australia -
        Euroa<br />ES: Australia - Esperance<br />F: Australia - FREMANTLE<br
        />G: Australia - GEELONG<br />GF: Australia - Grenfell<br />GI:
        Australia - Glenn Innes<br />GN: Australia - Gunning<br />GR: Australia
        - Griffith<br />GU: Australia - Guyra<br />H: Australia - Hobart<br
        />HA: Australia - Harden<br />HB: Australia - Holbrook<br />HM:
        Australia - Hamilton<br />HO: Australia - Horsham<br />HY: Australia -
        Hay<br />I: Australia - Narrabri<br />J: Australia - Parkes<br />JA:
        Australia - Jamestown<br />K: Australia - Warracknabeal<br />KE:
        Australia - Kerang<br />KH: Australia - Keith<br />KI: Australia -
        Kangaroo Island<br />KN: Australia - Kingston<br />KT: Australia -
        Katanning<br />KW: Australia - Wagga Wagga<br />KY: Australia -
        Kyneton<br />L: Australia - LAUNCESTON<br />LC: Australia - Lane Cove
        (AWEX internal only)<br />M: Australia - MELBOURNE<br />MA: Australia -
        Mansfield<br />MB: Australia - Murray Bridge<br />MC: Australia -
        Macarthur<br />ME: Australia - Melton<br />MG: Australia - Mount
        Gambier<br />MI: Australia - Mildura<br />MO: Australia - Moree<br />MR:
        Australia - Maryborough<br />MU: Australia - Mudgee<br />N: Australia -
        NEWCASTLE<br />NA: Australia - Narrandera<br />ND: Australia -
        Goondiwindi<br />NO: Australia - Northam<br />NR: Australia -
        Naracoorte<br />OB: Australia - Oberon<br />OR: Australia - Orange<br
        />P: Australia - Portland<br />PA: Australia - Cowra<br />PL: Australia
        - Port Lincoln<br />Q: Australia - Yarrawonga<br />QU: Australia -
        Queanbeyan<br />R: Australia - GOULBURN<br />S: Australia - SYDNEY<br
        />SG: Australia - St George<br />SH: Australia - Shepparton<br />SK:
        Australia - Skipton<br />SW: Australia - Swan Hill<br />SY: Australia -
        Seymour<br />T: Australia - Inverell<br />TE: Australia - Temora<br />U:
        Australia - Auburn<br />UR: Australia - Uralla<br />V: Australia -
        Forbes<br />W: Australia - Tamworth<br />WA: Australia - Warren<br />WG:
        Australia - Walgett<br />WL: Australia - Walcha<br />WN: Australia -
        Wellington<br />WR: Australia - Wangaratta<br />WW: Australia - West
        Wyalong<br />X: Australia - Ararat<br />Y: Australia - Albury<br />YA:
        Australia - Yass<br />YM: Australia - Yarram<br />YO: Australia -
        Young<br />Z: Australia - Albany<br />ZC:Christchurch - New Zealand<br
        />ZD: Dunedin - New Zealand<br />ZH: Blumenthal - Germany<br />ZJ:
        Biella - Italy<br />ZK: Grisignano - Italy<br />ZL: Mosgiel - New
        Zealand<br />ZM: Nanjing - China<br />ZO: Keelung - Taiwan<br />ZP:
        Shanghai - China<br />ZQ: Qingdao - China<br />ZR: Zhangjiagang -
        China<br />ZT: Timaru - New Zealand<br />ZV: Invercargill - New
        Zealand<br />ZW:Wellington - New Zealand<br />ZX: Napier – New
        Zealand<br />ZY: Ashburton – New Zealand"
    CentreCodeChina:
      enum:
        - NA
        - SH
        - QI
        - ZH
      type: string
      description: "This is Centres for China. A centre is a town where any activity
        connected with the wool industry takes place. The codes used in
        transmissions are those defined in the Australian Wool Selling
        Regulation.<br />NA: Nanjing - China<br />SH: Shanghai - China<br />QI:
        Qingdao - China<br />ZH: Zhangjiagang - China"
    CentreCodeGermany:
      enum:
        - BL
      type: string
      description: "This is Centres for Germany. A centre is a town where any activity
        connected with the wool industry takes place. The codes used in
        transmissions are those defined in the Australian Wool Selling
        Regulation.<br />BL: Blumenthal - Germany"
    CentreCodeItaly:
      enum:
        - BI
        - GR
      type: string
      description: "This is Centres for Italy. A centre is a town where any activity
        connected with the wool industry takes place. The codes used in
        transmissions are those defined in the Australian Wool Selling
        Regulation.<br />BI: Biella - Italy<br />GR: Grisignano - Italy"
    CentreCodeNewZealand:
      enum:
        - A
        - AW
        - B
        - BL
        - BT
        - C
        - CV
        - D
        - F
        - FA
        - G
        - GD
        - GO
        - HA
        - HS
        - I
        - J
        - K
        - KA
        - KP
        - L
        - LO
        - LU
        - M
        - MA
        - MK
        - MT
        - MU
        - N
        - NE
        - O
        - OH
        - OI
        - OM
        - OT
        - P
        - PT
        - PU
        - R
        - RG
        - RI
        - S
        - SA
        - SH
        - SY
        - T
        - TA
        - TE
        - TH
        - TP
        - U
        - V
        - W
        - WH
        - WI
        - WR
        - WT
        - WU
        - X
        - Y
        - YP
        - Z
      type: string
      description: "This is Centres for New Zealand. A centre is a town where any
        activity connected with the wool industry takes place. The codes used in
        transmissions are those defined in the Australian Wool Selling
        Regulation.<br />A: New Zealand - Auckland<br />AW: New Zealand -
        Awatoto<br />B: New Zealand - Cambridge<br />BL: New Zealand -
        Blenheim<br />BT: New Zealand - Bunnythorpe<br />C: New Zealand -
        Christchurch<br />CV: New Zealand - Clive<br />D: New Zealand -
        Dunedin<br />F: New Zealand - Feilding<br />FA: New Zealand - Fairlie<br
        />G: New Zealand - Gisborne<br />GD: New Zealand - Geraldine<br />GO:
        New Zealand - Gore<br />HA: New Zealand - Hawera<br />HS: New Zealand -
        Hastings<br />I: New Zealand - Invercargill<br />J: New Zealand -
        Tapanui<br />K: New Zealand - Te Kuiti<br />KA: New Zealand -
        Kakariki<br />KP: New Zealand - Kaiapoi<br />L: New Zealand - Mosgiel<br
        />LO: New Zealand - Longburn<br />LU: New Zealand - Lumsden<br />M: New
        Zealand - Masterton<br />MA: New Zealand - Mangatinoka<br />MK: New
        Zealand - Motueka<br />MT: New Zealand - Milton<br />MU: New Zealand -
        Mataura<br />N: New Zealand - Napier<br />NE: New Zealand - Nelson<br
        />O: New Zealand - Oamaru<br />OH: New Zealand - Ohinewai<br />OI: New
        Zealand - Ohai<br />OM: New Zealand - Omakau<br />OT: New Zealand -
        Otorohonga<br />P: New Zealand - Palmerston North<br />PT: New Zealand -
        Pahiatua<br />PU: New Zealand - Putaruru<br />R: New Zealand -
        Rotorua<br />RG: New Zealand - Rangiora<br />RI: New Zealand - Riwaka<br
        />S: New Zealand - Ashburton<br />SA: New Zealand - Saltwater Creek<br
        />SH: New Zealand - Shannon<br />SY: New Zealand - Sydney<br />T: New
        Zealand - Timaru<br />TA: New Zealand - Tapanui<br />TE: New Zealand -
        TeAnau<br />TH: New Zealand - Taihape<br />TP: New Zealand - Te Puke<br
        />U: New Zealand - Taumaruniu<br />V: New Zealand - Dannevirke<br />W:
        New Zealand - Wellington<br />WH: New Zealand - Whakatu<br />WI: New
        Zealand - Whakatu Industrial Park<br />WR: New Zealand - Wairoa<br />WT:
        New Zealand - Winton<br />WU: New Zealand - Waikuku<br />X: New Zealand
        - Wanganui<br />Y: New Zealand - Whangarei<br />YP: New Zealand -
        Waipukurau<br />Z: New Zealand - Taupo"
    CentreCodeTaiwan:
      enum:
        - KE
      type: string
      description: "This is Centres for Taiwan. A centre is a town where any activity
        connected with the wool industry takes place. The codes used in
        transmissions are those defined in the Australian Wool Selling
        Regulation.<br />KE: Keelung - Taiwan"
    SoftwareIdentifier:
      type: object
      properties:
        softwareCompany:
          $ref: "#/components/schemas/SoftwareCompany"
        version:
          pattern: -?\d{1,4}
          type: integer
          description: Version no. e.g. 2400
          format: int32
          nullable: true
        programName:
          maxLength: 4
          minLength: 1
          type: string
          nullable: true
      additionalProperties: false
    SoftwareCompany:
      enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
      type: integer
      description: "1: Talman<br />2: Symbotic<br />3: Jumbuck/Datacon<br />4:
        Jemalong<br />5: NA - no value<br />6: Modiano<br />7: AWH<br />6: AWTA"
      format: int32
    CatalogueType:
      enum:
        - A
        - P
      type: string
      description: "A: Auction Catalogues<br />P: Private Catalogues"
    TransferConfig:
      required:
        - transferType
      type: object
      properties:
        transferType:
          $ref: "#/components/schemas/TransferType"
        finalReceiverList:
          type: array
          items:
            $ref: "#/components/schemas/Organisation"
          nullable: true
      additionalProperties: false
      description: "Used to identify document transfer type: Restrict, Unrestrict, and
        Exlcude.\r

        \r

        Only used for data retrieval. Do not include it in the
        response."
    TransferType:
      enum:
        - Unrestrict
        - Restrict
        - Exclude
      type: string
      description: "Unrestrict: Send document to all members<br />Restrict: Send
        document to appointed members<br />Exclude: Send to all members
        excluding the appointed members"
    CatalogueWoolSaleHeader:
      required:
        - catalogueWoolSaleHeaderLots
        - woolSaleHeaderLots
      type: object
      properties:
        woolSaleHeaderLots:
          $ref: "#/components/schemas/WoolSaleHeaderLots"
        catalogueWoolSaleHeaderLots:
          type: array
          items:
            $ref: "#/components/schemas/CatalogueWoolSaleHeaderLot"
      additionalProperties: false
    WoolSaleHeaderLots:
      required:
        - centreCatalogue
        - centreStorage
        - invoicingOrganisation
        - saleDate
        - saleIdentity
        - season
        - woolState
      type: object
      properties:
        season:
          pattern: -?\d{1,2}
          type: integer
          description: Two digits e.g. 99
          format: int32
        saleIdentity:
          $ref: "#/components/schemas/SaleIdentity"
        centreStorage:
          $ref: "#/components/schemas/Centre"
        saleDate:
          maxLength: 10
          minLength: 1
          pattern: /(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$/
          type: string
          description: Date value in ISO standard UTC date format. e.g. 2024-03-21
            (YYYY-MM-DD).
          format: date
        woolState:
          $ref: "#/components/schemas/WoolState"
        packType:
          $ref: "#/components/schemas/PackType"
        postSaleCharge:
          $ref: "#/components/schemas/Currency"
        calculationBasis:
          $ref: "#/components/schemas/CalculationBasis"
        freightCharge:
          $ref: "#/components/schemas/Currency"
        freightRebate:
          $ref: "#/components/schemas/Currency"
        chargePerLot:
          $ref: "#/components/schemas/Currency"
        invoiceNumber:
          pattern: -?\d{1,8}
          type: string
          nullable: true
        catalogueSection:
          $ref: "#/components/schemas/CatalogueSection"
        isFinalCatalogue:
          maxLength: 5
          minLength: 4
          type: boolean
          description: "A boolean value to indicate whether the related section of the
            catalogue transmission is expected to have more amendments
            transmitted or is the final transmission for that section.\r

            \r

            true: is a final catalogue.\r

            \r

            false: is not a final catalogue."
          nullable: true
        invoicingOrganisation:
          $ref: "#/components/schemas/Organisation"
        releasingOrganisation:
          $ref: "#/components/schemas/Organisation"
        sellingOrganisation:
          $ref: "#/components/schemas/Organisation"
        woolTypeGroup:
          $ref: "#/components/schemas/WoolTypeGroup"
        centreCatalogue:
          $ref: "#/components/schemas/Centre"
        deliveryBasis:
          $ref: "#/components/schemas/DeliveryBasis"
        centreDelivery:
          $ref: "#/components/schemas/Centre"
        centreAlternateDelivery:
          $ref: "#/components/schemas/Centre"
        storageOrganisation:
          $ref: "#/components/schemas/Organisation"
        storageDescription:
          maxLength: 15
          minLength: 1
          type: string
          description: Used to provide more details on location within the Storage
            Organisations facility - such as street address, warehouse number
            etc. – to assist delivery.
          nullable: true
        paymentDueDate:
          maxLength: 10
          minLength: 1
          pattern: /(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$/
          type: string
          description: "The date on which payment is due. Also known as Prompt Date.\r

            \r

            Date value in ISO standard UTC date format. e.g.
            2024-03-21 (YYYY-MM-DD)."
          format: date
          nullable: true
        discountRate:
          pattern: ^-?\d{1,2}\.\d{2}$
          type: number
          description: Total 4 digits with 2 digits after the decimal point. e.g. 23.76
          format: double
          nullable: true
        maximumDaysDiscount:
          pattern: -?\d{1,2}
          type: integer
          description: 2 digits number. e.g. 23
          format: int32
          nullable: true
        dateStorageChargeCommences:
          maxLength: 10
          minLength: 1
          pattern: /(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$/
          type: string
          description: Date value in ISO standard UTC date format. e.g. 2024-03-21
            (YYYY-MM-DD)
          format: date
          nullable: true
        storageChargePerBalePerDay:
          $ref: "#/components/schemas/StorageChargeCurrency"
        penaltyInterestRate:
          pattern: ^-?\d{1,2}\.\d{2}$
          type: number
          description: Total 4 digits with 2 digits after the decimal point. e.g. 23.76
          format: double
          nullable: true
        lotAvailableDate:
          maxLength: 10
          minLength: 1
          pattern: /(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$/
          type: string
          description: "The first date on which the wool is available for purchase.\r

            \r

            Date value in ISO 8601 standard UTC date format. e.g.
            2024-03-21. (YYYY-MM-DD)"
          format: date
          nullable: true
        postSaleChargeRebate:
          $ref: "#/components/schemas/Currency"
        catalogueAvailabilityDateTime:
          maxLength: 24
          minLength: 1
          pattern: /(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T([01]\d|2[0-3]):([0-5]\d):([0-5]\d)Z$
          type: string
          description: Date and Time value in ISO 8601 standard. e.g.
            2024-03-21T19:25:04.000Z
          format: date-time
          nullable: true
        saleStartDateTime:
          maxLength: 24
          minLength: 1
          pattern: /(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T([01]\d|2[0-3]):([0-5]\d):([0-5]\d)Z$
          type: string
          description: Date and Time value in ISO 8601 standard UTC datetime format. e.g.
            2024-03-21T19:25:04+00:00.000Z
          format: date-time
          nullable: true
        saleEndDateTime:
          maxLength: 24
          minLength: 1
          pattern: /(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T([01]\d|2[0-3]):([0-5]\d):([0-5]\d)Z$
          type: string
          description: Date and Time value in ISO 8601 standard UTC datetime format. e.g.
            2024-03-21T19:25:04+00:00.000Z
          format: date-time
          nullable: true
        saleType:
          $ref: "#/components/schemas/SaleType"
        electronicSaleFlag:
          maxLength: 1
          minLength: 1
          type: string
          nullable: true
        isReservePriceDisplayed:
          maxLength: 5
          minLength: 4
          type: boolean
          description: "A boolean value to indicate whether to display reserve price to
            buyers.\r

            \r

            true: display.\r

            \r

            false: not display."
          nullable: true
        tenderSaleReplyDateTime:
          maxLength: 24
          minLength: 1
          pattern: /(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T([01]\d|2[0-3]):([0-5]\d):([0-5]\d)Z$
          type: string
          description: Date and Time value in ISO 8601 standard UTC datetime format. e.g.
            2024-03-21T19:25:04.000Z
          format: date-time
          nullable: true
      additionalProperties: false
    SaleIdentity:
      required:
        - saleNumber
        - sellingCentreType
      type: object
      properties:
        sellingCentreType:
          maxLength: 2
          minLength: 1
          type: string
          description: "The following codes are reserved for current and historical open
            cry auction selling centres:\r

            \            \r

            SellingCentre/Type (New Zealand):\r

            \            \r

            C: Christchurch; \r

            \r

            N: Napier.\r

            \r

            \            \r

            SellingCentre/Type (Australia):\r

            \            \r

            A: Adelaide; \r

            \r

            AU: Australia; \r

            \r

            B: Brisbane; \r

            \r

            F: Fremantle; \r

            \r

            G: Geelong; \r

            \r

            L: Launceston; \r

            \r

            M: Melbourne; \r

            \r

            N: Newcastle; \r

            \r

            R: Goulburn; \r

            \r

            S: Sydney.\r

            \r

            \r

            The following codes are allocated for alternative sale
            types:\r

            \            \r

            PS: Private Sales; \r

            \r

            T: Auctions Plus Sales.\r

            \            \r

            \r

            Please contact the WIEDPUG Secretary for the latest list
            of reserved and allocated codes."
        saleNumber:
          maxLength: 2
          minLength: 1
          pattern: -?\d{1,2}
          type: integer
          format: int32
      additionalProperties: false
      description: "A group field of SellingCentre/Type and Sale Number\r

        \            \r

        From: The current value that the Sale Identity is to be changed
        from.\r

        \            \r

        To: The new value that the Sale Identity is to be changed to."
    WoolState:
      enum:
        - "1"
        - "2"
        - "3"
        - "4"
        - "5"
        - "6"
        - "7"
        - "8"
        - "9"
        - A
        - C
        - M
      type: string
      description: The state of the wool itemised in the invoice.<br />1. Greasy<br
        />2. Dead<br />3. Slipe<br />4. Scoured<br />5. Carbonised<br />6. Wool
        tops<br />7. Wool noils<br />8. Carded sliver<br />9. Other processed
        wool<br />A. Alpaca<br />C. Cashmere<br />M. Mohair
    PackType:
      enum:
        - "0"
        - "1"
        - "2"
        - "3"
        - "4"
        - "5"
        - "6"
        - "7"
        - "8"
        - "9"
        - A
        - B
        - C
        - D
        - E
        - F
        - Z
      type: string
      description: "A code used to indicate how the wool has been baled. The most
        common type is Farm bales. <strong>Original</strong> - the pack type
        when the wool was originally baled. <strong>Preferred</strong> - The
        pack type which the buyer would prefer to be used when his wool is
        dumped.<br />0: Standard (farm) bale<br />1: Bag/butt<br />2:
        Lightweight bale<br />3: Jumbo bale<br />4: Single bales (normal density
        dumped)<br />5: Single bales (high density dumped)<br />6: Single bales
        (super high density dumped)<br />7: 3 bale tripack (super high density
        dumped)<br />8: 2 bale tripack (super high density dumped)<br />9: U
        bales<br />A: 4 or 6 bale unitised (normal density dumped)<br />B: 4 or
        6 bale unitised (high density dumped)<br />C: 4 or 6 bale unitised
        (super high density dumped)<br />D: Two Bale Module (2BM)<br />E: J9
        size bale used for scoured wool<br />F: J12 size bale used for scoured
        wool<br />Z: Mixed (to be used with groups only, that is, record type
        12)"
    Currency:
      required:
        - value
      type: object
      properties:
        value:
          pattern: ^-?\d{1,10}\.\d{2}$
          type: number
          description: Total up to 12 digits with 2 digits after the decimal point.
          format: double
        currencyUnit:
          $ref: "#/components/schemas/CurrencyUnit"
      additionalProperties: false
    CurrencyUnit:
      enum:
        - AUD
        - BEF
        - NZD
        - BGP
        - FRF
        - DEM
        - ITL
        - CNY
        - ANG
        - TWD
        - ZAR
        - USD
        - EUR
      type: string
      description: "AUD: Australian Dollars<br />BEF: Belgian Francs<br />NZD: New
        Zealand Dollars<br />BGP: British Pounds<br />FRF: French Francs<br
        />DEM: German Deutsche Marks<br />ITL: Italy Lire<br />CNY: Chinese
        Yuan<br />ANG: Netherlands Antilles Guilders<br />BEF: Taiwan New
        Dollars<br />ZAR: South Africa Rand<br />USD: USA Dollars<br />EUR:
        Euro"
    CalculationBasis:
      enum:
        - B
        - K
        - P
      type: string
      description: "This is used to identify the method used to calculate the post
        sale charge. The post sale charge may be a per bale, per kilogram or
        percentage of the price of the wool. Calculation Basis is always per
        bale in Australia.<br />B: Post sale charge is levied per bale<br />K:
        The post sale charge is a charge per kil<br />P: The post sale charge is
        a % of first cost"
    CatalogueSection:
      enum:
        - BLK
        - DEAD
        - FLC
        - FMG
        - ODD
        - SKIN
        - SKT
        - TRAD
        - XBD
      type: string
      description: "These are the codes allocated by the local wool authorities to
        sectionalise the sale catalogues.<br />BLK: ODDS - Black<br />DEAD: ODDS
        - Dead<br />FLC: MFLC - Merino Fleece<br />FMG: ODDS - Fellmongered<br
        />ODD: ODDS - Oddments<br />SKIN: ODDS - Skin Wool<br />SKT: MSKT -
        Skirting<br />TRAD: MFLC / MSKT / XBFS / ODDS - Traditionally Shown<br
        />XBD: C XBFS - Crossbred (Flc & Skt)"
    WoolTypeGroup:
      enum:
        - MFLC
        - MSKT
        - XBFS
        - ODDS
      type: string
      description: "A code to indicate which section of the sale that lot belongs.<br
        />MFLC: Merino fleece types<br />MSKT: Merino fleece types<br />XBFS:
        Merino fleece types<br />ODDS: Merino fleece types"
    DeliveryBasis:
      enum:
        - D
        - L
      type: string
      description: "D: Delivery Nominated Destination<br />L: Loaded on Transport"
    StorageChargeCurrency:
      required:
        - value
      type: object
      properties:
        value:
          pattern: ^-?\d{1}\.\d{3}$
          type: number
          format: double
        currencyUnit:
          $ref: "#/components/schemas/CurrencyUnit"
      additionalProperties: false
    SaleType:
      enum:
        - A
        - T
        - O
        - AV
        - E
      type: string
      description: "A: Auction (open cry)<br />T: Tender<br />O: Offer<br />AV:
        Availability<br />E: Electronic Sale"
    CatalogueWoolSaleHeaderLot:
      required:
        - lotHeaderVendorDeclarations
      type: object
      properties:
        lotHeader:
          $ref: "#/components/schemas/LotHeader"
        lotHeaderPricings:
          type: array
          items:
            $ref: "#/components/schemas/LotHeaderPricingData"
          nullable: true
        encryptedLotHeaderAwexData:
          $ref: "#/components/schemas/EncryptedLotHeaderAwexData"
        lotHeaderVendorDeclarations:
          type: array
          items:
            $ref: "#/components/schemas/LotHeaderVendorDeclaration"
        testDetails:
          $ref: "#/components/schemas/TestDetails"
        colourTestDetails:
          $ref: "#/components/schemas/ColourTestDetails"
        lengthAndStrengthTestDetails:
          $ref: "#/components/schemas/LengthAndStrengthTestDetails"
        combinationDetails:
          $ref: "#/components/schemas/CombinationDetails"
        histograms:
          type: array
          items:
            $ref: "#/components/schemas/FibreDiameterHistogram"
          nullable: true
        catalogueLotDescription:
          $ref: "#/components/schemas/CatalogueLotDescription"
        baleIdentifications:
          type: array
          items:
            $ref: "#/components/schemas/BaleIdentification"
          description: This field is completely optional when sending Auction Catalogue
            Updates
          nullable: true
        interlotComponentBales:
          type: array
          items:
            $ref: "#/components/schemas/InterlotComponentBale"
          description: This field is completely optional when sending Auction Catalogue
            Updates
          nullable: true
      additionalProperties: false
    LotHeader:
      required:
        - bales
        - catalogueSymbols
        - gross
        - lotIdentity
        - lotType
        - packCondition
        - packMaterial
        - tare
        - updateType
        - woolDescription
      type: object
      properties:
        lotIdentity:
          maxLength: 6
          minLength: 1
          type: string
        bales:
          pattern: -?\d{1,4}
          type: integer
          format: int32
        gross:
          $ref: "#/components/schemas/Weight"
        tare:
          $ref: "#/components/schemas/Weight"
        regrabSampleWeight:
          $ref: "#/components/schemas/Weight"
        cataloguePageNumber:
          pattern: -?\d{1,3}
          type: integer
          format: int32
          nullable: true
        isNoLot:
          maxLength: 5
          minLength: 4
          type: boolean
          description: "A boolean value to indicate whether the lot is included for sale
            in the auction.\r

            \r

            It is used in New Zealand only.\r

            \r

            true: normal Lot.\r

            \r

            false: not a normal Lot."
          nullable: true
        sourceCode:
          $ref: "#/components/schemas/SourceCode"
        updateType:
          $ref: "#/components/schemas/UpdateType"
        catalogueSymbols:
          maxLength: 6
          minLength: 1
          type: string
          description: "These are the symbols defined in the AWEX Wool Selling Rules, to
            be \r

            printed in a sale catalogue against any appropriate
            lot.In a transmitted\r

            catalogue they are left justified with no space or
            punctuation marks\r

            between symbols where more than one symbol is used.If
            this field\r

            contains spaces it will indicate that there are no
            catalogue symbols for \r

            that lot.\r

            \r

            To obtain the current code list of values that may be
            used in this field\r

            please go to this URL:
            http://www.awex.com.au/standards/catalogue/."
        packMaterial:
          $ref: "#/components/schemas/PackMaterial"
        lotType:
          $ref: "#/components/schemas/LotType"
        lightestIndividualBaleWeight:
          $ref: "#/components/schemas/Weight"
        reportingFlag:
          $ref: "#/components/schemas/ReportingFlag"
        firstOfferSeason:
          pattern: -?\d{1,2}
          type: integer
          format: int32
          nullable: true
        firstOfferSaleIdentity:
          $ref: "#/components/schemas/SaleIdentity"
        firstOfferLotIdentity:
          maxLength: 6
          minLength: 1
          type: string
          description: "This is a compound name for lot number and lot suffix, where the
            lot number is 5 number characters and the lot suffix is 1
            alphanumeric character.\r

            \r

            The suffix is used when a lot is broken up but the
            original lot number is retained; for example, if 2 bales of a
            10-bale lot got wet and the 8 bales the 2 bales are offered
            separately, one could have a suffix A and the other a suffix B.\r

            \r

            Where a suffix is not used, the lot number occupies the
            whole of the Lot Identity field."
          nullable: true
        costPerWeightUnit:
          $ref: "#/components/schemas/PriceCurrency"
        cleanWeight:
          $ref: "#/components/schemas/Weight"
        yieldType:
          $ref: "#/components/schemas/YieldType"
        offerType:
          $ref: "#/components/schemas/OfferType"
        clientCrossReference:
          maxLength: 8
          minLength: 1
          type: string
          nullable: true
        packCondition:
          $ref: "#/components/schemas/PackCondition"
        coreTestSamplingDate:
          maxLength: 10
          minLength: 1
          pattern: /(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$/
          type: string
          description: "Date value in ISO 8601 standard UTC date format. e.g. 2024-03-21.
            (YYYY-MM-DD)\r

            \r

            For records Fibre Diameter Histogram Header and Test
            Request Verification this is the date core test was sampled or date
            combination/OML was requested.\r

            \r

            For the Lot Header this is the date the core test was
            sampled, the last date of weighing for untested wool or the date the
            Combination/OML was requested."
          format: date
          nullable: true
        woolDescriptionComment:
          maxLength: 14
          minLength: 1
          type: string
          description: This field provides for additional comments relating to the
            information contained in the Wool Description field.
          nullable: true
        woolDescription:
          maxLength: 20
          minLength: 1
          type: string
          description: "This field contains a description that is either an AWEX-ID
            description or another appraisal description.\r

            \r

            Alternative valid appraisal descriptions include AWC
            type, Exporter type.\r

            \r

            The AWEX-ID description must conform to the current
            AWEX-ID code standard.\r

            \r

            If sending an AWC type, the first character of this
            field must be set to `W`, followed by the AWC Type, for all other
            non AWEX-ID typing descriptions the first character should be set to
            `P` followed by the type.If sending AWEX-ID the type starts from
            position one of the field (i.e.there are no leading characters). \r

            \r

            This field is to be always transmitted in upper case."
        isGstTaxInvoiceApplicable:
          maxLength: 5
          minLength: 4
          type: boolean
          description: "A boolean value to indicate whether the GST amount is applicable
            to invoice. \r

            \r

            true: applicable.\r

            \r

            false: not applicable."
          nullable: true
        brokerReservePrice:
          $ref: "#/components/schemas/PriceCurrency"
        growerReservePrice:
          $ref: "#/components/schemas/PriceCurrency"
        openingPrice:
          $ref: "#/components/schemas/PriceCurrency"
        valuationPrice:
          $ref: "#/components/schemas/PriceCurrency"
        woolDescriptionAuditCode:
          maxLength: 10
          minLength: 1
          type: string
          description: Audit code used for verifying if AWEX-ID was issued by AWEX.
          nullable: true
        numberOfOverweightBales:
          pattern: -?\d{1,2}
          type: integer
          description: This is the total number of bales with a Reweigh Gross Kg over 204kg.
          format: int32
          nullable: true
      additionalProperties: false
    Weight:
      required:
        - unit
        - value
      type: object
      properties:
        value:
          pattern: ^-?\d{1,6}\.\d{2}$
          type: number
          format: double
        unit:
          $ref: "#/components/schemas/WeightUnit"
      additionalProperties: false
    WeightUnit:
      enum:
        - 0
        - 1
        - 2
      type: integer
      description: "0: Kilograms<br />1: Pounds<br />2: Grams"
      format: int32
    SourceCode:
      enum:
        - 1
        - 2
        - 3
      type: integer
      description: "Source of the lot presented for sale.<br />1: Grower<br />2:
        Dealer<br />3: BulkClass"
      format: int32
    UpdateType:
      enum:
        - A
        - C
        - D
      type: string
      description: "A flag to indicate what type of change has been made to an
        item.<br />A: The entry is to be added<br />C: The entry is to be
        changed<br />D: The entry is to be deleted"
    PackMaterial:
      enum:
        - N
        - E
        - J
        - K
      type: string
      description: "Where a line/lot contains a Pack with a lower Material, the lower
        Material shall apply.The hierarchy from highest to lowest is N, E, J, K.
        Printed catalogue condition: The code for Nylon packs shall not be
        printed (but shall be transmitted).<br />N: Nylon Packs (complete lots
        only)<br />E: Experimental Packs<br />J: Jute packs (complete lots or
        lots that contain portions of Nylon and/or HDPE 5 and/or HDPE 1 and Jute
        packs)<br />K: HDPE1 packs (complete lots or lots that contain portions
        of Nylon and/or HDPE 5 and HDPE 1 packs)"
    LotType:
      enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
      type: integer
      description: "A code used to describe wool lot preparation. It is not wool type.
        `*` wool meets clip preparation guidelines.`#` wool does not necessarily
        meet clip preparation guidelines<br />1: (Suffix - P) Classed Grower Lot
        *<br />2: (Suffix - M) Objectively Matched Lot<br />3: (Suffix - J)
        Combined Certificate<br />4: (Suffix - I) Subjectively Matched
        Interlot<br />5: (Suffix - B) Other Bulk Class Lot #<br />6: Not Used<br
        />7: (Suffix - N) Objectively Matched Interlot<br />8: (Suffix - Q)
        Classed Bulk Class Lot – Quality Managed *<br />9: (Suffix - D) Other
        Grower Lot #"
      format: int32
    ReportingFlag:
      enum:
        - R
        - C
        - U
      type: string
      description: "R: Report, results for this test are supplied for information
        only<br />C: Certificate results for this test are certified<br />U:
        This lot is untested and there are no certificate results"
    PriceCurrency:
      required:
        - value
      type: object
      properties:
        value:
          pattern: -?\d{1,6}
          type: integer
          description: Total up to 12 digits with 2 digits after the decimal point of per
            unit cost. It is in cent.
          format: int32
        currencyUnit:
          $ref: "#/components/schemas/CurrencyUnit"
      additionalProperties: false
    YieldType:
      enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
        - 13
        - 14
        - 15
        - 16
        - 17
        - 18
        - 19
        - 20
        - 21
        - 22
        - 23
        - 24
        - 25
        - 26
        - 27
        - 28
        - 29
        - 30
        - 31
        - 32
        - 33
        - 42
        - 43
      type: integer
      description: "Yield Type indicates either the type of yield transmitted in
        another field or record, or the type of yield used to arrive at the
        value in another field.<br />1. RESERVED<br />2. RESERVED<br />3.
        Estimated.<br />4. Schlumberger Combed Dry (1% TFM)<br />5. Schlumberger
        Combed Dry (2% TFM)<br />7. Noble Combed in Oil<br />8. IWTO Scoured
        Yield at 16% Regain<br />9. IWTO Scoured Yield at 17% Regain<br />10.
        Japanese Clean Scoured<br />11. Australian Carbonising<br />12. IWTO
        Clean Wool Content, 17% Regain<br />13. United States Custom Clean<br
        />14. Card Sliver<br />15. ASTM Clean Wool Fibre Present<br />16. Noble
        Dry Combed<br />17. Schlumberger Combed in Oil (4.6% TFM)<br />18. Noble
        Combed Dry<br />19. Theoretical Card Sliver<br />20. ASTM Laboratory
        Scoured Yield<br />21. Conditioned at 12.00%<br />22. Conditioned at
        13.00%<br />23. Conditioned at 13.50%<br />24: Conditioned at 13.64%<br
        />25. Conditioned at 14.00%<br />26. Conditioned at 14.40%<br />27.
        Conditioned at 15.00%<br />28. Conditioned at 16.00%<br />29.
        Conditioned at 17.00%<br />30. Conditioned at 18.00%<br />31.
        Conditioned at 18.25%<br />32. Japanese Clean Scoured at 17%<br />33.
        New Zealand Process Yield<br />42. IWT0 Schlumberger Oil T&N (2.0% &
        T.FM.)<br />43. IWTO Clean Wool Content, 16% Regain"
      format: int32
    OfferType:
      enum:
        - P
        - N
        - R
      type: string
      description: "P: Previous/Passed-In Price<br />N: Negotiable Price<br />R:
        Reserve Price"
    PackCondition:
      enum:
        - N
        - M
        - R
        - X
      type: string
      description: "Where a line/lot contains a Pack with a lower condition, the lower
        condition shall apply. The hierarchy from highest to lowest is N, M, R,
        X. This field is optional in New Zealand transmissions.<br />N: New Pack
        (not previously used)<br />M: Marked (not previously cored and
        grabbed<br />R: Repaired (previously core and/or grabbed and
        repaired)<br />X: Not repaired (previously cored and/or grabbed) (excl
        reoffer"
    LotHeaderPricingData:
      type: object
      properties:
        priceBasis:
          $ref: "#/components/schemas/PriceBasis"
        yieldBasis:
          maxLength: 1
          minLength: 1
          type: string
          nullable: true
        offers:
          type: array
          items:
            $ref: "#/components/schemas/LotHeaderPricingDataOffer"
          nullable: true
      additionalProperties: false
    PriceBasis:
      enum:
        - G
        - C
        - I
        - F
      type: string
      description: "G: Greasy<br />C: CLCOF (ACOF or NZCOF)<br />I: CIF<br />F: FOB"
    LotHeaderPricingDataOffer:
      required:
        - offerDate
        - offerPrice
      type: object
      properties:
        offerPrice:
          $ref: "#/components/schemas/PriceCurrency"
        offerDate:
          maxLength: 10
          minLength: 1
          pattern: /(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$/
          type: string
          description: Date value in ISO standard UTC date format. e.g. 2024-03-21
            (YYYY-MM-DD).
          format: date
      additionalProperties: false
    EncryptedLotHeaderAwexData:
      required:
        - encryptedLotHeaderAwexDataString
        - encryptionKeyIdentifier
      type: object
      properties:
        encryptionKeyIdentifier:
          maxLength: 80
          minLength: 1
          type: string
        encryptedLotHeaderAwexDataString:
          minLength: 1
          type: string
          description: "The encrypted LotHeaderAwexData in string format based on base64
            encoding.\r

            \r

            The schema reference can be found here:
            #/components/schemas/LotHeaderAwexData.\r

            \r

            Detailed schema in yaml format:\r

            \r

            LotHeaderAwexData:\r

            \r

            \  type: object\r

            \  \r

            \  properties:\r

            \  \r

            \    awexId:\r

            \    \r

            \      maxLength: 20\r

            \      \r

            \      minLength: 1\r

            \      \r

            \      type: string\r

            \      \r

            \      description: AWEX-ID must conform to the current
            AWEX-ID code standard.\r

            \      \r

            \      nullable: true\r

            \      \r

            \    appraiserId:\r

            \    \r

            \      maxLength: 6\r

            \      \r

            \      minLength: 1\r

            \      \r

            \      type: string\r

            \      \r

            \      description: Contains the AWEX accredited
            appraiser ID for this lot.\r

            \      \r

            \      nullable: true\r

            \      \r

            \    classersRegisteredNumber:\r

            \    \r

            \      maxLength: 6\r

            \      \r

            \      minLength: 1\r

            \      \r

            \      type: string\r

            \      \r

            \      description: The AWEX stencil number of the
            classer or classing house responsible for the final classification
            of the wool before sale.\r

            \      \r

            \      nullable: true\r

            \      \r

            \    awexIdComment:\r

            \    \r

            \      maxLength: 14\r

            \      \r

            \      minLength: 1\r

            \      \r

            \      type: string\r

            \      \r

            \      description: This field provides for additional
            comments relating to the information contained in the `awexId`
            field.\r

            \      \r

            \      nullable: true\r

            \      \r

            \    awexIdAuditCode:\r

            \    \r

            \      maxLength: 10\r

            \      \r

            \      minLength: 1\r

            \      \r

            \      type: string\r

            \      \r

            \      description: Audit code used for verifying if
            `awexId` was issued by AWEX\r

            \      \r

            \      nullable: true"
      additionalProperties: false
    LotHeaderVendorDeclaration:
      type: object
      properties:
        qualitySchemes:
          type: array
          items:
            $ref: "#/components/schemas/QualitySchemeDetail"
          nullable: true
        mulesingStatus:
          $ref: "#/components/schemas/MulesingStatus"
      additionalProperties: false
    QualitySchemeDetail:
      type: object
      properties:
        qualityScheme:
          $ref: "#/components/schemas/QualityScheme"
        qualitySchemeRegistrationId:
          maxLength: 8
          minLength: 1
          type: string
          description: Registered Identification issued by the relevant Accreditation or
            Membership organisation.
          nullable: true
        qualitySchemeOtherDetail:
          maxLength: 13
          minLength: 1
          type: string
          description: Used to transmit (other) information relevant to the Scheme that is
            required by the buyer(e.g.Month/Year shorn).
          nullable: true
      additionalProperties: false
    QualityScheme:
      enum:
        - ASWG
        - AUTH
        - BETC
        - BIOC
        - DAL3
        - EUEC
        - MTEC
        - ACO
        - DBAA
        - USA
        - NASA
        - SXC
        - RWS
        - SBFC
        - SW
        - SWAU
        - TQMS
        - FAP
        - PWIA
        - FERN
      type: string
      description: "The registered four character or less quality scheme code: To
        obtain the current code list please go to this URL:
        http://www.awex.com.au/standards/catalogue/<br />ASWG: Australian
        Superfine Woolgrower Association (Member)<br />AUTH: Authentico<br
        />BETC: Better Choices (Pain Mitigation)<br />BIOC: BioClip
        (Biologically Harvested)<br />DAL3: Dalcare-3<br />EUEC: EU Eco label
        (meets EU Eco standards)<br />MTEC: Merino Tech WA<br />ACO: Organic -
        Australian Certified Organic<br />DBAA: Organic - Demeter Biodynamic
        Agriculture Aust.<br />USA: Organic - Meets USA Certification
        requirements<br />NASA: Organic - National Association for Sustainable
        Agriculture Aust.<br />SXC: Organic - Southern Cross Certified<br />RWS:
        Responsible Wool Standard<br />SBFC: Schute Bell Fibre Care<br />SW:
        SustainaWOOL<br />SWAU: SustainaWOOL Gold<br />TQMS: Traprock
        QMS/TIMS<br />FAP: Farm Assurance Program<br />PWIA: PGG Wrightson
        Integrity Assured<br />FERN: Woolcare Fernmark"
    MulesingStatus:
      enum:
        - NM
        - LN
        - CM
        - AA
        - M
        - ND
      type: string
      description: "NM: Non Mulesed<br />LN: Liquid Nitrogen<br />CM: Ceased
        Mulesing<br />AA: Mulesed with Analgesic &/or Anaesthetic<br />M:
        Mulesed<br />ND: Not Declared"
    TestDetails:
      required:
        - certificateIdentity
        - laboratory
        - reissueChargeFlag
        - testDetailsType
        - yield1
      type: object
      properties:
        testDetailsType:
          $ref: "#/components/schemas/TestDetailsType"
        certificateIdentity:
          $ref: "#/components/schemas/CertificateIdentity"
        charge:
          $ref: "#/components/schemas/Currency"
        laboratory:
          $ref: "#/components/schemas/Laboratory"
        regrabSampleWeight:
          $ref: "#/components/schemas/Weight"
        woolBase:
          pattern: ^-?\d{1,2}\.\d{2}$
          type: number
          format: double
          nullable: true
        airflowMean:
          pattern: ^-?\d{1,2}\.\d{1}$
          type: number
          format: double
          nullable: true
        vmb:
          pattern: ^-?\d{1,2}\.\d{1}$
          type: number
          format: double
          nullable: true
        hardHeadsBase:
          pattern: ^-?\d{1,2}\.\d{1}$
          type: number
          format: double
          nullable: true
        yield1:
          pattern: ^-?\d{1,3}\.\d{2}$
          type: number
          format: double
        yield2:
          pattern: ^-?\d{1,3}\.\d{2}$
          type: number
          format: double
          nullable: true
        yield3:
          pattern: ^-?\d{1,3}\.\d{2}$
          type: number
          format: double
          nullable: true
        yield4:
          pattern: ^-?\d{1,3}\.\d{2}$
          type: number
          format: double
          nullable: true
        yieldType1:
          $ref: "#/components/schemas/YieldType"
        yieldType2:
          $ref: "#/components/schemas/YieldType"
        retestFlag:
          $ref: "#/components/schemas/RetestFlag"
        yield5:
          pattern: ^-?\d{1,3}\.\d{2}$
          type: number
          format: double
          nullable: true
        reissueChargeFlag:
          $ref: "#/components/schemas/ReissueChargeFlag"
        vm1:
          pattern: ^-?\d{1,2}\.\d{1}$
          type: number
          format: double
          nullable: true
        vm2:
          pattern: ^-?\d{1,2}\.\d{1}$
          type: number
          format: double
          nullable: true
        vm3:
          pattern: ^-?\d{1,2}\.\d{1}$
          type: number
          format: double
          nullable: true
        darkAndMedullatedFibreRisk:
          $ref: "#/components/schemas/DarkAndMedullatedFibreRisk"
        ashContentDryBasis:
          pattern: ^-?\d{1,2}\.\d{2}$
          type: number
          format: double
          nullable: true
        alcoholExtractableMatterDryBasis:
          pattern: ^-?\d{1,2}\.\d{2}$
          type: number
          format: double
          nullable: true
      additionalProperties: false
    TestDetailsType:
      enum:
        - P
        - F
        - I
        - M
        - N
        - R
        - W
        - Y
      type: string
      description: "P: Core Test Details<br />F: Premium Test Details<br />I:
        Subjective Interlot Details<br />M: OML Details<br />N: OMI Details<br
        />R: Guidance Report Details<br />W: Scoured Test Details<br />Y:
        Post-Sale Core Test Details"
    CertificateIdentity:
      required:
        - certificateIDCD
        - certificateIDNumber
        - certificateIDPrefix
        - certificateIDSuffix
      type: object
      properties:
        certificateIDPrefix:
          $ref: "#/components/schemas/CertificateIDPrefix"
        certificateIDNumber:
          maxLength: 8
          minLength: 1
          type: integer
          format: int32
        certificateIDSuffix:
          $ref: "#/components/schemas/CertificateIDSuffix"
        certificateIDCD:
          maxLength: 1
          minLength: 1
          type: integer
          format: int32
      additionalProperties: false
    CertificateIDPrefix:
      enum:
        - 2
        - 3
        - 6
      type: integer
      description: "2: Sydney Laboratory<br />3: Melbourne Laboratory<br />6:
        Fremantle Laboratory"
      format: int32
    CertificateIDSuffix:
      enum:
        - B
        - C
        - D
        - F
        - I
        - J
        - L
        - M
        - N
        - Q
        - P
        - R
        - W
        - Y
      type: string
      description: "B: Bulk Class<br />C: Colour<br />D: PTC (Pre-Sale Test
        Certificate – Other Grower Lot)<br />F: Premium Test<br />I:
        Subjectively Appraised Interlot<br />J: Combination - Yield & Micron,
        Length & Strength, Colour<br />L: Length & Strength<br />M: Objectively
        Matched Lot<br />N: Objectively matched Interlot<br />Q: Bulk Class –
        Quality Managed<br />P: PTC (Pre-sale Test Certificate - Classed Grower
        Lot)<br />R: Guidance Report<br />W: Scoured Wool<br />Y: Post sale Core
        Test"
    Laboratory:
      enum:
        - 1
        - 2
        - 3
        - 4
      type: integer
      description: "The code for a Test House.<br />1: Australian Wool Testing
        Authority<br />2: N.Z. Wool Testing Authority<br />3: N.Z. Wool Testing
        Service<br />4: South African Wool Testing Authority"
      format: int32
    RetestFlag:
      enum:
        - 0
        - 1
        - 2
      type: integer
      description: "0: Normal Test<br />1: Retest<br />2: Check Test"
      format: int32
    ReissueChargeFlag:
      enum:
        - 0
        - 1
        - 2
        - 3
      type: integer
      description: "0: Original certificate charge<br />1: Re-issued no charge<br />2:
        Re-issued with additional Charge<br />3: Re-issued with replacement
        charge (credit issued against original certificate)"
      format: int32
    DarkAndMedullatedFibreRisk:
      enum:
        - E
        - N
        - D
        - "1"
        - "2"
        - "3"
        - "4"
        - "5"
        - "6"
      type: string
      description: "E: Error in Processing<br />N: Not Applicable<br />D: Not
        Declared<br />1: Risk Level 1 (lowest)<br />2: Risk Level 2<br />3: Risk
        Level 3<br />4: Risk Level 4<br />5: Risk Level 5<br />6: Risk Level 6"
    ColourTestDetails:
      required:
        - calibrationFlag
        - certificateIdentity
        - colourTestDetailsType
        - dateIssued
        - laboratory
        - reissueChargeFlag
      type: object
      properties:
        colourTestDetailsType:
          $ref: "#/components/schemas/ColourTestDetailsType"
        certificateIdentity:
          $ref: "#/components/schemas/CertificateIdentity"
        charge:
          $ref: "#/components/schemas/Currency"
        laboratory:
          $ref: "#/components/schemas/Laboratory"
        regrabSampleWeight:
          $ref: "#/components/schemas/Weight"
        colourX:
          pattern: ^-?\d{1,2}\.\d{1}$
          type: number
          format: double
          nullable: true
        colourY:
          pattern: ^-?\d{1,2}\.\d{1}$
          type: number
          format: double
          nullable: true
        colourZ:
          pattern: ^-?\d{1,2}\.\d{1}$
          type: number
          format: double
          nullable: true
        colourYZ:
          pattern: ^-?\d{1,3}\.\d{1}$
          type: number
          format: double
          nullable: true
        colourXMinimum:
          pattern: ^-?\d{1,2}\.\d{1}$
          type: number
          format: double
          nullable: true
        colourXMaximum:
          pattern: ^-?\d{1,2}\.\d{1}$
          type: number
          format: double
          nullable: true
        colourYMinimum:
          pattern: ^-?\d{1,2}\.\d{1}$
          type: number
          format: double
          nullable: true
        colourYMaximum:
          pattern: ^-?\d{1,2}\.\d{1}$
          type: number
          format: double
          nullable: true
        colourZMinimum:
          pattern: ^-?\d{1,2}\.\d{1}$
          type: number
          format: double
          nullable: true
        colourZMaximum:
          pattern: ^-?\d{1,2}\.\d{1}$
          type: number
          format: double
          nullable: true
        colourYZMinimum:
          pattern: ^-?\d{1,3}\.\d{1}$
          type: number
          format: double
          nullable: true
        colourYZMaximum:
          pattern: ^-?\d{1,3}\.\d{1}$
          type: number
          format: double
          nullable: true
        coreBulkValue:
          maxLength: 2
          minLength: 1
          type: string
          nullable: true
        reissueChargeFlag:
          $ref: "#/components/schemas/ReissueChargeFlag"
        colourXAsIs:
          pattern: ^-?\d{1,2}\.\d{1}$
          type: number
          format: double
          nullable: true
        colourYAsIs:
          pattern: ^-?\d{1,2}\.\d{1}$
          type: number
          format: double
          nullable: true
        colourZAsIs:
          pattern: ^-?\d{1,2}\.\d{1}$
          type: number
          format: double
          nullable: true
        colourYZAsIs:
          pattern: ^-?\d{1,3}\.\d{1}$
          type: number
          format: double
          nullable: true
        calibrationFlag:
          $ref: "#/components/schemas/CalibrationFlag"
        dateIssued:
          maxLength: 10
          minLength: 1
          pattern: /(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$/
          type: string
          description: Date value in ISO 8601 standard UTC date format. e.g. 2024-03-21
            (YYYY-MM-DD)
          format: date
      additionalProperties: false
    ColourTestDetailsType:
      enum:
        - C
        - X
      type: string
      description: "C: Colour Test Details<br />X: Colour Combination Test Details"
    CalibrationFlag:
      enum:
        - O
        - N
      type: string
      description: "O: The values for Colour X, Y, Z and Y-Z have been measured by an
        instrument calibrated to reference wool, based on illuminant C and 2º
        observer angle. Old calibration has been deactivated as at 1st January
        2001.<br />N: The values for Colour X, Y, Z and Y-Z have been measured
        by an instrument calibrated to certified tiles, based on illuminant D65
        and 10º observer angle, and corrected for any glass effects"
    LengthAndStrengthTestDetails:
      required:
        - certificateIdentity
        - dateIssued
        - isLsSampleSecured
        - laboratory
        - lengthAndStrengthTestDetailsType
        - lsCertType
        - positionOfBreakPercentageBase
        - positionOfBreakPercentageMiddle
        - positionOfBreakPercentageTip
        - stapleLength
        - stapleLengthCvPercentage
        - stapleLengthMaximum
        - stapleStrength
      type: object
      properties:
        lengthAndStrengthTestDetailsType:
          $ref: "#/components/schemas/LengthAndStrengthTestDetailsType"
        certificateIdentity:
          $ref: "#/components/schemas/CertificateIdentity"
        charge:
          $ref: "#/components/schemas/Currency"
        laboratory:
          $ref: "#/components/schemas/Laboratory"
        regrabSampleWeight:
          $ref: "#/components/schemas/Weight"
        stapleLength:
          pattern: -?\d{1,3}
          type: integer
          description: The mean length of a staple from tip to base. At least 60 staples
            are measured for each test lot.
          format: int32
        stapleLengthMinimum:
          pattern: -?\d{1,3}
          type: integer
          description: "The mean length of a staple from tip to base. At least 60 staples
            are measured for each test lot. \r

            \            \r

            Minimum - the lowest value in a range of staple length
            values."
          format: int32
          nullable: true
        stapleLengthMaximum:
          pattern: -?\d{1,3}
          type: integer
          description: "The mean length of a staple from tip to base. At least 60 staples
            are measured for each test lot. \r

            \            \r

            Maximum - the highest value in a range of staple length
            values."
          format: int32
        stapleStrengthMinimum:
          pattern: -?\d{1,3}
          type: integer
          description: "The force required to break a staple of given thickness. \r

            \            \r

            The average strength is expressed in Newtons per
            kilotex.Individual staples range in strength from 0 to 100 Newtons
            per kilotex\r

            \            \r

            Minimum - The lowest value in a range of staple strength
            values"
          format: int32
          nullable: true
        stapleStrengthMaximum:
          pattern: -?\d{1,3}
          type: integer
          description: "The force required to break a staple of given thickness. \r

            \            \r

            The average strength is expressed in Newtons per
            kilotex.Individual staples range in strength from 0 to 100 Newtons
            per kilotex\r

            \            \r

            Maximum - The highest value in a range of staple
            strength value"
          format: int32
          nullable: true
        stapleLengthCvPercentage:
          pattern: -?\d{1,2}
          type: integer
          description: Staple length coefficient of variation. This is a measurement of
            the staple length variability and is reported as a percentage.
          format: int32
        stapleStrength:
          pattern: -?\d{1,3}
          type: integer
          description: "The force required to break a staple of given thickness. \r

            \            \r

            The average strength is expressed in Newtons per
            kilotex.Individual staples range in strength from 0 to 100 Newtons
            per kilotex"
          format: int32
        positionOfBreakPercentageTip:
          pattern: -?\d{1,3}
          type: integer
          description: "The position of break indicates the location of the weakest part
            of the staple.\r

            \            \r

            Tip - Percentage of wool staple with a tip section
            position of break."
          format: int32
        positionOfBreakPercentageMiddle:
          pattern: -?\d{1,3}
          type: integer
          description: "The position of break indicates the location of the weakest part
            of the staple. \r

            \            \r

            Middle - Percentage of wool staples with a middle
            section position of break."
          format: int32
        positionOfBreakPercentageBase:
          pattern: -?\d{1,3}
          type: integer
          description: "The position of break indicates the location of the weakest part
            of the staple.\r

            \r

            Base - Percentage of wool staples with a base section
            position of break."
          format: int32
        team3Hauteur:
          pattern: -?\d{1,3}
          type: integer
          description: "Predicted Fibre Length in the Top. NOTE: Any certificate issued
            (or reissued with a new Certificate ID Number) from 1st July, 2006
            will be based on the TEAM-3 calculations. \r

            \            \r

            Anything issued prior to 1st July, 2006 will be based on
            the TEAM-2 calculations.\r

            \            \r

            A check against the Date Issued field in the 51L or 51K
            record will determine which TEAM formula has been used."
          format: int32
          nullable: true
        reissueChargeFlag:
          $ref: "#/components/schemas/ReissueChargeFlag"
        lsCertType:
          $ref: "#/components/schemas/LsCertType"
        isLsSampleSecured:
          maxLength: 5
          minLength: 4
          type: boolean
          description: "A boolean value to indicate whether the LS-sample is secured.\r

            \            \r

            true: secured\r

            \            \r

            false: not secured"
        expectedBarbe:
          pattern: -?\d{1,3}
          type: integer
          description: "Expected Barbe length in the Top. Used for NZ Crossbred wool
            certificates based on the 2016 calculation. \r

            \            \r

            Any Length and Strength certificate for NZ Crossbred
            wool will include a calculated Barbe value based on the 2016
            calculation."
          format: int32
          nullable: true
        team3HauteurCvPercentage:
          pattern: ^-?\d{1,2}\.\d{1}$
          type: number
          description: "Coefficient of Variation of Hauteur. NOTE: Refer to note in
            `Team3Hauteur`."
          format: double
          nullable: true
        team3RomainePercentage:
          pattern: ^-?\d{1,2}\.\d{1}$
          type: number
          description: "Romaine. NOTE: Refer to note in `Team3Hauteur`."
          format: double
          nullable: true
        dateIssued:
          maxLength: 10
          minLength: 1
          pattern: /(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$/
          type: string
          description: Date in ISO 8601 standard UTC date format. e.g. 2024-03-21
            (YYYY-MM-DD)
          format: date
        stapleStrengthLowest25Percent:
          pattern: -?\d{1,2}
          type: integer
          description: Average Staple Strength of the lowest 25% of staples measured for
            Strength.
          format: int32
          nullable: true
      additionalProperties: false
    LengthAndStrengthTestDetailsType:
      enum:
        - L
        - K
      type: string
      description: "L: Length And Strength Test Details<br />K: Length And Strength
        Combination Test Details"
    LsCertType:
      enum:
        - 0
        - 1
        - 2
      type: integer
      description: "0: Length & Strength tested<br />1: Length only test requested<br
        />2: Insufficient staples"
      format: int32
    CombinationDetails:
      required:
        - cleanWeight1
        - combinationFlag
      type: object
      properties:
        cleanWeight1:
          $ref: "#/components/schemas/Weight"
        cleanWeight2:
          $ref: "#/components/schemas/Weight"
        cleanWeight3:
          $ref: "#/components/schemas/Weight"
        cleanWeight4:
          $ref: "#/components/schemas/Weight"
        cleanWeight5:
          $ref: "#/components/schemas/Weight"
        vmbMinimum:
          pattern: ^-?\d{1,2}\.\d{1}$
          type: number
          description: VMB - Minimum value.
          format: double
          nullable: true
        vmbMaximum:
          pattern: ^-?\d{1,2}\.\d{1}$
          type: number
          description: VMB - Maximum value.
          format: double
          nullable: true
        factorWoolBase:
          pattern: ^-?\d{1,8}\.\d{2}$
          type: number
          description: Factor for Wool Base.
          format: double
          nullable: true
        factorVMB:
          pattern: ^-?\d{1,7}\.\d{2}$
          type: number
          description: Factor for VMB.
          format: double
          nullable: true
        factorHardHeadsBase:
          pattern: ^-?\d{1,7}\.\d{2}$
          type: number
          description: Factor for Hard Heads Base.
          format: double
          nullable: true
        factorAirflowMean:
          pattern: ^-?\d{1,6}\.\d{6}$
          type: number
          description: Factor for Airflow Mean. Factor used in combination calculation.
          format: double
          nullable: true
        combinationFlag:
          $ref: "#/components/schemas/CombinationFlag"
      additionalProperties: false
    CombinationFlag:
      enum:
        - N
        - S
        - "4"
        - "5"
        - "6"
        - "7"
        - "8"
        - "9"
        - A
        - B
        - C
        - D
        - E
        - F
      type: string
      description: "This field indicates the following: If an Australian Securities
        Exchange combination was requested and the combination satisfies the
        contract parameters of ASX the appropriate flag will be transmitted.<br
        />N. Normal Combination<br />S. ASX24 Combination (formerly SFE)<br />4.
        ASX19.5 54W Combination<br />5. ASX21.0 55W Combination<br />6. ASX22.6
        56W Combination<br />7. ASX19.5 54W, ASX21.0 55W and ASX22.6 56W
        Combination<br />8. ASX19.5 54W and ASX21.0 55W Combination<br />9:
        ASX21.0 55W and ASX22.6 56W Combination<br />A. ICAP Wool Contract -
        China Type 54P<br />B. ICAP Wool Contract - China Type 54<br />C. ICAP
        Wool Contract - China Type 55<br />D. ICAP Wool Contract - China Type
        56<br />E. ICAP Wool Contract - China Type 424<br />F. ICAP Wool
        Contract - China Type Standard"
    FibreDiameterHistogram:
      type: object
      properties:
        fibreDiameterHistogramHeader:
          $ref: "#/components/schemas/FibreDiameterHistogramHeader"
        fibreDiameterHistogramDetails:
          type: array
          items:
            $ref: "#/components/schemas/FibreDiameterHistogramDetail"
          nullable: true
      additionalProperties: false
    FibreDiameterHistogramHeader:
      required:
        - coefficientOfVariation
        - comfortFactorPercentage
        - dateIssued
        - instrument
        - mean
        - numberOfSpecimens
        - reportingFlag
        - standardDeviation
        - subSamplingMethod
      type: object
      properties:
        coefficientOfVariation:
          pattern: ^-?\d{1,2}\.\d{1}$
          type: number
          format: double
        comfortFactorPercentage:
          pattern: ^-?\d{1,2}\.\d{1}$
          type: number
          description: Percentage of Fibres 30 Microns and under.
          format: double
        fibresMeasured:
          pattern: -?\d{1,6}
          type: integer
          format: int32
          nullable: true
        reportingFlag:
          $ref: "#/components/schemas/ReportingFlag"
        instrument:
          $ref: "#/components/schemas/Instrument"
        subSamplingMethod:
          $ref: "#/components/schemas/SubSamplingMethod"
        numberOfSpecimens:
          pattern: -?\d{1,4}
          type: integer
          format: int32
        mean:
          pattern: ^-?\d{1,2}\.\d{1}$
          type: number
          format: double
        standardDeviation:
          pattern: ^-?\d{1,2}\.\d{1}$
          type: number
          format: double
        curvatureMeanDegPerMm:
          pattern: -?\d{1,3}
          type: integer
          format: int32
          nullable: true
        meanMinimum:
          pattern: ^-?\d{1,2}\.\d{1}$
          type: number
          format: double
          nullable: true
        meanMaximum:
          pattern: ^-?\d{1,2}\.\d{1}$
          type: number
          format: double
          nullable: true
        coreTestSamplingDate:
          maxLength: 10
          minLength: 1
          pattern: /(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$/
          type: string
          description: "For records 31 and 55 this is the date core test was sampled or
            date combination/OML was requested.\r

            \r

            For the 21A record this is the date the core test was
            sampled, the last date of weighing for untested wool or the date the
            Combination/OML was requested.\r

            \r

            Date value in ISO 8601 standard UTC date format. e.g.
            2024-03-21."
          format: date
          nullable: true
        dateIssued:
          maxLength: 10
          minLength: 1
          pattern: /(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$/
          type: string
          description: Date value in ISO standard UTC date format. e.g. 2024-03-21
            (YYYY-MM-DD).
          format: date
        factorLaserscanNumerator:
          pattern: ^-?\d{1,10}\.\d{6}$
          type: number
          format: double
          nullable: true
        factorLaserscanDenominator:
          pattern: ^-?\d{1,9}\.\d{6}$
          type: number
          format: double
          nullable: true
      additionalProperties: false
    Instrument:
      enum:
        - 1
        - 2
      type: integer
      description: "1: Laserscan<br />2: OFDA"
      format: int32
    SubSamplingMethod:
      enum:
        - 1
      type: integer
      description: "1: Minicore"
      format: int32
    FibreDiameterHistogramDetail:
      required:
        - fibreMeasurements
      type: object
      properties:
        fibreMeasurements:
          type: array
          items:
            $ref: "#/components/schemas/FibreDiameterHistogramDetailMeasurement"
      additionalProperties: false
    FibreDiameterHistogramDetailMeasurement:
      required:
        - fibreDiameter
        - fibresMeasuredPercentage
      type: object
      properties:
        fibreDiameter:
          pattern: -?\d{1,2}
          type: integer
          description: Fibre Diameter for the measurement.
          format: int32
        fibresMeasuredPercentage:
          pattern: ^-?\d{1,2}\.\d{4}$
          type: number
          description: Percentage of fibres measured for the measurement.
          format: double
      additionalProperties: false
    CatalogueLotDescription:
      required:
        - baleDescription
        - bales
        - brand
      type: object
      properties:
        brand:
          maxLength: 30
          minLength: 1
          type: string
        baleDescription:
          maxLength: 15
          minLength: 1
          type: string
        areaOfOrigin:
          maxLength: 4
          minLength: 1
          type: string
          nullable: true
        locationWithinStore:
          maxLength: 20
          minLength: 1
          type: string
          nullable: true
        bales:
          pattern: -?\d{1,4}
          type: integer
          format: int32
        postcode:
          maxLength: 4
          minLength: 1
          type: string
          nullable: true
      additionalProperties: false
    BaleIdentification:
      type: object
      properties:
        baleNumber:
          maxLength: 5
          minLength: 1
          type: string
          nullable: true
        eBaleId:
          maxLength: 30
          minLength: 1
          type: string
          nullable: true
      additionalProperties: false
    InterlotComponentBale:
      required:
        - interlotComponentBaleHeader
      type: object
      properties:
        interlotComponentBaleHeader:
          $ref: "#/components/schemas/InterlotComponentBaleHeader"
        baleIdentifications:
          type: array
          items:
            $ref: "#/components/schemas/BaleIdentification"
          nullable: true
      additionalProperties: false
    InterlotComponentBaleHeader:
      required:
        - baleDescription
        - bales
        - brand
      type: object
      properties:
        brand:
          maxLength: 30
          minLength: 1
          type: string
        baleDescription:
          maxLength: 15
          minLength: 1
          type: string
        areaOfOrigin:
          maxLength: 4
          minLength: 1
          type: string
          nullable: true
        locationWithinStore:
          maxLength: 20
          minLength: 1
          type: string
          nullable: true
        bales:
          pattern: -?\d{1,4}
          type: integer
          format: int32
        postcode:
          maxLength: 20
          minLength: 1
          type: string
          nullable: true
      additionalProperties: false
    ApiResult:
      type: object
      properties:
        message:
          $ref: "#/components/schemas/ApiMessage"
        data:
          description: Contains response data. e.g. Auction Catalogue
          nullable: true
      additionalProperties: false
      description: A standard API response object used for all successful API responses
    ApiMessage:
      type: object
      properties:
        message:
          type: string
          nullable: true
        warningCodes:
          type: array
          items:
            $ref: "#/components/schemas/WarningCode"
          nullable: true
        informationCodes:
          type: array
          items:
            $ref: "#/components/schemas/InformationCode"
          nullable: true
      additionalProperties: false
    WarningCode:
      enum:
        - "11"
        - "12"
        - "13"
        - "18"
        - "19"
        - "20"
        - "24"
        - DRVnn
      type: string
      description: "A code to indicate the different types of errors.<br />11: Weight
        Note suffix is not numeric or has been omitted.<br />12: Number of bales
        is invalid or has been omitted.<br />13: Sale identification has been
        omitted.<br />18: Invalid Gross weight.<br />19: Invalid Tare weight.<br
        />20: Invalid Centre/Client code on pre-sale test request.<br />24:
        Incorrect PCTR Hash total.<br />DRVnn: Dark and Medullated Fibre Risk
        error where nn is the field number in error."
    InformationCode:
      enum:
        - OK
      type: string
      description: "A code to indicate the information.\r

        \r

        For AC, PC LI and GI transmissions, one record will be sent for
        each Wool Sale Header Lots received.\r

        \r

        OK - aaaaaDATA RECEIVED OK FOR aann/nn dd/mm/yy ooooo LOTS
        nnnn\r

        \r

        Where aann/nn = sale number/season\r

        \    \r

        dd/mm/yy = sale date\r

        \    \r

        ooooo = selling organisation\r

        \    \r

        nnnnn = number of lots\r

        \    \r

        Reason - You have sent data to the network and it has been
        received with no communication or transmission errors.\r

        \r

        Action - None.\r

        \r

        OR\r

        \r

        For all other types of transmissions, one record will be sent
        for each transmission file received.\r

        \r

        OK - ALL aaaaa DATA RECEIVED OK\r

        \r

        Reason - You have sent data to the network and it has been
        received with no communication or transmission errors.\r

        \r

        Action - None."
    ApiErrorResult:
      required:
        - status
        - title
      type: object
      properties:
        type:
          type: string
          description: "A URI reference [RFC3986] that identifies the problem type.\r

            \r

            This specification encourages that, when dereferenced,
            it provide human-readable documentation for the problem type (e.g.,
            using HTML [W3C.REC-html5-20141028]). \r

            \            \r

            When this member is not present, its value is assumed to
            be \"about:blank\".\r

            \r

            e.g. For 400 Bad Request, the \"type\" value can be
            \"https://tools.ietf.org/html/rfc9110#section-15.5.1\""
          nullable: true
        title:
          minLength: 1
          type: string
          description: "A short, human-readable summary of the problem type.\r

            \r

            It SHOULD NOT change from occurrence to occurrence of
            the problem, except for purposes of localization(e.g., using
            proactive content negotiation; see[RFC7231], Section 3.4).\r

            \r

            e.g. \"One or more validation errors occurred.\""
        status:
          type: integer
          description: The HTTP status code ([RFC7231], Section 6) generated by the origin
            server for this occurrence of the problem.
          format: int32
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the
            problem. e.g. 400, 403, or business relared problem etc.
          nullable: true
        errors:
          $ref: "#/components/schemas/CustomErrors"
      additionalProperties: false
      description: A machine-readable format for specifying errors in HTTP API
        responses based on https://tools.ietf.org/html/rfc7807.
    CustomErrors:
      type: object
      properties:
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
            nullable: true
          description: 'Dictionary of errors in <PropertyName, ErrorDetails[]> format.
            e.g. errors: { "name": ["Product name is required"], "category":
            ["Category name cannot be longer than 20 characters."]  }'
          nullable: true
        errorCodes:
          type: array
          items:
            $ref: "#/components/schemas/ErrorCode"
          nullable: true
      additionalProperties: false
    ErrorCode:
      enum:
        - DOXCT
        - INVTC
        - INVFR
        - INVAC
        - INVCR
        - INVDO
        - INVSO
        - INVEX
      type: string
      description: "A code to indicate the different types of errors.<br />DOXCT:
        Document originator does not match current transmitter.<br />INVTC:
        Invalid transfer config. All data rejected.<br />INVFR: Invalid/missing
        FinalReceiverList record. All data rejected.<br />INVAC: Invalid sale
        aann/nn dd/mm/yy ooooo. All data rejected.<br />INVCR: Current receiver
        not awtm. All data rejected.<br />INVDO: Invalid document originator
        code aaaaa. Data accepted.<br />INVSO: Warning! Invalid selling org
        AAAAA using doc orig AAAAA.<br />INVEX: Invalid excluded record."
    WoolSaleRequestForData:
      required:
        - requestForDataType
        - transmissionHeader
        - woolSaleRequestForDataType
      type: object
      properties:
        transmissionHeader:
          $ref: "#/components/schemas/TransmissionHeader"
        woolSaleRequestForDataType:
          $ref: "#/components/schemas/WoolSaleRequestForDataType"
        requestForDataType:
          oneOf:
            - $ref: "#/components/schemas/UseNetworkDateTimeRequestForDataType"
            - $ref: "#/components/schemas/DateTimeRangeRequestForDataType"
      additionalProperties: false
    WoolSaleRequestForDataType:
      type: object
      properties:
        catalogueTransmissionType:
          $ref: "#/components/schemas/CatalogueTransmissionType"
        saleIdentity:
          $ref: "#/components/schemas/SaleIdentity"
        organisationRequested:
          $ref: "#/components/schemas/Organisation"
        saleDateRequested:
          maxLength: 10
          minLength: 1
          pattern: /(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$/
          type: string
          description: Date value in ISO standard UTC date format. e.g. 2024-03-21
            (YYYY-MM-DD).
          format: date
          nullable: true
        woolTypeGroup:
          $ref: "#/components/schemas/WoolTypeGroup"
        itemsToBeExcluded:
          maxItems: 80
          minItems: 1
          type: array
          items:
            $ref: "#/components/schemas/ItemsToBeExcluded"
          description: "Catalouge field names to be excluded in the request.\r

            \r

            Only required for request for Catalogue. Not applicable
            for other documents."
          nullable: true
        season:
          pattern: -?\d{1,2}
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    CatalogueTransmissionType:
      enum:
        - 2
        - 3
        - 5
      type: integer
      description: " Used to define the types of Catalogue. Only required for
        requesting Catalouge. Not Applicable for other documents.<br />2:
        Auction Catalogues<br />3: Private Catalogues<br />5: Auction Catalogue
        Updates"
      format: int32
    ItemsToBeExcluded:
      enum:
        - encryptedLotHeaderAwexData
        - colourTestDetails
        - interlogComponentBales
        - baleIdentifications
        - fibreDiameterHistograms
        - fibreDiameterHistogramDetails
      type: string
    UseNetworkDateTimeRequestForDataType:
      required:
        - isUsingNetworkDateTime
      type: object
      properties:
        isUsingNetworkDateTime:
          maxLength: 5
          minLength: 4
          type: boolean
          description: "A boolean value to indicate whether to use network datetime.\r

            \r

            true: use network datetime.\r

            \r

            false: not use."
      additionalProperties: false
    DateTimeRangeRequestForDataType:
      required:
        - startDateTimeStatusRequest
      type: object
      properties:
        startDateTimeStatusRequest:
          maxLength: 20
          minLength: 1
          pattern: /(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T([01]\d|2[0-3]):([0-5]\d):([0-5]\d)Z$
          type: string
          description: Date and Time value in ISO 8601 standard UTC format. e.g.
            2024-03-21T19:25:04Z
          format: date-time
        endDateTimeStatusRequest:
          maxLength: 20
          minLength: 1
          pattern: /(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T([01]\d|2[0-3]):([0-5]\d):([0-5]\d)Z$
          type: string
          description: Date and Time value in ISO 8601 standard UTC format. e.g.
            2024-03-21T19:25:04Z
          format: date-time
          nullable: true
      additionalProperties: false
    CatalogueListApiResult:
      type: object
      properties:
        message:
          $ref: "#/components/schemas/ApiMessage"
        data:
          type: array
          items:
            $ref: "#/components/schemas/Catalogue"
          description: Contains response data. e.g. Auction Catalogue
          nullable: true
      additionalProperties: false
      description: A standard API response object used for all successful API responses
  securitySchemes:
    Bearer:
      type: apiKey
      description: 'JWT Access Token that is added in the Authorization header of the
        HTTP request. Example: "Authorization: Bearer {token}". The JWT serves
        as a credential that proves the identity of the client to the server.'
      name: Authorization
      in: header
    oauth2:
      type: oauth2
      description: Authentication for client applications by providing Client ID and
        Client Secret for an JWT Access Token.
      flows:
        clientCredentials:
          tokenUrl: /auth-server/oauth/token
          scopes: {}
security:
  - Bearer: []
